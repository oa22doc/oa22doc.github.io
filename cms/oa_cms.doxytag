<?xml version='1.0' encoding='ISO-8859-1' standalone='yes'?>
<tagfile>
  <compound kind="file">
    <name>oaChangeMgr.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/cms/</path>
    <filename>oaChangeMgr_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaChangeMgr.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/src/cm/</path>
    <filename>oaChangeMgr_8h</filename>
    <class kind="class">oaChangeMgr</class>
    <member kind="define">
      <type>#define</type>
      <name>oaChangeMgr_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaCMProtocolArray</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaChangeMgrObserver.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/cms/</path>
    <filename>oaChangeMgrObserver_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaChangeRec.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/cms/</path>
    <filename>oaChangeRec_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaChangeRec.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/src/cm/</path>
    <filename>oaChangeRec_8h</filename>
    <class kind="class">oaAttributeChangeRec</class>
    <class kind="class">oaChangeRec</class>
    <class kind="class">oaChangeRecVisitor</class>
    <class kind="class">oaConvertObjectChangeRec</class>
    <class kind="class">oaCreate1to1RelationshipChangeRec</class>
    <class kind="class">oaCreate1toNRelationshipChangeRec</class>
    <class kind="class">oaCreate2DTableRelationshipChangeRec</class>
    <class kind="class">oaCreateObjectChangeRec</class>
    <class kind="class">oaCreateRelationshipChangeRec</class>
    <class kind="class">oaDestroy1to1RelationshipChangeRec</class>
    <class kind="class">oaDestroy1toNRelationshipChangeRec</class>
    <class kind="class">oaDestroy2DTableRelationshipChangeRec</class>
    <class kind="class">oaDestroyObjectChangeRec</class>
    <class kind="class">oaDestroyRelationshipChangeRec</class>
    <class kind="class">oaExportMarkerChangeRec</class>
    <class kind="class">oaHierChangeRec</class>
    <class kind="class">oaLeafChangeRec</class>
    <class kind="class">oaMarkerChangeRec</class>
    <class kind="class">oaMarkerChangeRecType</class>
    <class kind="class">oaObjectChangeRec</class>
    <class kind="class">oaRelationshipChangeRec</class>
    <class kind="class">oaSetAttributeChangeRec</class>
    <class kind="class">oaTransientMarkerChangeRec</class>
    <class kind="class">oaUnsetAttributeChangeRec</class>
    <member kind="define">
      <type>#define</type>
      <name>oaChangeRec_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumMarkerChangeRecTypes</name>
      <anchor>a1</anchor>
      <init>8</init>
    </member>
    <member kind="enumeration">
      <name>oaMarkerChangeRecTypeEnum</name>
      <anchor>a11</anchor>
      <init>8</init>
    </member>
    <member kind="enumvalue">
      <name>oacChangeSetExportMarkerChangeRecType</name>
      <anchor>a11a3</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacDesignCpMarkerChangeRecType</name>
      <anchor>a11a4</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacDBLOOpenMarkerChangeRecType</name>
      <anchor>a11a5</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacDBLOSaveMarkerChangeRecType</name>
      <anchor>a11a6</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacDBLOSaveAsMarkerChangeRecType</name>
      <anchor>a11a7</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacDBLOPurgeMarkerChangeRecType</name>
      <anchor>a11a8</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacDBLOTruncateMarkerChangeRecType</name>
      <anchor>a11a9</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacTechCpMarkerChangeRecType</name>
      <anchor>a11a10</anchor>
      <init> 7</init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaChangeSet</name>
      <anchor>a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaChangeRec.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/src/cm/</path>
    <filename>oaChangeRec_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaChangeRec_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaChangeSet.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/cms/</path>
    <filename>oaChangeSet_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaChangeSet.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/src/cm/</path>
    <filename>oaChangeSet_8h</filename>
    <class kind="class">oaChangeSet</class>
    <class kind="class">oaChangeSetBase</class>
    <class kind="class">oaChangeSetVisitor</class>
    <member kind="define">
      <type>#define</type>
      <name>oaChangeSet_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaChangeSetVisitor</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaCM.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/src/cm/</path>
    <filename>oaCM_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaCM_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaCMAttr.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/cms/</path>
    <filename>oaCMAttr_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaCMAttr.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/src/cm/</path>
    <filename>oaCMAttr_8h</filename>
    <class kind="class">oaCMAttr</class>
    <class kind="class">oaCMAttrArray</class>
    <member kind="define">
      <type>#define</type>
      <name>oaCMAttr_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaString</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaCMBaseTypes.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/cms/</path>
    <filename>oaCMBaseTypes_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaCMBaseTypes.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/src/cm/</path>
    <filename>oaCMBaseTypes_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaCMBaseTypes_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OA_CM_DLL_API</name>
      <anchor>a1</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OA_CM_DLL_PVT</name>
      <anchor>a2</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OA_CM_DLL_EXPORT</name>
      <anchor>a3</anchor>
      <init></init>
    </member>
    <member kind="function">
      <type>BEGIN_OA_NAMESPACE OA_CM_DLL_API void</type>
      <name>oaCMInit</name>
      <anchor>oaCMInit</anchor>
      <arglist>(oaUInt4 apiMajorRev=oacAPIMajorRevNumber, oaUInt4 apiMinorRev=oacAPIMinorRevNumber)</arglist>
    </member>
    <member kind="function">
      <type>OA_CM_DLL_API void</type>
      <name>oaCMInit</name>
      <anchor>oaCMInit1</anchor>
      <arglist>(oaUInt4 apiMajorRev, oaUInt4 apiMinorRev, oaUInt4 dataModelRev)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaCMException.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/cms/</path>
    <filename>oaCMException_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaCMException.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/src/cm/</path>
    <filename>oaCMException_8h</filename>
    <class kind="class">oaCMError</class>
    <class kind="class">oaCMException</class>
    <member kind="define">
      <type>#define</type>
      <name>oaCMException_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaCMException.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/src/cm/</path>
    <filename>oaCMException_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaCMException_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaCMModTypes.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/src/cm/</path>
    <filename>oaCMModTypes_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaCMModTypes_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="enumeration">
      <name>oaChangeMgrModTypeEnum</name>
      <anchor>a4</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacUndoCrossChangeSetBoundaryModType</name>
      <anchor>a4a1</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacRevertCrossChangeSetBoundaryModType</name>
      <anchor>a4a2</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacPurgeCrossChangeSetBoundaryModType</name>
      <anchor>a4a3</anchor>
      <init> 4</init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaCMMsgs.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/src/cm/</path>
    <filename>oaCMMsgs_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaCMMsgs_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavCMMsgIdStartValue</name>
      <anchor>a1</anchor>
      <init>11000</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumCMMsgIds</name>
      <anchor>a2</anchor>
      <init>25</init>
    </member>
    <member kind="enumeration">
      <name>oaCMMsgIds</name>
      <anchor>a29</anchor>
      <init>26</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMTrackingNotInitialized</name>
      <anchor>a29a3</anchor>
      <init> oavCMMsgIdStartValue</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMExportNotInitialized</name>
      <anchor>a29a4</anchor>
      <init> 11001</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMChangeSetNotFound</name>
      <anchor>a29a5</anchor>
      <init> 11002</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMChangeSetAlreadyDefined</name>
      <anchor>a29a6</anchor>
      <init> 11003</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMInvalidPlugInProtocol</name>
      <anchor>a29a7</anchor>
      <init> 11004</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMPlugInAlreadyLoaded</name>
      <anchor>a29a8</anchor>
      <init> 11005</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMProtocolCannotBeSet</name>
      <anchor>a29a9</anchor>
      <init> 11006</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMProtocolNotFullySpecified</name>
      <anchor>a29a10</anchor>
      <init> 11007</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMProtocolArrayMatchNotFound</name>
      <anchor>a29a11</anchor>
      <init> 11008</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMProtocolMatchNotFound</name>
      <anchor>a29a12</anchor>
      <init> 11009</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMUnsetAttributesNotAllowed</name>
      <anchor>a29a13</anchor>
      <init> 11010</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMChangeSetIsActive</name>
      <anchor>a29a14</anchor>
      <init> 11011</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMChangeSetNotSet</name>
      <anchor>a29a15</anchor>
      <init> 11012</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMChangeSetAlreadyExported</name>
      <anchor>a29a16</anchor>
      <init> 11013</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMExportIsIncremental</name>
      <anchor>a29a17</anchor>
      <init> 11014</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMPlugInFailedToLoad</name>
      <anchor>a29a18</anchor>
      <init> 11015</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMCannotAddCRToChangeSet</name>
      <anchor>a29a19</anchor>
      <init> 11016</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMCannotAddGlobalCRToChangeSet</name>
      <anchor>a29a20</anchor>
      <init> 11017</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMCannotAddCRToDifferentChangeSet</name>
      <anchor>a29a21</anchor>
      <init> 11018</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMCannotRollBackCRWithoutDB</name>
      <anchor>a29a22</anchor>
      <init> 11019</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMMarkerCRInDifferentChangeSet</name>
      <anchor>a29a23</anchor>
      <init> 11020</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMDBMarkerCRMismatch</name>
      <anchor>a29a24</anchor>
      <init> 11021</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMInvalidMarkerCRTypeName</name>
      <anchor>a29a25</anchor>
      <init> 11022</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMInvalidGlobalCRType</name>
      <anchor>a29a26</anchor>
      <init> 11023</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMProtocolHasNotBeenSet</name>
      <anchor>a29a27</anchor>
      <init> 11024</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMInvalidEnumValue</name>
      <anchor>a29a28</anchor>
      <init> 11025</init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaCMObject.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/cms/</path>
    <filename>oaCMObject_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaCMObject.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/src/cm/</path>
    <filename>oaCMObject_8h</filename>
    <class kind="class">oaCMDatabaseRef</class>
    <class kind="class">oaCMDatabaseTbl</class>
    <class kind="class">oaCMObjectIDRef</class>
    <class kind="class">oaCMObjectRef</class>
    <class kind="class">oaCMObjectRefTbl</class>
    <class kind="class">oaCMObjectStateEntry</class>
    <class kind="class">oaCMObjectStateRef</class>
    <class kind="class">oaCMObjectStateTbl</class>
    <class kind="class">oaCMObjectVisitor</class>
    <class kind="class">oaCMStringEntry</class>
    <class kind="class">oaCMStringTbl</class>
    <member kind="define">
      <type>#define</type>
      <name>oaCMObject_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaCMObjectRefTbl</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaCMObject.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/src/cm/</path>
    <filename>oaCMObject_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaCMObject_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaCMObserver.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/cms/</path>
    <filename>oaCMObserver_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaCMObserver.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/cms/</path>
    <filename>oaCMObserver_8h</filename>
    <class kind="class">oaChangeSetObserver</class>
    <class kind="class">oaObserver&lt;oaChangeMgr&gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaCMObserver_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaChangeMgr</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaCMProtocol.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/cms/</path>
    <filename>oaCMProtocol_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaCMProtocol.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/src/cm/</path>
    <filename>oaCMProtocol_8h</filename>
    <class kind="class">oaCMProtocol</class>
    <class kind="class">oaCMProtocolArray</class>
    <member kind="define">
      <type>#define</type>
      <name>oaCMProtocol_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaPlugInCMInterfaces.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/plugin/</path>
    <filename>oaPlugInCMInterfaces_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaPlugInCMInterfaces.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/plugIn/</path>
    <filename>oaPlugInCMInterfaces_8h</filename>
    <class kind="class">ICMPlugInBase</class>
    <class kind="class">IExport</class>
    <class kind="class">ITracking</class>
    <member kind="define">
      <type>#define</type>
      <name>oaPlugInCMInterfaces_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="typedef">
      <type>IIter&lt; ITracking *,&amp;IID_ITrackingIter &gt;</type>
      <name>ITrackingIter</name>
      <anchor>a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>IIter&lt; IExport *,&amp;IID_IExportIter &gt;</type>
      <name>IExportIter</name>
      <anchor>a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaString</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>OA_PLUGIN_DLL_API const Guid</type>
      <name>IID_ITracking</name>
      <anchor>a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>OA_PLUGIN_DLL_API const Guid</type>
      <name>IID_ITrackingIter</name>
      <anchor>a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>OA_PLUGIN_DLL_API const Guid</type>
      <name>IID_IExport</name>
      <anchor>a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>OA_PLUGIN_DLL_API const Guid</type>
      <name>IID_IExportIter</name>
      <anchor>a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sdAttribute.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdAttribute_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdAttribute.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdAttribute_8h</filename>
    <class kind="class">sdAttribute</class>
    <class kind="class">sdAttributeActionType</class>
    <class kind="class">sdAttributeContainerType</class>
    <member kind="define">
      <type>#define</type>
      <name>sdAttribute_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumAttributeActionTypes</name>
      <anchor>a1</anchor>
      <init>4</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumAttributeContainerTypes</name>
      <anchor>a2</anchor>
      <init>3</init>
    </member>
    <member kind="enumeration">
      <name>sdAttributeActionTypeEnum</name>
      <anchor>a11</anchor>
      <init>4</init>
    </member>
    <member kind="enumvalue">
      <name>sdcGetAttributeActionType</name>
      <anchor>a11a4</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcSetAttributeActionType</name>
      <anchor>a11a5</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>sdcUnsetAttributeActionType</name>
      <anchor>a11a6</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInitAttributeActionType</name>
      <anchor>a11a7</anchor>
      <init> 8</init>
    </member>
    <member kind="enumeration">
      <name>sdAttributeContainerTypeEnum</name>
      <anchor>a12</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>sdcSingleAttributeContainerType</name>
      <anchor>a12a8</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcArrayAttributeContainerType</name>
      <anchor>a12a9</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcCollectionAttributeContainerType</name>
      <anchor>a12a10</anchor>
      <init> 2</init>
    </member>
    <member kind="variable">
      <type>BEGIN_SD_NAMESPACE class</type>
      <name>sdObject</name>
      <anchor>a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sdAttribute.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdAttribute_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>sdAttribute_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdBase.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdBase_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdBase.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdBase_8h</filename>
    <class kind="class">sdBase</class>
    <class kind="class">sdObjectType</class>
    <member kind="define">
      <type>#define</type>
      <name>sdBase_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumObjectTypes</name>
      <anchor>a1</anchor>
      <init>4</init>
    </member>
    <member kind="enumeration">
      <name>sdObjectTypeEnum</name>
      <anchor>a7</anchor>
      <init>4</init>
    </member>
    <member kind="enumvalue">
      <name>sdcValueObjectType</name>
      <anchor>a7a3</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcAttributeObjectType</name>
      <anchor>a7a4</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcRelationshipObjectType</name>
      <anchor>a7a5</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>sdcObjectObjectType</name>
      <anchor>a7a6</anchor>
      <init> 3</init>
    </member>
    <member kind="variable">
      <type>BEGIN_SD_NAMESPACE class</type>
      <name>sdNameSpace</name>
      <anchor>a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sdBase.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdBase_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>sdBase_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdException.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdException_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdException.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdException_8h</filename>
    <class kind="class">sdError</class>
    <class kind="class">sdException</class>
    <member kind="define">
      <type>#define</type>
      <name>sdException_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdException.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdException_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>sdException_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdMsgs.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdMsgs_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>sdMsgs_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvMsgIdStartValue</name>
      <anchor>a1</anchor>
      <init>7000</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumMsgIds</name>
      <anchor>a2</anchor>
      <init>26</init>
    </member>
    <member kind="enumeration">
      <name>sdMsgIds</name>
      <anchor>a29</anchor>
      <init>26</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidObjectTypeName</name>
      <anchor>a29a3</anchor>
      <init> sdvMsgIdStartValue</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidValueSubTypeName</name>
      <anchor>a29a4</anchor>
      <init> 7001</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidAttributeActionTypeName</name>
      <anchor>a29a5</anchor>
      <init> 7002</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidAttributeContainerTypeName</name>
      <anchor>a29a6</anchor>
      <init> 7003</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidRelationshipOrderingTypeName</name>
      <anchor>a29a7</anchor>
      <init> 7004</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidRelationshipAssociationTypeName</name>
      <anchor>a29a8</anchor>
      <init> 7005</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidRelationshipMultiplicityTypeName</name>
      <anchor>a29a9</anchor>
      <init> 7006</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidRelationshipActionTypeName</name>
      <anchor>a29a10</anchor>
      <init> 7007</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidRelationshipSubTypeName</name>
      <anchor>a29a11</anchor>
      <init> 7008</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidRelationshipContainerTypeName</name>
      <anchor>a29a12</anchor>
      <init> 7009</init>
    </member>
    <member kind="enumvalue">
      <name>sdcObjectAttributeInDifferentNamespaces</name>
      <anchor>a29a13</anchor>
      <init> 7010</init>
    </member>
    <member kind="enumvalue">
      <name>sdcObjectRelationshipInDifferentNamespaces</name>
      <anchor>a29a14</anchor>
      <init> 7011</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateValueIdInNamespace</name>
      <anchor>a29a15</anchor>
      <init> 7012</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateValueNameInNamespace</name>
      <anchor>a29a16</anchor>
      <init> 7013</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateAttributeIdInNamespace</name>
      <anchor>a29a17</anchor>
      <init> 7014</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateAttributeNameInNamespace</name>
      <anchor>a29a18</anchor>
      <init> 7015</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateRelationshipIdInNamespace</name>
      <anchor>a29a19</anchor>
      <init> 7016</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateRelationshipNameInNamespace</name>
      <anchor>a29a20</anchor>
      <init> 7017</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateObjectIdInNamespace</name>
      <anchor>a29a21</anchor>
      <init> 7018</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateObjectNameInNamespace</name>
      <anchor>a29a22</anchor>
      <init> 7019</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateNameSpaceNameInSession</name>
      <anchor>a29a23</anchor>
      <init> 7020</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateNameSpaceAliasNameInSession</name>
      <anchor>a29a24</anchor>
      <init> 7021</init>
    </member>
    <member kind="enumvalue">
      <name>sdcHierMemValueNotInDenepdentNameSpace</name>
      <anchor>a29a25</anchor>
      <init> 7022</init>
    </member>
    <member kind="enumvalue">
      <name>sdcSuperObjectNotInDenepdentNameSpace</name>
      <anchor>a29a26</anchor>
      <init> 7023</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDependentNameSpaceNotRegistered</name>
      <anchor>a29a27</anchor>
      <init> 7024</init>
    </member>
    <member kind="enumvalue">
      <name>sdcCannotDestroyAReferencedNameSpace</name>
      <anchor>a29a28</anchor>
      <init> 7025</init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdNameSpace.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdNameSpace_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdNameSpace.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdNameSpace_8h</filename>
    <class kind="class">sdNameSpace</class>
    <member kind="define">
      <type>#define</type>
      <name>sdNameSpace_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_SD_NAMESPACE class</type>
      <name>sdAttribute</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sdObject.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdObject_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdObject.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdObject_8h</filename>
    <class kind="class">sdObject</class>
    <class kind="class">sdObjectAttributeIter</class>
    <class kind="class">sdObjectMemberIter</class>
    <class kind="class">sdObjectRelationshipIter</class>
    <member kind="define">
      <type>#define</type>
      <name>sdObject_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_SD_NAMESPACE class</type>
      <name>sdObject</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sdObject.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdObject_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>sdObject_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdRelationship.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdRelationship_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdRelationship.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdRelationship_8h</filename>
    <class kind="class">sdRelationship</class>
    <class kind="class">sdRelationshipActionType</class>
    <class kind="class">sdRelationshipAssociationType</class>
    <class kind="class">sdRelationshipBase</class>
    <class kind="class">sdRelationshipContainerType</class>
    <class kind="class">sdRelationshipMultiplicityType</class>
    <class kind="class">sdRelationshipOrderingType</class>
    <class kind="class">sdRelationshipSet</class>
    <class kind="class">sdRelationshipSubType</class>
    <member kind="define">
      <type>#define</type>
      <name>sdRelationship_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumRelationshipOrderingTypes</name>
      <anchor>a1</anchor>
      <init>3</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumRelationshipAssociationTypes</name>
      <anchor>a2</anchor>
      <init>3</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumRelationshipMultiplicityTypes</name>
      <anchor>a3</anchor>
      <init>4</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumRelationshipActionTypes</name>
      <anchor>a4</anchor>
      <init>4</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumRelationshipSubTypes</name>
      <anchor>a5</anchor>
      <init>2</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumRelationshipContainerTypes</name>
      <anchor>a6</anchor>
      <init>4</init>
    </member>
    <member kind="enumeration">
      <name>sdRelationshipOrderingTypeEnum</name>
      <anchor>a28</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>sdcUnorderedRelationshipOrderingType</name>
      <anchor>a28a8</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcStrictlyOrderedRelationshipOrderingType</name>
      <anchor>a28a9</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcOptionallyOrderedRelationshipOrderingType</name>
      <anchor>a28a10</anchor>
      <init> 2</init>
    </member>
    <member kind="enumeration">
      <name>sdRelationshipAssociationTypeEnum</name>
      <anchor>a29</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>sdcOwnedRelationshipAssociationType</name>
      <anchor>a29a11</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcOwnerRelationshipAssociationType</name>
      <anchor>a29a12</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcPeerRelationshipAssociationType</name>
      <anchor>a29a13</anchor>
      <init> 2</init>
    </member>
    <member kind="enumeration">
      <name>sdRelationshipMultiplicityTypeEnum</name>
      <anchor>a30</anchor>
      <init>4</init>
    </member>
    <member kind="enumvalue">
      <name>sdcOneToOneRelationshipMultiplicityType</name>
      <anchor>a30a14</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcOneToZeroOrOneRelationshipMultiplicityType</name>
      <anchor>a30a15</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcOneToOneOrManyRelationshipMultiplicityType</name>
      <anchor>a30a16</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>sdcOneToZeroOrManyRelationshipMultiplicityType</name>
      <anchor>a30a17</anchor>
      <init> 3</init>
    </member>
    <member kind="enumeration">
      <name>sdRelationshipActionTypeEnum</name>
      <anchor>a31</anchor>
      <init>4</init>
    </member>
    <member kind="enumvalue">
      <name>sdcGetRelationshipActionType</name>
      <anchor>a31a18</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcCreateRelationshipActionType</name>
      <anchor>a31a19</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDestroyRelationshipActionType</name>
      <anchor>a31a20</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInitRelationshipActionType</name>
      <anchor>a31a21</anchor>
      <init> 8</init>
    </member>
    <member kind="enumeration">
      <name>sdRelationshipSubTypeEnum</name>
      <anchor>a32</anchor>
      <init>2</init>
    </member>
    <member kind="enumvalue">
      <name>sdcSingleRelationshipSubType</name>
      <anchor>a32a22</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcSetRelationshipSubType</name>
      <anchor>a32a23</anchor>
      <init> 1</init>
    </member>
    <member kind="enumeration">
      <name>sdRelationshipContainerTypeEnum</name>
      <anchor>a33</anchor>
      <init>4</init>
    </member>
    <member kind="enumvalue">
      <name>sdcSingleRelationshipContainerType</name>
      <anchor>a33a24</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcArrayRelationshipContainerType</name>
      <anchor>a33a25</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcCollectionRelationshipContainerType</name>
      <anchor>a33a26</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>sdc2DTableRelationshipContainerType</name>
      <anchor>a33a27</anchor>
      <init> 3</init>
    </member>
    <member kind="variable">
      <type>BEGIN_SD_NAMESPACE class</type>
      <name>sdObject</name>
      <anchor>a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sdRelationship.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdRelationship_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>sdRelationship_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdSession.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdSession_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdSession.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdSession_8h</filename>
    <class kind="class">sdSession</class>
    <member kind="define">
      <type>#define</type>
      <name>sdSession_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_SD_NAMESPACE class</type>
      <name>sdNameSpace</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sdValue.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdValue_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdValue.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdValue_8h</filename>
    <class kind="class">sdField</class>
    <class kind="class">sdHierValue</class>
    <class kind="class">sdLeafValue</class>
    <class kind="class">sdValue</class>
    <class kind="class">sdValueSubType</class>
    <member kind="define">
      <type>#define</type>
      <name>sdValue_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumValueSubTypes</name>
      <anchor>a1</anchor>
      <init>2</init>
    </member>
    <member kind="enumeration">
      <name>sdValueSubTypeEnum</name>
      <anchor>a4</anchor>
      <init>2</init>
    </member>
    <member kind="enumvalue">
      <name>sdcLeafValueSubType</name>
      <anchor>a4a2</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcHierValueSubType</name>
      <anchor>a4a3</anchor>
      <init> 1</init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdValue.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdValue_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>sdValue_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdVisitor.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdVisitor_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdVisitor.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdVisitor_8h</filename>
    <class kind="class">sdVisitor</class>
    <member kind="define">
      <type>#define</type>
      <name>sdVisitor_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_SD_NAMESPACE class</type>
      <name>sdLeafValue</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>srBase.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>srBase_8dox</filename>
  </compound>
  <compound kind="file">
    <name>srBase.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>srBase_8h</filename>
    <class kind="class">sr1to1Relationship</class>
    <class kind="class">sr1toNRelationship</class>
    <class kind="class">srAttributeBase</class>
    <class kind="class">srBase</class>
    <class kind="class">srObjectRef</class>
    <class kind="class">srObjectState</class>
    <class kind="class">srRelationshipBase</class>
    <class kind="class">srSDEnumLess</class>
    <class kind="class">srValueBase</class>
    <member kind="define">
      <type>#define</type>
      <name>srBase_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_SR_NAMESPACE class</type>
      <name>srVisitorMgr</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>srBase.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>srBase_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>srBase_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>srBaseTypes.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>srBaseTypes_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>srBaseTypes_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BEGIN_SR_NAMESPACE</name>
      <anchor>a1</anchor>
      <init>namespace SchemaRepresentation_1 {</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>END_SR_NAMESPACE</name>
      <anchor>a2</anchor>
      <init>}</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USE_SR_NAMESPACE</name>
      <anchor>a3</anchor>
      <init>using namespace SchemaRepresentation_1;</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SR_DLL_API</name>
      <anchor>a4</anchor>
      <init>OA_BASE_DLL_API</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SR_DLL_PVT</name>
      <anchor>a5</anchor>
      <init>OA_BASE_DLL_PVT</init>
    </member>
  </compound>
  <compound kind="file">
    <name>srVisitor.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>srVisitor_8dox</filename>
  </compound>
  <compound kind="file">
    <name>srVisitor.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>srVisitor_8h</filename>
    <class kind="class">srVisitor</class>
    <class kind="class">srVisitorMgr</class>
    <member kind="define">
      <type>#define</type>
      <name>srVisitor_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_SR_NAMESPACE class</type>
      <name>srObjectRef</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaAttributeChangeRec</name>
    <filename>classoaAttributeChangeRec.html</filename>
    <base>oaLeafChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaAttributeChangeRec</name>
      <anchor>oaAttributeChangeRec::oaAttributeChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaCMObjectRef::SPtr</type>
      <name>getOwner</name>
      <anchor>oaAttributeChangeRec::getOwner</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const sd::sdAttribute *</type>
      <name>getSchemaDefinition</name>
      <anchor>oaAttributeChangeRec::getSchemaDefinition</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMDatabaseRef::SPtr</type>
      <name>getDatabaseRef</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaChangeMgr</name>
    <filename>classoaChangeMgr.html</filename>
    <member kind="function">
      <type>void</type>
      <name>initTracking</name>
      <anchor>oaChangeMgr::initTracking</anchor>
      <arglist>(const oaString &amp;pluginName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initExport</name>
      <anchor>oaChangeMgr::initExport</anchor>
      <arglist>(const oaString &amp;pluginName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getTrackingProtocols</name>
      <anchor>oaChangeMgr::getTrackingProtocols</anchor>
      <arglist>(oaCMProtocolArray &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getExportProtocols</name>
      <anchor>oaChangeMgr::getExportProtocols</anchor>
      <arglist>(oaCMProtocolArray &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTrackingProtocol</name>
      <anchor>oaChangeMgr::setTrackingProtocol</anchor>
      <arglist>(const oaCMProtocol &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExportProtocol</name>
      <anchor>oaChangeMgr::setExportProtocol</anchor>
      <arglist>(const oaCMProtocol &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginTracking</name>
      <anchor>oaChangeMgr::beginTracking</anchor>
      <arglist>(const oaString &amp;nameIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endTracking</name>
      <anchor>oaChangeMgr::endTracking</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exportFull</name>
      <anchor>oaChangeMgr::exportFull</anchor>
      <arglist>(const oaString &amp;changeSetName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exportIncr</name>
      <anchor>oaChangeMgr::exportIncr</anchor>
      <arglist>(const oaString &amp;changeSetName)</arglist>
    </member>
    <member kind="function">
      <type>oaChangeSetBase *</type>
      <name>findChangeSet</name>
      <anchor>oaChangeMgr::findChangeSet</anchor>
      <arglist>(const oaString &amp;nameIn) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>discardAllChangeSets</name>
      <anchor>oaChangeMgr::discardAllChangeSets</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ChangeSetConstIter</type>
      <name>beginChangeSet</name>
      <anchor>oaChangeMgr::beginChangeSet</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ChangeSetConstIter</type>
      <name>endChangeSet</name>
      <anchor>oaChangeMgr::endChangeSet</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>discardChangeSet</name>
      <anchor>a14</anchor>
      <arglist>(const oaString &amp;changeSetName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaChangeMgr *</type>
      <name>get</name>
      <anchor>oaChangeMgr::get</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, oaChangeSetBase * &gt;::const_iterator</type>
      <name>ChangeSetConstIter</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaChangeSetBase</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaChangeRec</name>
    <filename>classoaChangeRec.html</filename>
    <member kind="function">
      <type></type>
      <name>oaChangeRec</name>
      <anchor>oaChangeRec::oaChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaChangeRec</name>
      <anchor>oaChangeRec::~oaChangeRec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaChangeRec::accept</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)=0</arglist>
    </member>
    <member kind="function">
      <type>oaTimeStamp</type>
      <name>getTimeStamp</name>
      <anchor>oaChangeRec::getTimeStamp</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaChangeSetBase *</type>
      <name>getChangeSet</name>
      <anchor>oaChangeRec::getChangeSet</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaHierChangeRec *</type>
      <name>getParent</name>
      <anchor>oaChangeRec::getParent</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParent</name>
      <anchor>oaChangeRec::setParent</anchor>
      <arglist>(oaHierChangeRec *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isMarkerChangeRec</name>
      <anchor>oaChangeRec::isMarkerChangeRec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isConvertObjectChangeRec</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isCreateObjectChangeRec</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isDestroyObjectChangeRec</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaChangeRecVisitor</name>
    <filename>classoaChangeRecVisitor.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>oaChangeRecVisitor::visit1</anchor>
      <arglist>(oaHierChangeRec *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>oaChangeRecVisitor::visit2</anchor>
      <arglist>(oaExportMarkerChangeRec *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>oaChangeRecVisitor::visit3</anchor>
      <arglist>(oaTransientMarkerChangeRec *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>oaChangeRecVisitor::visit4</anchor>
      <arglist>(oaSetAttributeChangeRec *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>oaChangeRecVisitor::visit5</anchor>
      <arglist>(oaUnsetAttributeChangeRec *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>oaChangeRecVisitor::visit7</anchor>
      <arglist>(oaCreate1to1RelationshipChangeRec *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a6</anchor>
      <arglist>(oaCreate1toNRelationshipChangeRec *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a7</anchor>
      <arglist>(oaCreate2DTableRelationshipChangeRec *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>oaChangeRecVisitor::visit8</anchor>
      <arglist>(oaDestroy1to1RelationshipChangeRec *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>oaChangeRecVisitor::visit9</anchor>
      <arglist>(oaDestroy1toNRelationshipChangeRec *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a10</anchor>
      <arglist>(oaDestroy2DTableRelationshipChangeRec *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>oaChangeRecVisitor::visit10</anchor>
      <arglist>(oaCreateObjectChangeRec *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>oaChangeRecVisitor::visit11</anchor>
      <arglist>(oaDestroyObjectChangeRec *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a13</anchor>
      <arglist>(oaConvertObjectChangeRec *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>startHier</name>
      <anchor>oaChangeRecVisitor::startHier</anchor>
      <arglist>(oaHierChangeRec *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>endHier</name>
      <anchor>oaChangeRecVisitor::endHier</anchor>
      <arglist>(oaHierChangeRec *node)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaChangeSet</name>
    <filename>classoaChangeSet.html</filename>
    <base>oaChangeSetBase</base>
    <member kind="function">
      <type></type>
      <name>oaChangeSet</name>
      <anchor>oaChangeSet::oaChangeSet</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaChangeSet</name>
      <anchor>oaChangeSet::~oaChangeSet</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaHierChangeRec *</type>
      <name>getCurrentChangeRec</name>
      <anchor>oaChangeSet::getCurrentChangeRec</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaHierChangeRec *</type>
      <name>beginChangeRec</name>
      <anchor>oaChangeSet::beginChangeRec</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endChangeRec</name>
      <anchor>oaChangeSet::endChangeRec</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addChangeRec</name>
      <anchor>oaChangeSet::addChangeRec</anchor>
      <arglist>(oaLeafChangeRec *lcr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rollBackChangeRecs</name>
      <anchor>a6</anchor>
      <arglist>(oaCMDatabaseRef::SPtr dbRef, oaMarkerChangeRec *target=NULL, oaBoolean inclusive=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeChangeRec</name>
      <anchor>a7</anchor>
      <arglist>(oaCMDatabaseRef::SPtr dbRef, oaLeafChangeRec *rec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>passivateRefs</name>
      <anchor>a8</anchor>
      <arglist>(oaCMDatabaseRef::SPtr dbRef)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaSetAttributeChangeRec *</type>
      <name>allocSetAttributeChangeRec</name>
      <anchor>oaChangeSet::allocSetAttributeChangeRec</anchor>
      <arglist>(sr::srAttributeBase::SPtr value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaUnsetAttributeChangeRec *</type>
      <name>allocUnsetAttributeChangeRec</name>
      <anchor>oaChangeSet::allocUnsetAttributeChangeRec</anchor>
      <arglist>(oaCMObjectRef::SPtr owner, sd::sdAttribute *attr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCreate1to1RelationshipChangeRec *</type>
      <name>allocCreate1to1RelationshipChangeRec</name>
      <anchor>oaChangeSet::allocCreate1to1RelationshipChangeRec</anchor>
      <arglist>(sr::sr1to1Relationship::SPtr value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCreate1toNRelationshipChangeRec *</type>
      <name>allocCreate1toNRelationshipChangeRec</name>
      <anchor>oaChangeSet::allocCreate1toNRelationshipChangeRec</anchor>
      <arglist>(sr::sr1toNRelationship::SPtr value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaDestroy1to1RelationshipChangeRec *</type>
      <name>allocDestroy1to1RelationshipChangeRec</name>
      <anchor>oaChangeSet::allocDestroy1to1RelationshipChangeRec</anchor>
      <arglist>(sr::sr1to1Relationship::SPtr value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaDestroy1toNRelationshipChangeRec *</type>
      <name>allocDestroy1toNRelationshipChangeRec</name>
      <anchor>oaChangeSet::allocDestroy1toNRelationshipChangeRec</anchor>
      <arglist>(sr::sr1toNRelationship::SPtr value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCreateObjectChangeRec *</type>
      <name>allocCreateObjectChangeRec</name>
      <anchor>oaChangeSet::allocCreateObjectChangeRec</anchor>
      <arglist>(oaCMObjectRef::SPtr object, oaCMObjectStateEntry::SPtr state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaDestroyObjectChangeRec *</type>
      <name>allocDestroyObjectChangeRec</name>
      <anchor>oaChangeSet::allocDestroyObjectChangeRec</anchor>
      <arglist>(oaCMObjectRef::SPtr object)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaConvertObjectChangeRec *</type>
      <name>allocConvertObjectChangeRec</name>
      <anchor>a17</anchor>
      <arglist>(oaCMObjectRef::SPtr object, oaCMObjectRef::SPtr newObject)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaHierChangeRec *</type>
      <name>allocHierChangeRec</name>
      <anchor>oaChangeSet::allocHierChangeRec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaMarkerChangeRec *</type>
      <name>findLastMarkerChangeRec</name>
      <anchor>a19</anchor>
      <arglist>(oaMarkerChangeRecTypeEnum typeIn, oaCMDatabaseRef::SPtr dbRef)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaConvertObjectChangeRec *</type>
      <name>findLastConvertObjectChangeRec</name>
      <anchor>a20</anchor>
      <arglist>(oaHierChangeRec *hcr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaExportMarkerChangeRec *</type>
      <name>allocExportMarkerChangeRec</name>
      <anchor>oaChangeSet::allocMarkerChangeRec</anchor>
      <arglist>(oaMarkerChangeRecTypeEnum typeIn, oaCMDatabaseRef::SPtr dbRef)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaTransientMarkerChangeRec *</type>
      <name>allocTransientMarkerChangeRec</name>
      <anchor>oaChangeSet::allocTransientMarkerChangeRec</anchor>
      <arglist>(oaMarkerChangeRecTypeEnum typeIn, oaCMDatabaseRef::SPtr dbRef)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaMarkerChangeRec *</type>
      <name>cloneMarkerChangeRec</name>
      <anchor>a23</anchor>
      <arglist>(oaExportMarkerChangeRec &amp;cr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaMarkerChangeRec *</type>
      <name>cloneMarkerChangeRec</name>
      <anchor>a24</anchor>
      <arglist>(oaTransientMarkerChangeRec &amp;cr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMDatabaseRef::SPtr</type>
      <name>findDatabaseRef</name>
      <anchor>oaChangeSet::findDatabaseRef</anchor>
      <arglist>(void *obj) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMDatabaseRef::SPtr</type>
      <name>allocDatabaseRef</name>
      <anchor>oaChangeSet::allocDatabaseRef</anchor>
      <arglist>(void *obj, const sd::sdObject *sd, oaBoolean isNew=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMObjectIDRef::SPtr</type>
      <name>findObjectIDRef</name>
      <anchor>oaChangeSet::findObjectIDRef</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database, void *obj) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMObjectIDRef::SPtr</type>
      <name>allocObjectIDRef</name>
      <anchor>oaChangeSet::allocObjectIDRef</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database, void *obj, const sd::sdObject *sd, oaBoolean isNew=false, oaCMObjectRef::SPtr scope=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMObjectStateRef::SPtr</type>
      <name>findObjectStateRef</name>
      <anchor>oaChangeSet::findObjectStateRef</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database, void *obj) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMObjectStateRef::SPtr</type>
      <name>allocObjectStateRef</name>
      <anchor>oaChangeSet::allocObjectStateRef</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database, void *obj, const sd::sdObject *sd, oaBoolean isNew=false, oaCMObjectRef::SPtr scope=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMStringEntry::SPtr</type>
      <name>findStringEntry</name>
      <anchor>oaChangeSet::findStringEntry</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database, const oaString &amp;string)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMStringEntry::SPtr</type>
      <name>allocStringEntry</name>
      <anchor>oaChangeSet::allocStringEntry</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database, const oaString &amp;string)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMObjectStateEntry::SPtr</type>
      <name>allocObjectStateEntry</name>
      <anchor>oaChangeSet::allocObjectStateEntry</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database, const sd::sdObject *def, const sr::srObjectState::AttributeMap &amp;attributes, const sr::srObjectState::RelationshipMap &amp;relationships)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaChangeSet::accept1</anchor>
      <arglist>(oaChangeSetVisitor *visitor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaChangeSet::accept2</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaTimeStamp minAge=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getName</name>
      <anchor>oaChangeSet::getName</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaTimeStamp</type>
      <name>getTimeStamp</name>
      <anchor>a37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isActive</name>
      <anchor>oaChangeSet::isActive</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setActive</name>
      <anchor>oaChangeSet::setActive</anchor>
      <arglist>(oaBoolean state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isExported</name>
      <anchor>oaChangeSet::isExported</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setExported</name>
      <anchor>oaChangeSet::setExported</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCMDatabaseTbl::DatabaseRefConstIter</type>
      <name>beginDatabaseRefs</name>
      <anchor>oaChangeSet::beginDatabaseRefs</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCMDatabaseTbl::DatabaseRefConstIter</type>
      <name>endDatabaseRefs</name>
      <anchor>oaChangeSet::endDatabaseRefs</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCMObjectRefTbl::ObjectRefConstIter</type>
      <name>beginObjectRefs</name>
      <anchor>oaChangeSet::beginObjectRefs</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database) const</arglist>
    </member>
    <member kind="function">
      <type>oaCMObjectRefTbl::ObjectRefConstIter</type>
      <name>endObjectRefs</name>
      <anchor>oaChangeSet::endObjectRefs</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database) const</arglist>
    </member>
    <member kind="function">
      <type>oaCMObjectStateTbl::ObjectStateEntryConstIter</type>
      <name>beginObjectStates</name>
      <anchor>oaChangeSet::beginObjectStates</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database) const</arglist>
    </member>
    <member kind="function">
      <type>oaCMObjectStateTbl::ObjectStateEntryConstIter</type>
      <name>endObjectStates</name>
      <anchor>oaChangeSet::endObjectStates</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database) const</arglist>
    </member>
    <member kind="function">
      <type>oaCMStringTbl::StringEntryConstIter</type>
      <name>beginStrings</name>
      <anchor>oaChangeSet::beginStrings</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database) const</arglist>
    </member>
    <member kind="function">
      <type>oaCMStringTbl::StringEntryConstIter</type>
      <name>endStrings</name>
      <anchor>oaChangeSet::endStrings</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaChangeRec *</type>
      <name>allocAttributeChangeRec</name>
      <anchor>a50</anchor>
      <arglist>(sr::srAttributeBase::SPtr value, sd::sdAttributeActionType action, sd::sdAttributeContainerType type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaChangeRec *</type>
      <name>allocRelationshipChangeRec</name>
      <anchor>a51</anchor>
      <arglist>(sr::srRelationshipBase::SPtr value, sd::sdRelationshipActionType action, sd::sdRelationshipContainerType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaChangeSetBase</name>
    <filename>classoaChangeSetBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaChangeSetBase</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaHierChangeRec *</type>
      <name>getCurrentChangeRec</name>
      <anchor>oaChangeSetBase::getCurrentChangeRec</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaHierChangeRec *</type>
      <name>beginChangeRec</name>
      <anchor>oaChangeSetBase::beginChangeRec</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>endChangeRec</name>
      <anchor>oaChangeSetBase::endChangeRec</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addChangeRec</name>
      <anchor>a4</anchor>
      <arglist>(oaLeafChangeRec *lcr)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>rollBackChangeRecs</name>
      <anchor>a5</anchor>
      <arglist>(oaCMDatabaseRef::SPtr dbRef, oaMarkerChangeRec *target=NULL, oaBoolean inclusive=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>removeChangeRec</name>
      <anchor>a6</anchor>
      <arglist>(oaCMDatabaseRef::SPtr dbRef, oaLeafChangeRec *rec)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>passivateRefs</name>
      <anchor>a7</anchor>
      <arglist>(oaCMDatabaseRef::SPtr dbRef)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaSetAttributeChangeRec *</type>
      <name>allocSetAttributeChangeRec</name>
      <anchor>oaChangeSetBase::allocSetAttributeChangeRec</anchor>
      <arglist>(sr::srAttributeBase::SPtr value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaUnsetAttributeChangeRec *</type>
      <name>allocUnsetAttributeChangeRec</name>
      <anchor>oaChangeSetBase::allocUnsetAttributeChangeRec</anchor>
      <arglist>(oaCMObjectRef::SPtr owner, sd::sdAttribute *attr)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaCreate1to1RelationshipChangeRec *</type>
      <name>allocCreate1to1RelationshipChangeRec</name>
      <anchor>oaChangeSetBase::allocCreate1to1RelationshipChangeRec</anchor>
      <arglist>(sr::sr1to1Relationship::SPtr value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaCreate1toNRelationshipChangeRec *</type>
      <name>allocCreate1toNRelationshipChangeRec</name>
      <anchor>oaChangeSetBase::allocCreate1toNRelationshipChangeRec</anchor>
      <arglist>(sr::sr1toNRelationship::SPtr value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaDestroy1to1RelationshipChangeRec *</type>
      <name>allocDestroy1to1RelationshipChangeRec</name>
      <anchor>oaChangeSetBase::allocDestroy1to1RelationshipChangeRec</anchor>
      <arglist>(sr::sr1to1Relationship::SPtr value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaDestroy1toNRelationshipChangeRec *</type>
      <name>allocDestroy1toNRelationshipChangeRec</name>
      <anchor>oaChangeSetBase::allocDestroy1toNRelationshipChangeRec</anchor>
      <arglist>(sr::sr1toNRelationship::SPtr value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaCreateObjectChangeRec *</type>
      <name>allocCreateObjectChangeRec</name>
      <anchor>oaChangeSetBase::allocCreateObjectChangeRec</anchor>
      <arglist>(oaCMObjectRef::SPtr object, oaCMObjectStateEntry::SPtr state)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaDestroyObjectChangeRec *</type>
      <name>allocDestroyObjectChangeRec</name>
      <anchor>oaChangeSetBase::allocDestroyObjectChangeRec</anchor>
      <arglist>(oaCMObjectRef::SPtr object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaConvertObjectChangeRec *</type>
      <name>allocConvertObjectChangeRec</name>
      <anchor>a16</anchor>
      <arglist>(oaCMObjectRef::SPtr object, oaCMObjectRef::SPtr newObject)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaHierChangeRec *</type>
      <name>allocHierChangeRec</name>
      <anchor>oaChangeSetBase::allocHierChangeRec</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaMarkerChangeRec *</type>
      <name>findLastMarkerChangeRec</name>
      <anchor>a18</anchor>
      <arglist>(oaMarkerChangeRecTypeEnum typeIn, oaCMDatabaseRef::SPtr dbRef)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaConvertObjectChangeRec *</type>
      <name>findLastConvertObjectChangeRec</name>
      <anchor>a19</anchor>
      <arglist>(oaHierChangeRec *hcr) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaExportMarkerChangeRec *</type>
      <name>allocExportMarkerChangeRec</name>
      <anchor>oaChangeSetBase::allocMarkerChangeRec</anchor>
      <arglist>(oaMarkerChangeRecTypeEnum typeIn, oaCMDatabaseRef::SPtr dbRef)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaTransientMarkerChangeRec *</type>
      <name>allocTransientMarkerChangeRec</name>
      <anchor>oaChangeSetBase::allocTransientMarkerChangeRec</anchor>
      <arglist>(oaMarkerChangeRecTypeEnum typeIn, oaCMDatabaseRef::SPtr dbRef)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaMarkerChangeRec *</type>
      <name>cloneMarkerChangeRec</name>
      <anchor>a22</anchor>
      <arglist>(oaExportMarkerChangeRec &amp;cr)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaMarkerChangeRec *</type>
      <name>cloneMarkerChangeRec</name>
      <anchor>a23</anchor>
      <arglist>(oaTransientMarkerChangeRec &amp;cr)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaCMDatabaseRef::SPtr</type>
      <name>findDatabaseRef</name>
      <anchor>oaChangeSetBase::findDatabaseRef</anchor>
      <arglist>(void *obj) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaCMDatabaseRef::SPtr</type>
      <name>allocDatabaseRef</name>
      <anchor>oaChangeSetBase::allocDatabaseRef</anchor>
      <arglist>(void *obj, const sd::sdObject *sd, oaBoolean isNew=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaCMObjectIDRef::SPtr</type>
      <name>findObjectIDRef</name>
      <anchor>oaChangeSetBase::findObjectIDRef</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database, void *obj) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaCMObjectIDRef::SPtr</type>
      <name>allocObjectIDRef</name>
      <anchor>oaChangeSetBase::allocObjectIDRef</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database, void *obj, const sd::sdObject *sd, oaBoolean isNew=false, oaCMObjectRef::SPtr scope=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaCMObjectStateRef::SPtr</type>
      <name>findObjectStateRef</name>
      <anchor>oaChangeSetBase::findObjectStateRef</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database, void *obj) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaCMObjectStateRef::SPtr</type>
      <name>allocObjectStateRef</name>
      <anchor>oaChangeSetBase::allocObjectStateRef</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database, void *obj, const sd::sdObject *sd, oaBoolean isNew=false, oaCMObjectRef::SPtr scope=NULL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaCMObjectStateEntry::SPtr</type>
      <name>allocObjectStateEntry</name>
      <anchor>oaChangeSetBase::allocObjectStateEntry</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database, const sd::sdObject *def, const sr::srObjectState::AttributeMap &amp;attributes, const sr::srObjectState::RelationshipMap &amp;relationships)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaCMStringEntry::SPtr</type>
      <name>findStringEntry</name>
      <anchor>oaChangeSetBase::findStringEntry</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database, const oaString &amp;string)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaCMStringEntry::SPtr</type>
      <name>allocStringEntry</name>
      <anchor>oaChangeSetBase::allocStringEntry</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database, const oaString &amp;string)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a33</anchor>
      <arglist>(oaChangeSetVisitor *visitor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a34</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaTimeStamp minAge=0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getName</name>
      <anchor>oaChangeSetBase::getName</anchor>
      <arglist>(oaString &amp;name) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>isActive</name>
      <anchor>oaChangeSetBase::isActive</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setActive</name>
      <anchor>oaChangeSetBase::setActive</anchor>
      <arglist>(oaBoolean state)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>isExported</name>
      <anchor>oaChangeSetBase::isExported</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setExported</name>
      <anchor>oaChangeSetBase::setExported</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaTimeStamp</type>
      <name>getTimeStamp</name>
      <anchor>a40</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaChangeRec *</type>
      <name>allocAttributeChangeRec</name>
      <anchor>a41</anchor>
      <arglist>(sr::srAttributeBase::SPtr value, sd::sdAttributeActionType action, sd::sdAttributeContainerType type)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaChangeRec *</type>
      <name>allocRelationshipChangeRec</name>
      <anchor>a42</anchor>
      <arglist>(sr::srRelationshipBase::SPtr value, sd::sdRelationshipActionType action, sd::sdRelationshipContainerType type)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaChangeSetObserver</name>
    <filename>classoaChangeSetObserver.html</filename>
    <member kind="function">
      <type></type>
      <name>oaChangeSetObserver</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 priorityIn, oaBoolean enabledIn=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaChangeSetObserver</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPostCreate</name>
      <anchor>a2</anchor>
      <arglist>(oaChangeSetBase *cs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPreDestroy</name>
      <anchor>a3</anchor>
      <arglist>(oaChangeSetBase *cs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onEmpty</name>
      <anchor>a4</anchor>
      <arglist>(oaChangeSetBase *cs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onFirstChange</name>
      <anchor>a5</anchor>
      <arglist>(oaChangeSetBase *cs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onFullExport</name>
      <anchor>a6</anchor>
      <arglist>(oaChangeSetBase *cs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onIncrementalExport</name>
      <anchor>a7</anchor>
      <arglist>(oaChangeSetBase *cs)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isEnabled</name>
      <anchor>a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchor>a9</anchor>
      <arglist>(oaBoolean enabled)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getPriority</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaChangeSetVisitor</name>
    <filename>classoaChangeSetVisitor.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>oaChangeSetVisitor::visit</anchor>
      <arglist>(oaChangeSet *node)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMAttr</name>
    <filename>classoaCMAttr.html</filename>
    <member kind="function">
      <type></type>
      <name>oaCMAttr</name>
      <anchor>oaCMAttr::oaCMAttr1</anchor>
      <arglist>(const oaString &amp;nameIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaCMAttr</name>
      <anchor>oaCMAttr::oaCMAttr2</anchor>
      <arglist>(const oaString &amp;nameIn, const oaString &amp;valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaCMAttr</name>
      <anchor>oaCMAttr::oaCMAttr3</anchor>
      <arglist>(const oaCMAttr &amp;attrIn)</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>oaCMAttr::getName</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getValue</name>
      <anchor>oaCMAttr::getValue</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>oaCMAttr::setValue</anchor>
      <arglist>(const oaString &amp;valueIn)</arglist>
    </member>
    <member kind="function">
      <type>oaCMAttr &amp;</type>
      <name>operator=</name>
      <anchor>a6</anchor>
      <arglist>(const oaCMAttr &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>oaCMAttr::operator</anchor>
      <arglist>(const oaCMAttr &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>oaCMAttr::operator</anchor>
      <arglist>(const oaCMAttr &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isUnset</name>
      <anchor>oaCMAttr::isUnset</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaArrayBase</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaArray</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMAttrArray</name>
    <filename>classoaCMAttrArray.html</filename>
    <member kind="function">
      <type></type>
      <name>oaCMAttrArray</name>
      <anchor>oaCMAttrArray::oaCMAttrArray1</anchor>
      <arglist>(oaUInt4 sizeIn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaCMAttrArray</name>
      <anchor>oaCMAttrArray::oaCMAttrArray2</anchor>
      <arglist>(const oaCMAttrArray &amp;arrayIn)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>hasUnsetAttrs</name>
      <anchor>oaCMAttrArray::hasUnsetAttrs</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>findByName</name>
      <anchor>oaCMAttrArray::findByName</anchor>
      <arglist>(const oaString &amp;nameIn) const</arglist>
    </member>
    <member kind="function">
      <type>oaCMAttrArray &amp;</type>
      <name>operator=</name>
      <anchor>a4</anchor>
      <arglist>(const oaCMAttrArray &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMDatabaseRef</name>
    <filename>classoaCMDatabaseRef.html</filename>
    <base>oaCMObjectRef</base>
    <member kind="function">
      <type></type>
      <name>oaCMDatabaseRef</name>
      <anchor>oaCMDatabaseRef::oaCMDatabaseRef</anchor>
      <arglist>(const sd::sdObject *def, void *object, oaCMDatabaseTbl *tbl, oaTimeStamp timeStamp, oaBoolean isNew=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaCMDatabaseRef</name>
      <anchor>oaCMDatabaseRef::~oaCMDatabaseRef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaCMDatabaseRef::accept</anchor>
      <arglist>(sr::srVisitorMgr &amp;visitor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>passivate</name>
      <anchor>oaCMDatabaseRef::passivate</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activate</name>
      <anchor>oaCMDatabaseRef::activate</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMDatabaseRef::SPtr</type>
      <name>getDatabase</name>
      <anchor>oaCMDatabaseRef::getDatabase</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCMObjectStateEntry::SPtr</type>
      <name>getState</name>
      <anchor>oaCMDatabaseRef::getState</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchor>oaCMDatabaseRef::setState</anchor>
      <arglist>(oaCMObjectStateEntry::SPtr state)</arglist>
    </member>
    <member kind="typedef">
      <type>oaCMDatabaseRef *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMDatabaseTbl</name>
    <filename>classoaCMDatabaseTbl.html</filename>
    <member kind="function">
      <type></type>
      <name>oaCMDatabaseTbl</name>
      <anchor>oaCMDatabaseTbl::oaCMDatabaseTbl</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaCMDatabaseTbl</name>
      <anchor>oaCMDatabaseTbl::~oaCMDatabaseTbl</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCMDatabaseRef::SPtr</type>
      <name>find</name>
      <anchor>oaCMDatabaseTbl::find</anchor>
      <arglist>(void *database) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>onPassivate</name>
      <anchor>oaCMDatabaseTbl::onPassivate</anchor>
      <arglist>(oaCMDatabaseRef::SPtr ref)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>onActivate</name>
      <anchor>oaCMDatabaseTbl::onActivate</anchor>
      <arglist>(oaCMDatabaseRef::SPtr ref)</arglist>
    </member>
    <member kind="function">
      <type>DatabaseRefConstIter</type>
      <name>begin</name>
      <anchor>oaCMDatabaseTbl::begin</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DatabaseRefConstIter</type>
      <name>end</name>
      <anchor>oaCMDatabaseTbl::end</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; oaCMDatabaseRef * &gt;::const_iterator</type>
      <name>DatabaseRefConstIter</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; oaCMDatabaseRef * &gt;::iterator</type>
      <name>DatabaseRefIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaCMDatabaseRef</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMError</name>
    <filename>classoaCMError.html</filename>
    <base>oaCMException</base>
    <member kind="function">
      <type></type>
      <name>oaCMError</name>
      <anchor>a0</anchor>
      <arglist>(oa::oaUInt4 msgIdIn,...)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMException</name>
    <filename>classoaCMException.html</filename>
    <member kind="function">
      <type></type>
      <name>oaCMException</name>
      <anchor>a0</anchor>
      <arglist>(oa::oaUInt4 msgIdIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const oaString &amp;</type>
      <name>getFormatString</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMObjectIDRef</name>
    <filename>classoaCMObjectIDRef.html</filename>
    <base>oaCMObjectRef</base>
    <member kind="function">
      <type></type>
      <name>oaCMObjectIDRef</name>
      <anchor>oaCMObjectIDRef::oaCMObjectIDRef</anchor>
      <arglist>(const sd::sdObject *def, void *object, oaCMObjectRefTbl *tbl, oaTimeStamp timeStamp, oaBoolean isNew=false, oaCMObjectRef::SPtr scope=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaCMObjectIDRef</name>
      <anchor>oaCMObjectIDRef::~oaCMObjectIDRef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaCMObjectIDRef::accept</anchor>
      <arglist>(sr::srVisitorMgr &amp;visitor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>passivate</name>
      <anchor>oaCMObjectIDRef::passivate</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activate</name>
      <anchor>oaCMObjectIDRef::activate</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMDatabaseRef::SPtr</type>
      <name>getDatabase</name>
      <anchor>oaCMObjectIDRef::getDatabase</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCMObjectRef::SPtr</type>
      <name>getScope</name>
      <anchor>oaCMObjectIDRef::getScope</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCMStringEntry::SPtr</type>
      <name>getName</name>
      <anchor>oaCMObjectIDRef::getName</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchor>oaCMObjectIDRef::setName</anchor>
      <arglist>(oaCMStringEntry::SPtr name)</arglist>
    </member>
    <member kind="typedef">
      <type>oaCMObjectIDRef *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMObjectRef</name>
    <filename>classoaCMObjectRef.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>passivate</name>
      <anchor>oaCMObjectRef::passivate</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activate</name>
      <anchor>oaCMObjectRef::activate</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DatabaseSPtr</type>
      <name>getDatabase</name>
      <anchor>oaCMObjectRef::getDatabase</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isAlive</name>
      <anchor>oaCMObjectRef::isAlive</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isNew</name>
      <anchor>oaCMObjectRef::isNew</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaTimeStamp</type>
      <name>getTimeStamp</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsNew</name>
      <anchor>a6</anchor>
      <arglist>(oaBoolean isNew)</arglist>
    </member>
    <member kind="typedef">
      <type>oaCMObjectRef *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>oaCMDatabaseRef *</type>
      <name>DatabaseSPtr</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaCMObjectRefTbl</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMObjectRefTbl</name>
    <filename>classoaCMObjectRefTbl.html</filename>
    <member kind="function">
      <type></type>
      <name>oaCMObjectRefTbl</name>
      <anchor>oaCMObjectRefTbl::oaCMObjectRefTbl</anchor>
      <arglist>(oaCMDatabaseRef::SPtr database)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaCMObjectRefTbl</name>
      <anchor>oaCMObjectRefTbl::~oaCMObjectRefTbl</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCMObjectRef::SPtr</type>
      <name>find</name>
      <anchor>oaCMObjectRefTbl::find</anchor>
      <arglist>(void *obj) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>onPassivate</name>
      <anchor>oaCMObjectRefTbl::onPassivate</anchor>
      <arglist>(oaCMObjectRef::SPtr ref)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>onActivate</name>
      <anchor>oaCMObjectRefTbl::onActivate</anchor>
      <arglist>(oaCMObjectRef::SPtr ref)</arglist>
    </member>
    <member kind="function">
      <type>oaCMDatabaseRef::SPtr</type>
      <name>getDatabase</name>
      <anchor>oaCMObjectRefTbl::getDatabase</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectRefConstIter</type>
      <name>begin</name>
      <anchor>oaCMObjectRefTbl::begin</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectRefConstIter</type>
      <name>end</name>
      <anchor>oaCMObjectRefTbl::end</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup</name>
      <anchor>a8</anchor>
      <arglist>(oaTimeStamp timeStamp)</arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; oaCMObjectRef * &gt;::const_iterator</type>
      <name>ObjectRefConstIter</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; oaCMObjectRef * &gt;::iterator</type>
      <name>ObjectRefIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaCMObjectIDRef</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaCMObjectStateRef</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMObjectStateEntry</name>
    <filename>classoaCMObjectStateEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>oaCMObjectStateEntry</name>
      <anchor>oaCMObjectStateEntry::oaCMObjectStateEntry</anchor>
      <arglist>(const sd::sdObject *def, const AttributeMap &amp;attributes, const RelationshipMap &amp;relationships, oaCMObjectStateTbl *tbl, oaTimeStamp timeStamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaCMObjectStateEntry</name>
      <anchor>oaCMObjectStateEntry::~oaCMObjectStateEntry</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaTimeStamp</type>
      <name>getTimeStamp</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>oaCMObjectStateEntry *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaCMObjectRef</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMObjectStateRef</name>
    <filename>classoaCMObjectStateRef.html</filename>
    <base>oaCMObjectRef</base>
    <member kind="function">
      <type></type>
      <name>oaCMObjectStateRef</name>
      <anchor>oaCMObjectStateRef::oaCMObjectStateRef</anchor>
      <arglist>(const sd::sdObject *def, void *object, oaCMObjectRefTbl *tbl, oaTimeStamp timeStamp, oaBoolean isNew=false, oaCMObjectRef::SPtr scope=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaCMObjectStateRef</name>
      <anchor>oaCMObjectStateRef::~oaCMObjectStateRef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaCMObjectStateRef::accept</anchor>
      <arglist>(sr::srVisitorMgr &amp;visitor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>passivate</name>
      <anchor>oaCMObjectStateRef::passivate</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activate</name>
      <anchor>oaCMObjectStateRef::activate</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMDatabaseRef::SPtr</type>
      <name>getDatabase</name>
      <anchor>oaCMObjectStateRef::getDatabase</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCMObjectRef::SPtr</type>
      <name>getScope</name>
      <anchor>oaCMObjectStateRef::getScope</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCMObjectStateEntry::SPtr</type>
      <name>getState</name>
      <anchor>oaCMObjectStateRef::getState</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCMObjectStateEntry::SPtr</type>
      <name>setState</name>
      <anchor>oaCMObjectStateRef::setState</anchor>
      <arglist>(oaCMObjectStateEntry::SPtr state)</arglist>
    </member>
    <member kind="typedef">
      <type>oaCMObjectStateRef *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMObjectStateTbl</name>
    <filename>classoaCMObjectStateTbl.html</filename>
    <member kind="function">
      <type></type>
      <name>oaCMObjectStateTbl</name>
      <anchor>oaCMObjectStateTbl::oaCMObjectStateTbl</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaCMObjectStateTbl</name>
      <anchor>oaCMObjectStateTbl::~oaCMObjectStateTbl</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ObjectStateEntryConstIter</type>
      <name>begin</name>
      <anchor>oaCMObjectStateTbl::begin</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectStateEntryConstIter</type>
      <name>end</name>
      <anchor>oaCMObjectStateTbl::end</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup</name>
      <anchor>a4</anchor>
      <arglist>(oaTimeStamp timeStamp)</arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; oaCMObjectStateEntry * &gt;::const_iterator</type>
      <name>ObjectStateEntryConstIter</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; oaCMObjectStateEntry * &gt;::iterator</type>
      <name>ObjectStateEntryIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaCMObjectStateEntry</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMObjectVisitor</name>
    <filename>classoaCMObjectVisitor.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaCMObjectVisitor</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>oaCMObjectVisitor::visit1</anchor>
      <arglist>(oaCMObjectIDRef *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>oaCMObjectVisitor::visit3</anchor>
      <arglist>(oaCMDatabaseRef *node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>oaCMObjectVisitor::visit2</anchor>
      <arglist>(oaCMObjectStateRef *node)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMProtocol</name>
    <filename>classoaCMProtocol.html</filename>
    <member kind="function">
      <type></type>
      <name>oaCMProtocol</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaCMProtocol</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;nameIn, const oaString &amp;plugInNameIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaCMProtocol</name>
      <anchor>a2</anchor>
      <arglist>(const oaString &amp;nameIn, const oaString &amp;plugInNameIn, const oaCMAttrArray &amp;fixedAttrsIn, const oaCMAttrArray &amp;modAttrsIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaCMProtocol</name>
      <anchor>a3</anchor>
      <arglist>(const oaCMProtocol &amp;protocolIn)</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getPlugInName</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaCMAttrArray &amp;</type>
      <name>getFixedAttrs</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaCMAttrArray &amp;</type>
      <name>getModAttrs</name>
      <anchor>oaCMProtocol::getModAttrs</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFixedAttrs</name>
      <anchor>a8</anchor>
      <arglist>(const oaCMAttrArray &amp;arrayIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModAttrs</name>
      <anchor>oaCMProtocol::setModAttrs</anchor>
      <arglist>(const oaCMAttrArray &amp;arrayIn)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>hasUnsetAttrs</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>match</name>
      <anchor>a11</anchor>
      <arglist>(const oaCMProtocol &amp;protoIn) const</arglist>
    </member>
    <member kind="function">
      <type>const oaCMAttr *</type>
      <name>findAttr</name>
      <anchor>a12</anchor>
      <arglist>(const oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaCMProtocol &amp;</type>
      <name>operator=</name>
      <anchor>a13</anchor>
      <arglist>(const oaCMProtocol &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a14</anchor>
      <arglist>(const oaCMProtocol &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a15</anchor>
      <arglist>(const oaCMProtocol &amp;rhs) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMProtocolArray</name>
    <filename>classoaCMProtocolArray.html</filename>
    <member kind="function">
      <type></type>
      <name>oaCMProtocolArray</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 sizeIn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaCMProtocolArray</name>
      <anchor>a1</anchor>
      <arglist>(const oaCMProtocolArray &amp;arrayIn)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>findByName</name>
      <anchor>a2</anchor>
      <arglist>(const oaString &amp;nameIn, const oaString &amp;plugInNameIn) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>validate</name>
      <anchor>a3</anchor>
      <arglist>(const oaCMProtocol &amp;protoIn) const</arglist>
    </member>
    <member kind="function">
      <type>oaCMProtocolArray &amp;</type>
      <name>operator=</name>
      <anchor>a4</anchor>
      <arglist>(const oaCMProtocolArray &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMStringEntry</name>
    <filename>classoaCMStringEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>oaCMStringEntry</name>
      <anchor>oaCMStringEntry::oaCMStringEntry</anchor>
      <arglist>(const oaString &amp;string, oaCMStringTbl *tbl, oaTimeStamp timeStamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaCMStringEntry</name>
      <anchor>oaCMStringEntry::~oaCMStringEntry</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getString</name>
      <anchor>oaCMStringEntry::getString</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaTimeStamp</type>
      <name>getTimeStamp</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaCMStringEntry::accept</anchor>
      <arglist>(sr::srVisitorMgr &amp;visitor)</arglist>
    </member>
    <member kind="typedef">
      <type>oaCMStringEntry *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCMStringTbl</name>
    <filename>classoaCMStringTbl.html</filename>
    <member kind="function">
      <type></type>
      <name>oaCMStringTbl</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaCMStringTbl</name>
      <anchor>oaCMStringTbl::~oaCMStringTbl</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StringEntryConstIter</type>
      <name>begin</name>
      <anchor>oaCMStringTbl::begin</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StringEntryConstIter</type>
      <name>end</name>
      <anchor>oaCMStringTbl::end</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCMStringEntry::SPtr</type>
      <name>find</name>
      <anchor>oaCMStringTbl::find</anchor>
      <arglist>(const oaString &amp;str) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup</name>
      <anchor>a5</anchor>
      <arglist>(oaTimeStamp timeStamp)</arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, oaCMStringEntry * &gt;::const_iterator</type>
      <name>StringEntryConstIter</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, oaCMStringEntry * &gt;::iterator</type>
      <name>StringEntryIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaCMStringEntry</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaConvertObjectChangeRec</name>
    <filename>classoaConvertObjectChangeRec.html</filename>
    <base>oaObjectChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaConvertObjectChangeRec</name>
      <anchor>a0</anchor>
      <arglist>(oaChangeSetBase *changeSetIn, oaCMObjectRef::SPtr objRef, oaCMObjectRef::SPtr convObjRef)</arglist>
    </member>
    <member kind="function">
      <type>oaCMObjectRef::SPtr</type>
      <name>getConvertedToObject</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConvertedToObject</name>
      <anchor>a2</anchor>
      <arglist>(const oaCMObjectRef::SPtr convObjRef, const oaCMObjectStateEntry::SPtr convObjState)</arglist>
    </member>
    <member kind="function">
      <type>oaCMObjectStateEntry::SPtr</type>
      <name>getObjectStateEntry</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a4</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isConvertObjectChangeRec</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCreate1to1RelationshipChangeRec</name>
    <filename>classoaCreate1to1RelationshipChangeRec.html</filename>
    <base>oaCreateRelationshipChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaCreate1to1RelationshipChangeRec</name>
      <anchor>oaCreate1to1RelationshipChangeRec::oaCreate1to1RelationshipChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn, sr::sr1to1Relationship::SPtr valueIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaCreate1to1RelationshipChangeRec</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const sd::sdRelationshipBase *</type>
      <name>getSchemaDefinition</name>
      <anchor>oaCreate1to1RelationshipChangeRec::getSchemaDefinition</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMObjectRef::SPtr</type>
      <name>getFrom</name>
      <anchor>oaCreate1to1RelationshipChangeRec::getFrom</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sr::sr1to1Relationship::SPtr</type>
      <name>getValue</name>
      <anchor>oaCreate1to1RelationshipChangeRec::getValue</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaCreate1to1RelationshipChangeRec::accept</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCreate1toNRelationshipChangeRec</name>
    <filename>classoaCreate1toNRelationshipChangeRec.html</filename>
    <base>oaCreateRelationshipChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaCreate1toNRelationshipChangeRec</name>
      <anchor>oaCreate1toNRelationshipChangeRec::oaCreate1toNRelationshipChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn, sr::sr1toNRelationship::SPtr valueIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaCreate1toNRelationshipChangeRec</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const sd::sdRelationshipBase *</type>
      <name>getSchemaDefinition</name>
      <anchor>oaCreate1toNRelationshipChangeRec::getSchemaDefinition</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMObjectRef::SPtr</type>
      <name>getFrom</name>
      <anchor>oaCreate1toNRelationshipChangeRec::getFrom</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sr::sr1toNRelationship::SPtr</type>
      <name>getValue</name>
      <anchor>oaCreate1toNRelationshipChangeRec::getValue</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaCreate1toNRelationshipChangeRec::accept</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCreate2DTableRelationshipChangeRec</name>
    <filename>classoaCreate2DTableRelationshipChangeRec.html</filename>
    <base>oaCreateRelationshipChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaCreate2DTableRelationshipChangeRec</name>
      <anchor>a0</anchor>
      <arglist>(oaChangeSetBase *changeSetIn, sr::srRelationshipBase::SPtr valueIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaCreate2DTableRelationshipChangeRec</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const sd::sdRelationshipBase *</type>
      <name>getSchemaDefinition</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMObjectRef::SPtr</type>
      <name>getFrom</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sr::srRelationshipBase::SPtr</type>
      <name>getValue</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a5</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCreateObjectChangeRec</name>
    <filename>classoaCreateObjectChangeRec.html</filename>
    <base>oaObjectChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaCreateObjectChangeRec</name>
      <anchor>oaCreateObjectChangeRec::oaCreateObjectChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSet, oaCMObjectRef::SPtr objectRef, oaCMObjectStateEntry::SPtr objectState)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaCreateObjectChangeRec</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCMObjectStateEntry::SPtr</type>
      <name>getObjectStateEntry</name>
      <anchor>oaCreateObjectChangeRec::getObjectStateEntry</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCMObjectStateEntry::SPtr</type>
      <name>setObjectStateEntry</name>
      <anchor>a3</anchor>
      <arglist>(oaCMObjectStateEntry::SPtr objectState)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isCreateObjectChangeRec</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaCreateObjectChangeRec::accept</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCreateRelationshipChangeRec</name>
    <filename>classoaCreateRelationshipChangeRec.html</filename>
    <base>oaRelationshipChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaCreateRelationshipChangeRec</name>
      <anchor>oaCreateRelationshipChangeRec::oaCreateRelationshipChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDestroy1to1RelationshipChangeRec</name>
    <filename>classoaDestroy1to1RelationshipChangeRec.html</filename>
    <base>oaDestroyRelationshipChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaDestroy1to1RelationshipChangeRec</name>
      <anchor>oaDestroy1to1RelationshipChangeRec::oaDestroy1to1RelationshipChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn, sr::sr1to1Relationship::SPtr valueIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaDestroy1to1RelationshipChangeRec</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const sd::sdRelationshipBase *</type>
      <name>getSchemaDefinition</name>
      <anchor>oaDestroy1to1RelationshipChangeRec::getSchemaDefinition</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMObjectRef::SPtr</type>
      <name>getFrom</name>
      <anchor>oaDestroy1to1RelationshipChangeRec::getFrom</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sr::sr1to1Relationship::SPtr</type>
      <name>getValue</name>
      <anchor>oaDestroy1to1RelationshipChangeRec::getValue</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaDestroy1to1RelationshipChangeRec::accept</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDestroy1toNRelationshipChangeRec</name>
    <filename>classoaDestroy1toNRelationshipChangeRec.html</filename>
    <base>oaDestroyRelationshipChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaDestroy1toNRelationshipChangeRec</name>
      <anchor>oaDestroy1toNRelationshipChangeRec::oaDestroy1toNRelationshipChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn, sr::sr1toNRelationship::SPtr valueIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaDestroy1toNRelationshipChangeRec</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const sd::sdRelationshipBase *</type>
      <name>getSchemaDefinition</name>
      <anchor>oaDestroy1toNRelationshipChangeRec::getSchemaDefinition</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMObjectRef::SPtr</type>
      <name>getFrom</name>
      <anchor>oaDestroy1toNRelationshipChangeRec::getFrom</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sr::sr1toNRelationship::SPtr</type>
      <name>getValue</name>
      <anchor>oaDestroy1toNRelationshipChangeRec::getValue</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaDestroy1toNRelationshipChangeRec::accept</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDestroy2DTableRelationshipChangeRec</name>
    <filename>classoaDestroy2DTableRelationshipChangeRec.html</filename>
    <base>oaDestroyRelationshipChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaDestroy2DTableRelationshipChangeRec</name>
      <anchor>a0</anchor>
      <arglist>(oaChangeSetBase *changeSetIn, sr::srRelationshipBase::SPtr valueIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaDestroy2DTableRelationshipChangeRec</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const sd::sdRelationshipBase *</type>
      <name>getSchemaDefinition</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMObjectRef::SPtr</type>
      <name>getFrom</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sr::srRelationshipBase::SPtr</type>
      <name>getValue</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a5</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDestroyObjectChangeRec</name>
    <filename>classoaDestroyObjectChangeRec.html</filename>
    <base>oaObjectChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaDestroyObjectChangeRec</name>
      <anchor>oaDestroyObjectChangeRec::oaDestroyObjectChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn, oaCMObjectRef::SPtr objectRefIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isDestroyObjectChangeRec</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaDestroyObjectChangeRec::accept</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDestroyRelationshipChangeRec</name>
    <filename>classoaDestroyRelationshipChangeRec.html</filename>
    <base>oaRelationshipChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaDestroyRelationshipChangeRec</name>
      <anchor>oaDestroyRelationshipChangeRec::oaDestroyRelationshipChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaExportMarkerChangeRec</name>
    <filename>classoaExportMarkerChangeRec.html</filename>
    <base>oaMarkerChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaExportMarkerChangeRec</name>
      <anchor>a0</anchor>
      <arglist>(oaChangeSetBase *changeSetIn, oaMarkerChangeRecTypeEnum typeIn, oaCMDatabaseRef::SPtr dbRef)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaMarkerChangeRec *</type>
      <name>clone</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a2</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)</arglist>
    </member>
    <member kind="function">
      <type>oaString</type>
      <name>getMessage</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMessage</name>
      <anchor>a4</anchor>
      <arglist>(const oaString &amp;msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaHierChangeRec</name>
    <filename>classoaHierChangeRec.html</filename>
    <base>oaChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaHierChangeRec</name>
      <anchor>oaHierChangeRec::oaHierChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaHierChangeRec</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaHierChangeRec::accept</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)</arglist>
    </member>
    <member kind="function">
      <type>oaLeafChangeRec *</type>
      <name>getPrimary</name>
      <anchor>oaHierChangeRec::getPrimary</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrimary</name>
      <anchor>oaHierChangeRec::setPrimary</anchor>
      <arglist>(oaLeafChangeRec *primary)</arglist>
    </member>
    <member kind="function">
      <type>ChangeRecsConstIter</type>
      <name>beginChild</name>
      <anchor>oaHierChangeRec::beginChild</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ChangeRecsConstIter</type>
      <name>endChild</name>
      <anchor>oaHierChangeRec::endChild</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ChangeRecsIter</type>
      <name>beginChild</name>
      <anchor>oaHierChangeRec::beginChild</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ChangeRecsIter</type>
      <name>endChild</name>
      <anchor>oaHierChangeRec::endChild</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstReverseIter</type>
      <name>rbeginChild</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstReverseIter</type>
      <name>rendChild</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ReverseIter</type>
      <name>rbeginChild</name>
      <anchor>a11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReverseIter</type>
      <name>rendChild</name>
      <anchor>a12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addChild</name>
      <anchor>oaHierChangeRec::addChild</anchor>
      <arglist>(oaChangeRec *child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeChild</name>
      <anchor>oaHierChangeRec::removeChild</anchor>
      <arglist>(oaChangeRec *child)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isCollapsible</name>
      <anchor>oaHierChangeRec::isCollapsible</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; oaChangeRec * &gt;</type>
      <name>ChangeRecVector</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ChangeRecVector::const_iterator</type>
      <name>ChangeRecsConstIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ChangeRecVector::iterator</type>
      <name>ChangeRecsIter</name>
      <anchor>s2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ChangeRecVector::const_reverse_iterator</type>
      <name>ConstReverseIter</name>
      <anchor>s3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ChangeRecVector::reverse_iterator</type>
      <name>ReverseIter</name>
      <anchor>s4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ICMPlugInBase</name>
    <filename>classICMPlugInBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ICMPlugInBase</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>init</name>
      <anchor>a1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getProtocols</name>
      <anchor>a2</anchor>
      <arglist>(oa::oaCMProtocolArray &amp;out) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setProtocol</name>
      <anchor>a3</anchor>
      <arglist>(const oa::oaCMProtocol &amp;in)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>discardChangeSet</name>
      <anchor>a4</anchor>
      <arglist>(oa::oaChangeSetBase *in)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IExport</name>
    <filename>classIExport.html</filename>
    <base>ICMPlugInBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IExport</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>exportFull</name>
      <anchor>a1</anchor>
      <arglist>(oa::oaChangeSetBase *changeSet)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>exportIncr</name>
      <anchor>a2</anchor>
      <arglist>(oa::oaChangeSetBase *changeSet)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>const Guid &amp;</type>
      <name>getId</name>
      <anchor>d0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ITracking</name>
    <filename>classITracking.html</filename>
    <base>ICMPlugInBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ITracking</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>beginTracking</name>
      <anchor>a1</anchor>
      <arglist>(const oa::oaString &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>endTracking</name>
      <anchor>a2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>const Guid &amp;</type>
      <name>getId</name>
      <anchor>d0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaLeafChangeRec</name>
    <filename>classoaLeafChangeRec.html</filename>
    <base>oaChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaLeafChangeRec</name>
      <anchor>oaLeafChangeRec::oaLeafChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isPrimary</name>
      <anchor>oaLeafChangeRec::isPrimary</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsPrimary</name>
      <anchor>oaLeafChangeRec::setIsPrimary</anchor>
      <arglist>(oaBoolean val)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaCMDatabaseRef::SPtr</type>
      <name>getDatabaseRef</name>
      <anchor>a3</anchor>
      <arglist>() const=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaMarkerChangeRec</name>
    <filename>classoaMarkerChangeRec.html</filename>
    <base>oaLeafChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaMarkerChangeRec</name>
      <anchor>oaMarkerChangeRec::oaMarkerChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn, oaMarkerChangeRecTypeEnum typeIn, oaCMDatabaseRef::SPtr dbRef)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaMarkerChangeRec</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaMarkerChangeRec *</type>
      <name>clone</name>
      <anchor>a2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaMarkerChangeRec::accept</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isMarkerChangeRec</name>
      <anchor>oaMarkerChangeRec::isMarkerChangeRec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaMarkerChangeRecType</type>
      <name>getType</name>
      <anchor>oaMarkerChangeRec::getType</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMDatabaseRef::SPtr</type>
      <name>getDatabaseRef</name>
      <anchor>oaMarkerChangeRec::getDatabaseRef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDatabaseRef</name>
      <anchor>a7</anchor>
      <arglist>(oaCMDatabaseRef::SPtr dbRef)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaMarkerChangeRecType</name>
    <filename>classoaMarkerChangeRecType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaMarkerChangeRecType</name>
      <anchor>a0</anchor>
      <arglist>(oaMarkerChangeRecTypeEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaMarkerChangeRecType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaMarkerChangeRecType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaMarkerChangeRecTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaObjectChangeRec</name>
    <filename>classoaObjectChangeRec.html</filename>
    <base>oaLeafChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaObjectChangeRec</name>
      <anchor>oaObjectChangeRec::oaObjectChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn, oaCMObjectRef::SPtr objectRefIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaObjectChangeRec</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCMObjectRef::SPtr</type>
      <name>getObject</name>
      <anchor>oaObjectChangeRec::getObject</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sd::sdObject *</type>
      <name>getSchemaDefinition</name>
      <anchor>oaObjectChangeRec::getSchemaDefinition</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMDatabaseRef::SPtr</type>
      <name>getDatabaseRef</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaObserver&lt; oaChangeMgr &gt;</name>
    <filename>classoaObserver_3oaChangeMgr_4.html</filename>
    <member kind="function">
      <type></type>
      <name>oaObserver</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 priorityIn, oaBoolean enabledIn=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaObserver</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onInvalidate</name>
      <anchor>a2</anchor>
      <arglist>(oaChangeMgrModTypeEnum modType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPreImport</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPostImport</name>
      <anchor>a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPreExport</name>
      <anchor>a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPostExport</name>
      <anchor>a6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaRelationshipChangeRec</name>
    <filename>classoaRelationshipChangeRec.html</filename>
    <base>oaLeafChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaRelationshipChangeRec</name>
      <anchor>oaRelationshipChangeRec::oaRelationshipChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMObjectRef::SPtr</type>
      <name>getFrom</name>
      <anchor>oaRelationshipChangeRec::getFrom</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const sd::sdRelationshipBase *</type>
      <name>getSchemaDefinition</name>
      <anchor>oaRelationshipChangeRec::getSchemaDefinition</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMDatabaseRef::SPtr</type>
      <name>getDatabaseRef</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdAttribute</name>
    <filename>classsdAttribute.html</filename>
    <base>sdBase</base>
    <member kind="function">
      <type></type>
      <name>sdAttribute</name>
      <anchor>a0</anchor>
      <arglist>(unsigned int id, const std::string &amp;name, const std::string &amp;description, const Actions &amp;actions, sdAttributeContainerType containerType, bool isObjectIdentifier, sdNameSpace *nameSpace, const sdObject *object, const sdValue *value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdAttribute</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getId</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDescription</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sdObject *</type>
      <name>getObject</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sdValue *</type>
      <name>getValue</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ActionConstIter</type>
      <name>begin</name>
      <anchor>sdAttribute::begin</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ActionConstIter</type>
      <name>end</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdAttributeContainerType</type>
      <name>getContainerType</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a10</anchor>
      <arglist>(sdVisitor *visitor)</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; sdAttributeActionType &gt;</type>
      <name>Actions</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Actions::const_iterator</type>
      <name>ActionConstIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdAttributeActionType</name>
    <filename>classsdAttributeActionType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdAttributeActionType</name>
      <anchor>a0</anchor>
      <arglist>(sdAttributeActionTypeEnum action)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdAttributeActionType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdAttributeActionType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdAttributeActionTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdAttributeContainerType</name>
    <filename>classsdAttributeContainerType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdAttributeContainerType</name>
      <anchor>a0</anchor>
      <arglist>(sdAttributeContainerTypeEnum container)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdAttributeContainerType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdAttributeContainerType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdAttributeContainerTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdBase</name>
    <filename>classsdBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdBase</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>sdObjectType</type>
      <name>getObjectType</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sdNameSpace *</type>
      <name>getNameSpace</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a3</anchor>
      <arglist>(sdVisitor *visitor)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdError</name>
    <filename>classsdError.html</filename>
    <base>sdException</base>
  </compound>
  <compound kind="class">
    <name>sdException</name>
    <filename>classsdException.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual const oa::oaString &amp;</type>
      <name>getFormatString</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdField</name>
    <filename>classsdField.html</filename>
    <member kind="function">
      <type></type>
      <name>sdField</name>
      <anchor>a0</anchor>
      <arglist>(const std::string &amp;name, unsigned int index, sdNameSpace *nameSpace, const sdValue *value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdField</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getIndex</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sdNameSpace *</type>
      <name>getNameSpace</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sdValue *</type>
      <name>getValue</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdHierValue</name>
    <filename>classsdHierValue.html</filename>
    <base>sdValue</base>
    <member kind="function">
      <type></type>
      <name>sdHierValue</name>
      <anchor>a0</anchor>
      <arglist>(unsigned int id, const std::string &amp;name, const std::string &amp;description, sdNameSpace *nameSpace, const FieldVector &amp;fields)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdHierValue</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FieldConstIter</type>
      <name>begin</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FieldConstIter</type>
      <name>end</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a4</anchor>
      <arglist>(sdVisitor *visitor)</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; sdField * &gt;</type>
      <name>FieldVector</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FieldVector::const_iterator</type>
      <name>FieldConstIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdLeafValue</name>
    <filename>classsdLeafValue.html</filename>
    <base>sdValue</base>
    <member kind="function">
      <type></type>
      <name>sdLeafValue</name>
      <anchor>a0</anchor>
      <arglist>(unsigned int id, const std::string &amp;name, const std::string &amp;description, sdNameSpace *nameSpace)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdLeafValue</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a2</anchor>
      <arglist>(sdVisitor *visitor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdNameSpace</name>
    <filename>classsdNameSpace.html</filename>
    <member kind="function">
      <type></type>
      <name>sdNameSpace</name>
      <anchor>a0</anchor>
      <arglist>(const std::string &amp;name, const unsigned int version)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdNameSpace</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name, const unsigned int &amp;version, const StringVector &amp;dependencies, const StringVector &amp;aliases)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdNameSpace</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const sdValue *</type>
      <name>findValue</name>
      <anchor>a3</anchor>
      <arglist>(unsigned int enumValue) const</arglist>
    </member>
    <member kind="function">
      <type>const sdValue *</type>
      <name>findValue</name>
      <anchor>a4</anchor>
      <arglist>(const std::string &amp;enumName) const</arglist>
    </member>
    <member kind="function">
      <type>const sdAttribute *</type>
      <name>findAttribute</name>
      <anchor>a5</anchor>
      <arglist>(unsigned int enumValue) const</arglist>
    </member>
    <member kind="function">
      <type>const sdAttribute *</type>
      <name>findAttribute</name>
      <anchor>a6</anchor>
      <arglist>(const std::string &amp;enumName) const</arglist>
    </member>
    <member kind="function">
      <type>const sdObject *</type>
      <name>findObject</name>
      <anchor>a7</anchor>
      <arglist>(unsigned int enumValue) const</arglist>
    </member>
    <member kind="function">
      <type>const sdObject *</type>
      <name>findObject</name>
      <anchor>a8</anchor>
      <arglist>(const std::string &amp;enumName) const</arglist>
    </member>
    <member kind="function">
      <type>const sdRelationshipBase *</type>
      <name>findRelationship</name>
      <anchor>a9</anchor>
      <arglist>(unsigned int enumValue) const</arglist>
    </member>
    <member kind="function">
      <type>const sdRelationshipBase *</type>
      <name>findRelationship</name>
      <anchor>a10</anchor>
      <arglist>(const std::string &amp;enumName) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getVersion</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dependsOn</name>
      <anchor>a13</anchor>
      <arglist>(const sdNameSpace *nameSpace) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchor>a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ValueConstIter</type>
      <name>beginValue</name>
      <anchor>a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ValueConstIter</type>
      <name>endValue</name>
      <anchor>a16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AttributeConstIter</type>
      <name>beginAttribute</name>
      <anchor>a17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AttributeConstIter</type>
      <name>endAttribute</name>
      <anchor>a18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RelationshipConstIter</type>
      <name>beginRelationship</name>
      <anchor>a19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RelationshipConstIter</type>
      <name>endRelationship</name>
      <anchor>a20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>beginObject</name>
      <anchor>a21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>endObject</name>
      <anchor>a22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StringConstIter</type>
      <name>beginDependentNameSpace</name>
      <anchor>a23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StringConstIter</type>
      <name>endDependentNameSpace</name>
      <anchor>a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StringConstIter</type>
      <name>beginNameAlias</name>
      <anchor>a25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StringConstIter</type>
      <name>endNameAlias</name>
      <anchor>a26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a27</anchor>
      <arglist>(sdVisitor *visitor)</arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; unsigned int, const sdValue * &gt;</type>
      <name>ValueMap</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; unsigned int, const sdAttribute * &gt;</type>
      <name>AttributeMap</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; unsigned int, const sdRelationshipBase * &gt;</type>
      <name>RelationshipMap</name>
      <anchor>s2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; unsigned int, const sdObject * &gt;</type>
      <name>ObjectMap</name>
      <anchor>s3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>StringVector</name>
      <anchor>s4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueMap::const_iterator</type>
      <name>ValueConstIter</name>
      <anchor>s5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AttributeMap::const_iterator</type>
      <name>AttributeConstIter</name>
      <anchor>s6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RelationshipMap::const_iterator</type>
      <name>RelationshipConstIter</name>
      <anchor>s7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectMap::const_iterator</type>
      <name>ObjectConstIter</name>
      <anchor>s8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StringVector::const_iterator</type>
      <name>StringConstIter</name>
      <anchor>s9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdValue</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdAttribute</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdObject</name>
      <anchor>l2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdRelationshipBase</name>
      <anchor>l3</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdField</name>
      <anchor>l4</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdSession</name>
      <anchor>l5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdObject</name>
    <filename>classsdObject.html</filename>
    <base>sdBase</base>
    <member kind="function">
      <type></type>
      <name>sdObject</name>
      <anchor>a0</anchor>
      <arglist>(unsigned int id, const std::string &amp;name, const std::string &amp;description, bool concrete, sdNameSpace *nameSpace, const ObjectVector &amp;superObjects)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdObject</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getId</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDescription</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConcrete</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sdAttribute *</type>
      <name>getIdentifier</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>beginSuperObject</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>endSuperObject</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>beginSubObject</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>endSubObject</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdObjectAttributeIter</type>
      <name>beginAttribute</name>
      <anchor>a11</anchor>
      <arglist>(bool local) const</arglist>
    </member>
    <member kind="function">
      <type>sdObjectAttributeIter</type>
      <name>endAttribute</name>
      <anchor>a12</anchor>
      <arglist>(bool local) const</arglist>
    </member>
    <member kind="function">
      <type>sdObjectRelationshipIter</type>
      <name>beginRelationship</name>
      <anchor>a13</anchor>
      <arglist>(bool local) const</arglist>
    </member>
    <member kind="function">
      <type>sdObjectRelationshipIter</type>
      <name>endRelationship</name>
      <anchor>a14</anchor>
      <arglist>(bool local) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a15</anchor>
      <arglist>(sdVisitor *visitor)</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; const sdObject * &gt;</type>
      <name>ObjectVector</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectVector::const_iterator</type>
      <name>ObjectConstIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdAttribute</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdRelationship</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdRelationshipSet</name>
      <anchor>l2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdObjectAttributeIter</name>
      <anchor>l3</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdObjectRelationshipIter</name>
      <anchor>l4</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdNameSpace</name>
      <anchor>l5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdObjectAttributeIter</name>
    <filename>classsdObjectAttributeIter.html</filename>
    <base>sdObjectMemberIter&lt; sdAttribute &gt;</base>
    <member kind="function">
      <type></type>
      <name>sdObjectAttributeIter</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdObjectAttributeIter</name>
      <anchor>a1</anchor>
      <arglist>(const sdObject *object, bool local)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdObjectAttributeIter</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdObjectMemberIter</name>
    <filename>classsdObjectMemberIter.html</filename>
    <templarg>SDClass</templarg>
    <member kind="function">
      <type>const SDClass *</type>
      <name>operator *</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchor>a1</anchor>
      <arglist>(const sdObjectMemberIter&lt; SDClass &gt; &amp;iter) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchor>a2</anchor>
      <arglist>(const sdObjectMemberIter&lt; SDClass &gt; &amp;iter) const</arglist>
    </member>
    <member kind="function">
      <type>sdObjectMemberIter&lt; SDClass &gt; &amp;</type>
      <name>operator++</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="public">
      <type>std::vector&lt; const SDClass * &gt;</type>
      <name>MemberVector</name>
      <anchor>t0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="public">
      <type>MemberVector::const_iterator</type>
      <name>MemberConstIter</name>
      <anchor>t1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdObjectRelationshipIter</name>
    <filename>classsdObjectRelationshipIter.html</filename>
    <base>sdObjectMemberIter&lt; sdRelationshipBase &gt;</base>
    <member kind="function">
      <type></type>
      <name>sdObjectRelationshipIter</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdObjectRelationshipIter</name>
      <anchor>a1</anchor>
      <arglist>(const sdObject *object, bool local)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdObjectRelationshipIter</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdObjectType</name>
    <filename>classsdObjectType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdObjectType</name>
      <anchor>a0</anchor>
      <arglist>(sdObjectTypeEnum valueType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdObjectType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdObjectType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdObjectTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationship</name>
    <filename>classsdRelationship.html</filename>
    <base>sdRelationshipBase</base>
    <member kind="function">
      <type></type>
      <name>sdRelationship</name>
      <anchor>a0</anchor>
      <arglist>(unsigned int id, const std::string &amp;name, const std::string &amp;relDescription, sdRelationshipOrderingType orderType, const Actions &amp;actions, sdRelationshipAssociationType associationType, sdRelationshipMultiplicityType multiplicityType, sdRelationshipContainerType containerType, sdNameSpace *nameSpace, const sdObject *from, const sdObject *to)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdRelationship</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const sdObject *</type>
      <name>getFrom</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sdObject *</type>
      <name>getTo</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a4</anchor>
      <arglist>(sdVisitor *visitor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipActionType</name>
    <filename>classsdRelationshipActionType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdRelationshipActionType</name>
      <anchor>a0</anchor>
      <arglist>(sdRelationshipActionTypeEnum valueType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdRelationshipActionType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdRelationshipActionType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdRelationshipActionTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipAssociationType</name>
    <filename>classsdRelationshipAssociationType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdRelationshipAssociationType</name>
      <anchor>a0</anchor>
      <arglist>(sdRelationshipAssociationTypeEnum valueType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdRelationshipAssociationType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdRelationshipAssociationType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdRelationshipAssociationTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipBase</name>
    <filename>classsdRelationshipBase.html</filename>
    <base>sdBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdRelationshipBase</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getId</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDescription</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdRelationshipSubType</type>
      <name>getSubType</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdRelationshipOrderingType</type>
      <name>getOrderType</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdRelationshipAssociationType</type>
      <name>getAssociationType</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdRelationshipMultiplicityType</type>
      <name>getMultiplicityType</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdRelationshipContainerType</type>
      <name>getContainerType</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ActionConstIter</type>
      <name>begin</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ActionConstIter</type>
      <name>end</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; sdRelationshipActionType &gt;</type>
      <name>Actions</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Actions::const_iterator</type>
      <name>ActionConstIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipContainerType</name>
    <filename>classsdRelationshipContainerType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdRelationshipContainerType</name>
      <anchor>a0</anchor>
      <arglist>(sdRelationshipContainerTypeEnum container)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdRelationshipContainerType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdRelationshipContainerType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdRelationshipContainerTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipMultiplicityType</name>
    <filename>classsdRelationshipMultiplicityType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdRelationshipMultiplicityType</name>
      <anchor>a0</anchor>
      <arglist>(sdRelationshipMultiplicityTypeEnum valueType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdRelationshipMultiplicityType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdRelationshipMultiplicityType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdRelationshipMultiplicityTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipOrderingType</name>
    <filename>classsdRelationshipOrderingType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdRelationshipOrderingType</name>
      <anchor>a0</anchor>
      <arglist>(sdRelationshipOrderingTypeEnum valueType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdRelationshipOrderingType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdRelationshipOrderingType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdRelationshipOrderingTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipSet</name>
    <filename>classsdRelationshipSet.html</filename>
    <base>sdRelationshipBase</base>
    <member kind="function">
      <type></type>
      <name>sdRelationshipSet</name>
      <anchor>a0</anchor>
      <arglist>(unsigned int id, const std::string &amp;name, const std::string &amp;relDescription, sdRelationshipOrderingType orderType, const Actions &amp;actions, sdRelationshipAssociationType associationType, sdRelationshipMultiplicityType multiplicityType, sdRelationshipContainerType containerType, sdNameSpace *nameSpace, const sdObject *from, const ObjectVector &amp;toObjects)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdRelationshipSet</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const sdObject *</type>
      <name>getFrom</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>beginToObject</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>endToObject</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a5</anchor>
      <arglist>(sdVisitor *visitor)</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; const sdObject * &gt;</type>
      <name>ObjectVector</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectVector::const_iterator</type>
      <name>ObjectConstIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipSubType</name>
    <filename>classsdRelationshipSubType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdRelationshipSubType</name>
      <anchor>a0</anchor>
      <arglist>(sdRelationshipSubTypeEnum valueType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdRelationshipSubType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdRelationshipSubType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdRelationshipSubTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdSession</name>
    <filename>classsdSession.html</filename>
    <member kind="function">
      <type>sdNameSpace *</type>
      <name>getNameSpace</name>
      <anchor>a0</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroyContents</name>
      <anchor>a1</anchor>
      <arglist>(sdNameSpace *nameSpace)</arglist>
    </member>
    <member kind="function">
      <type>NameSpaceConstIter</type>
      <name>begin</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NameSpaceConstIter</type>
      <name>end</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>sdSession *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; const sdNameSpace * &gt;</type>
      <name>NameSpaceVector</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>NameSpaceVector::const_iterator</type>
      <name>NameSpaceConstIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdNameSpace</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdValue</name>
    <filename>classsdValue.html</filename>
    <base>sdBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdValue</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getId</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDescription</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdValueSubType</type>
      <name>getSubType</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdValueSubType</name>
    <filename>classsdValueSubType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdValueSubType</name>
      <anchor>a0</anchor>
      <arglist>(sdValueSubTypeEnum value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdValueSubType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdValueSubType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdValueSubTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdVisitor</name>
    <filename>classsdVisitor.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a0</anchor>
      <arglist>(const sdLeafValue *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a1</anchor>
      <arglist>(const sdHierValue *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a2</anchor>
      <arglist>(const sdAttribute *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a3</anchor>
      <arglist>(const sdRelationship *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a4</anchor>
      <arglist>(const sdRelationshipSet *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a5</anchor>
      <arglist>(const sdObject *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a6</anchor>
      <arglist>(const sdNameSpace *object)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSetAttributeChangeRec</name>
    <filename>classoaSetAttributeChangeRec.html</filename>
    <base>oaAttributeChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaSetAttributeChangeRec</name>
      <anchor>oaSetAttributeChangeRec::oaSetAttributeChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn, sr::srAttributeBase::SPtr valueIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaSetAttributeChangeRec</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const sd::sdAttribute *</type>
      <name>getSchemaDefinition</name>
      <anchor>oaSetAttributeChangeRec::getSchemaDefinition</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMObjectRef::SPtr</type>
      <name>getOwner</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sr::srAttributeBase::SPtr</type>
      <name>getValue</name>
      <anchor>oaSetAttributeChangeRec::getValue</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaSetAttributeChangeRec::accept</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sr1to1Relationship</name>
    <filename>classsr1to1Relationship.html</filename>
    <base>srRelationshipBase</base>
    <member kind="function">
      <type></type>
      <name>sr1to1Relationship</name>
      <anchor>sr1to1Relationship::sr1to1Relationship</anchor>
      <arglist>(const sd::sdRelationshipBase *def, const srObjectRef::SPtr from, const srObjectRef::SPtr to)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sr1to1Relationship</name>
      <anchor>sr1to1Relationship::~sr1to1Relationship</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>sr1to1Relationship::accept</anchor>
      <arglist>(srVisitorMgr &amp;visitor)</arglist>
    </member>
    <member kind="function">
      <type>srObjectRef::CSPtr</type>
      <name>getTo</name>
      <anchor>sr1to1Relationship::getTo</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTo</name>
      <anchor>sr1to1Relationship::setTo</anchor>
      <arglist>(const srObjectRef::SPtr object)</arglist>
    </member>
    <member kind="typedef">
      <type>sr1to1Relationship *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sr1toNRelationship</name>
    <filename>classsr1toNRelationship.html</filename>
    <base>srRelationshipBase</base>
    <member kind="function">
      <type></type>
      <name>sr1toNRelationship</name>
      <anchor>sr1toNRelationship::sr1toNRelationship</anchor>
      <arglist>(const sd::sdRelationshipBase *def, const srObjectRef::SPtr from, const ObjectRefVec &amp;to)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sr1toNRelationship</name>
      <anchor>sr1toNRelationship::~sr1toNRelationship</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>sr1toNRelationship::accept</anchor>
      <arglist>(srVisitorMgr &amp;visitor)</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>beginToObject</name>
      <anchor>sr1toNRelationship::beginToObject</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>endToObject</name>
      <anchor>sr1toNRelationship::endToObject</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTo</name>
      <anchor>sr1toNRelationship::setTo</anchor>
      <arglist>(const ObjectRefVec &amp;objects)</arglist>
    </member>
    <member kind="typedef">
      <type>sr1toNRelationship *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; srObjectRef::SPtr &gt;</type>
      <name>ObjectRefVec</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectRefVec::const_iterator</type>
      <name>ConstIterator</name>
      <anchor>s2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srAttributeBase</name>
    <filename>classsrAttributeBase.html</filename>
    <base>srBase</base>
    <member kind="function">
      <type></type>
      <name>srAttributeBase</name>
      <anchor>srAttributeBase::srAttributeBase</anchor>
      <arglist>(const sd::sdAttribute *def, const srObjectRef::SPtr object)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~srAttributeBase</name>
      <anchor>srAttributeBase::~srAttributeBase</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>srObjectRef::CSPtr</type>
      <name>getObject</name>
      <anchor>srAttributeBase::getObject</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sd::sdAttribute *</type>
      <name>getDef</name>
      <anchor>srAttributeBase::getDef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>srAttributeBase *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srBase</name>
    <filename>classsrBase.html</filename>
    <member kind="function">
      <type></type>
      <name>srBase</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~srBase</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>srBase::accept</anchor>
      <arglist>(srVisitorMgr &amp;visitor)=0</arglist>
    </member>
    <member kind="typedef">
      <type>srBase *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srObjectRef</name>
    <filename>classsrObjectRef.html</filename>
    <base>srBase</base>
    <member kind="function">
      <type></type>
      <name>srObjectRef</name>
      <anchor>srObjectRef::srObjectRef</anchor>
      <arglist>(const sd::sdObject *def, void *object)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~srObjectRef</name>
      <anchor>srObjectRef::~srObjectRef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>srObjectRef::accept</anchor>
      <arglist>(srVisitorMgr &amp;visitor)</arglist>
    </member>
    <member kind="function">
      <type>const sd::sdObject *</type>
      <name>getDef</name>
      <anchor>srObjectRef::getDef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>getObject</name>
      <anchor>srObjectRef::getObject</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObject</name>
      <anchor>srObjectRef::setObject</anchor>
      <arglist>(void *object)</arglist>
    </member>
    <member kind="typedef">
      <type>srObjectRef *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const srObjectRef *</type>
      <name>CSPtr</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srObjectState</name>
    <filename>classsrObjectState.html</filename>
    <base>srBase</base>
    <member kind="function">
      <type></type>
      <name>srObjectState</name>
      <anchor>srObjectState::srObjectState</anchor>
      <arglist>(const sd::sdObject *def, const AttributeMap &amp;attributes, const RelationshipMap &amp;relationships)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~srObjectState</name>
      <anchor>srObjectState::~srObjectState</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>srObjectState::accept</anchor>
      <arglist>(srVisitorMgr &amp;visitor)</arglist>
    </member>
    <member kind="function">
      <type>const sd::sdObject *</type>
      <name>getDef</name>
      <anchor>srObjectState::getDef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AttributeConstIter</type>
      <name>beginAttribute</name>
      <anchor>srObjectState::beginAttribute</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AttributeConstIter</type>
      <name>endAttribute</name>
      <anchor>srObjectState::endAttribute</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RelationshipConstIter</type>
      <name>beginRelationship</name>
      <anchor>srObjectState::beginRelationship</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RelationshipConstIter</type>
      <name>endRelationship</name>
      <anchor>srObjectState::endRelationship</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAttribute</name>
      <anchor>srObjectState::addAttribute</anchor>
      <arglist>(srAttributeBase::SPtr attribute, bool overwrite=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRelationship</name>
      <anchor>srObjectState::addRelationship</anchor>
      <arglist>(srRelationshipBase::SPtr relationship, bool overwrite=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAttributes</name>
      <anchor>srObjectState::setAttributes</anchor>
      <arglist>(const AttributeMap &amp;attributes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelationships</name>
      <anchor>srObjectState::setRelationships</anchor>
      <arglist>(const RelationshipMap &amp;relationships)</arglist>
    </member>
    <member kind="typedef">
      <type>srObjectState *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; const sd::sdAttribute *, srAttributeBase::SPtr, srSDEnumLess&lt; sd::sdAttribute &gt; &gt;</type>
      <name>AttributeMap</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; const sd::sdRelationshipBase *, srRelationshipBase::SPtr, srSDEnumLess&lt; sd::sdRelationshipBase &gt; &gt;</type>
      <name>RelationshipMap</name>
      <anchor>s2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; const sd::sdAttribute *, srAttributeBase::SPtr &gt;</type>
      <name>AttributePair</name>
      <anchor>s3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; const sd::sdRelationshipBase *, srRelationshipBase::SPtr &gt;</type>
      <name>RelationshipPair</name>
      <anchor>s4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AttributeMap::const_iterator</type>
      <name>AttributeConstIter</name>
      <anchor>s5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RelationshipMap::const_iterator</type>
      <name>RelationshipConstIter</name>
      <anchor>s6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srRelationshipBase</name>
    <filename>classsrRelationshipBase.html</filename>
    <base>srBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~srRelationshipBase</name>
      <anchor>srRelationshipBase::~srRelationshipBase</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const sd::sdRelationshipBase *</type>
      <name>getDef</name>
      <anchor>srRelationshipBase::getDef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sr::srObjectRef::CSPtr</type>
      <name>getFrom</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>srRelationshipBase *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="public">
      <type></type>
      <name>srRelationshipBase</name>
      <anchor>b0</anchor>
      <arglist>(const sd::sdRelationshipBase *def=0, const srObjectRef::CSPtr from=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srSDEnumLess</name>
    <filename>classsrSDEnumLess.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchor>srSDEnumLess::operator</anchor>
      <arglist>(const T *lhs, const T *rhs) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srValueBase</name>
    <filename>classsrValueBase.html</filename>
    <base>srBase</base>
    <member kind="function">
      <type></type>
      <name>srValueBase</name>
      <anchor>srValueBase::srValueBase</anchor>
      <arglist>(const sd::sdValue *def)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~srValueBase</name>
      <anchor>srValueBase::~srValueBase</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const sd::sdValue *</type>
      <name>getDef</name>
      <anchor>srValueBase::getDef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>srValueBase *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srVisitor</name>
    <filename>classsrVisitor.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~srVisitor</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a1</anchor>
      <arglist>(srObjectRef *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a2</anchor>
      <arglist>(srObjectState *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a3</anchor>
      <arglist>(sr1to1Relationship *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a4</anchor>
      <arglist>(sr1toNRelationship *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a5</anchor>
      <arglist>(srRelationshipBase *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a6</anchor>
      <arglist>(srAttributeBase *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a7</anchor>
      <arglist>(srValueBase *object)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srVisitorMgr</name>
    <filename>classsrVisitorMgr.html</filename>
    <member kind="function">
      <type></type>
      <name>srVisitorMgr</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~srVisitorMgr</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addVisitor</name>
      <anchor>a3</anchor>
      <arglist>(const sd::sdNameSpace *nameSpace, srVisitor *visitor)</arglist>
    </member>
    <member kind="function">
      <type>srVisitor *</type>
      <name>getVisitor</name>
      <anchor>a4</anchor>
      <arglist>(const sd::sdNameSpace *nameSpace) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaTransientMarkerChangeRec</name>
    <filename>classoaTransientMarkerChangeRec.html</filename>
    <base>oaMarkerChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaTransientMarkerChangeRec</name>
      <anchor>a0</anchor>
      <arglist>(oaChangeSetBase *changeSetIn, oaMarkerChangeRecTypeEnum typeIn, oaCMDatabaseRef::SPtr dbRef)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaMarkerChangeRec *</type>
      <name>clone</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a2</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaUnsetAttributeChangeRec</name>
    <filename>classoaUnsetAttributeChangeRec.html</filename>
    <base>oaAttributeChangeRec</base>
    <member kind="function">
      <type></type>
      <name>oaUnsetAttributeChangeRec</name>
      <anchor>oaUnsetAttributeChangeRec::oaUnsetAttributeChangeRec</anchor>
      <arglist>(oaChangeSetBase *changeSetIn, oaCMObjectRef::SPtr ownerIn, sd::sdAttribute *attrIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaUnsetAttributeChangeRec</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const sd::sdAttribute *</type>
      <name>getSchemaDefinition</name>
      <anchor>oaUnsetAttributeChangeRec::getSchemaDefinition</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaCMObjectRef::SPtr</type>
      <name>getOwner</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>oaUnsetAttributeChangeRec::accept</anchor>
      <arglist>(oaChangeRecVisitor *visitor, oaBoolean forward=true)</arglist>
    </member>
  </compound>
</tagfile>
