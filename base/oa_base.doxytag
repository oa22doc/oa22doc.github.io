<?xml version='1.0' encoding='ISO-8859-1' standalone='yes'?>
<tagfile>
  <compound kind="file">
    <name>oa2DSpace.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oa2DSpace_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oa2DSpace.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oa2DSpace_8h</filename>
    <class kind="class">oa2DSearch</class>
    <class kind="class">oa2DSpace</class>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaBox</name>
      <anchor>a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oa2DSpace.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oa2DSpace_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oa2DSpace_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaAppDef.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaAppDef_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaAppDef.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaAppDef_8h</filename>
    <class kind="class">oaAppDef</class>
    <class kind="class">oaBooleanAppDef</class>
    <class kind="class">oaDataAppDef</class>
    <class kind="class">oaDoubleAppDef</class>
    <class kind="class">oaFloatAppDef</class>
    <class kind="class">oaIntAppDef</class>
    <class kind="class">oaInterPointerAppDef</class>
    <class kind="class">oaIntraPointerAppDef</class>
    <class kind="class">oaStringAppDef</class>
    <class kind="class">oaTimeAppDef</class>
    <class kind="class">oaTraits&lt; oaAppDef &gt;</class>
    <class kind="class">oaVarDataAppDef</class>
    <class kind="class">oaVoidPointerAppDef</class>
    <member kind="define">
      <type>#define</type>
      <name>oaAppDef_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaString</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaAppDef.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaAppDef_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaAppDef_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaAppObjectDef.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaAppObjectDef_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaAppObjectDef.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaAppObjectDef_8h</filename>
    <class kind="class">oaAppObject</class>
    <class kind="class">oaAppObjectDef</class>
    <class kind="class">oaTraits&lt; oaAppObject &gt;</class>
    <class kind="class">oaTraits&lt; oaAppObjectDef &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaObjectAppDef_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaTimeStamp</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaAppObjectDefCollection.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaAppObjectDefCollection_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaAppProp.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaAppProp_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaAppProp.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaAppProp_8h</filename>
    <class kind="class">oaAppProp</class>
    <class kind="class">oaTraits&lt; oaAppProp &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaAppProp_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaArray.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaArray_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaArray.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaArray_8h</filename>
    <class kind="class">oaArray</class>
    <class kind="class">oaArrayBase</class>
    <class kind="class">oaFeatureArray</class>
    <class kind="class">oaManagedTypeArray</class>
    <class kind="class">oaSubset</class>
    <member kind="define">
      <type>#define</type>
      <name>oaArray_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaFeature</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaArray.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaArray_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaArray_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>qsortCmpFunc</name>
      <anchor>a1</anchor>
      <arglist>)(const void *, const void *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaBase.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaBase_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaBase_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaBaseCollection.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaBaseCollection_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaBaseCollection.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaBaseCollection_8h</filename>
    <class kind="class">oaAppObjectCollection</class>
    <class kind="class">oaAppObjectDefCollection</class>
    <class kind="class">oaCollection&lt; oaAppDef, oaObject &gt;</class>
    <class kind="class">oaCollection&lt; oaAppDef, oaSession &gt;</class>
    <class kind="class">oaCollection&lt; oaAppObjectDef, oaSession &gt;</class>
    <class kind="class">oaCollection&lt; oaConstraint, oaConstraintGroup &gt;</class>
    <class kind="class">oaCollection&lt; oaSimpleConstraint, oaConstraintGroup &gt;</class>
    <class kind="class">oaConstraintCollection</class>
    <class kind="class">oaConstraintInGroupCollection</class>
    <class kind="class">oaConstraintInGroupIter</class>
    <class kind="class">oaIter&lt; oaAppDef &gt;</class>
    <class kind="class">oaIter&lt; oaAppObject &gt;</class>
    <class kind="class">oaIter&lt; oaAppObjectDef &gt;</class>
    <class kind="class">oaIter&lt; oaConstraint &gt;</class>
    <class kind="class">oaCollection&lt; oaGroup, oaObject &gt;</class>
    <class kind="class">oaCollection&lt; oaGroupMember, oaObject &gt;</class>
    <class kind="class">oaCollection&lt; oaProp, oaObject &gt;</class>
    <class kind="class">oaDatabaseCollection</class>
    <class kind="class">oaDatabaseIter</class>
    <class kind="class">oaGroupCollection</class>
    <class kind="class">oaIter&lt; oaGroup &gt;</class>
    <class kind="class">oaIter&lt; oaGroupMember &gt;</class>
    <class kind="class">oaIter&lt; oaProp &gt;</class>
    <class kind="class">oaIter&lt; oaSimpleConstraint &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaBaseCollection_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaIter</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaBaseModTypes.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaBaseModTypes_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaBaseModTypes_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="enumeration">
      <name>oaConstraintGroupModTypeEnum</name>
      <anchor>a39</anchor>
      <init>0</init>
    </member>
    <member kind="enumeration">
      <name>oaAppObjectModTypeEnum</name>
      <anchor>a40</anchor>
      <init>0</init>
    </member>
    <member kind="enumeration">
      <name>oaConstraintGroupHeaderModTypeEnum</name>
      <anchor>a41</anchor>
      <init>0</init>
    </member>
    <member kind="enumeration">
      <name>oaConstraintDefModTypeEnum</name>
      <anchor>a42</anchor>
      <init>0</init>
    </member>
    <member kind="enumeration">
      <name>oaConstraintParamDefModTypeEnum</name>
      <anchor>a43</anchor>
      <init>0</init>
    </member>
    <member kind="enumeration">
      <name>oaObjectDefModTypeEnum</name>
      <anchor>a44</anchor>
      <init>0</init>
    </member>
    <member kind="enumeration">
      <name>oaAvatarModTypeEnum</name>
      <anchor>a45</anchor>
      <init>1</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetIncarnationAvatarModType</name>
      <anchor>a45a1</anchor>
      <init> 3</init>
    </member>
    <member kind="enumeration">
      <name>oaGroupModTypeEnum</name>
      <anchor>a46</anchor>
      <init>5</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetNameGroupModType</name>
      <anchor>a46a2</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetGroupTypeGroupModType</name>
      <anchor>a46a3</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetDeleteWhenGroupModType</name>
      <anchor>a46a4</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetUniqueNameGroupModType</name>
      <anchor>a46a5</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetOrderedGroupModType</name>
      <anchor>a46a6</anchor>
      <init> 6</init>
    </member>
    <member kind="enumeration">
      <name>oaGroupMemberModTypeEnum</name>
      <anchor>a47</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetLeaderGroupMemberModType</name>
      <anchor>a47a7</anchor>
      <init> 10</init>
    </member>
    <member kind="enumvalue">
      <name>oacMoveGroupMemModType</name>
      <anchor>a47a8</anchor>
      <init> 11</init>
    </member>
    <member kind="enumvalue">
      <name>oacMoveFirstGroupMemModType</name>
      <anchor>a47a9</anchor>
      <init> 12</init>
    </member>
    <member kind="enumeration">
      <name>oaPropModTypeEnum</name>
      <anchor>a48</anchor>
      <init>5</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetNamePropModType</name>
      <anchor>a48a10</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetValuePropModType</name>
      <anchor>a48a11</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetRangePropModType</name>
      <anchor>a48a12</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacMovePropModType</name>
      <anchor>a48a13</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetAppTypePropModType</name>
      <anchor>a48a14</anchor>
      <init> 6</init>
    </member>
    <member kind="enumeration">
      <name>oaValueModTypeEnum</name>
      <anchor>a49</anchor>
      <init>9</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetValueValueModType</name>
      <anchor>a49a15</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetSecondValueValueModType</name>
      <anchor>a49a16</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetSideAntennaRatioValueModType</name>
      <anchor>a49a17</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetGateAntennaRatioValueModType</name>
      <anchor>a49a18</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetDiodeAntennaRatioValueModType</name>
      <anchor>a49a19</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetDefaultAntennaRatioValueModType</name>
      <anchor>a49a20</anchor>
      <init> 7</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetSecondAntennaRatioValueModType</name>
      <anchor>a49a21</anchor>
      <init> 8</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetThirdAntennaRatioValueModType</name>
      <anchor>a49a22</anchor>
      <init> 9</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetFourthAntennaRatioValueModType</name>
      <anchor>a49a23</anchor>
      <init> 10</init>
    </member>
    <member kind="enumeration">
      <name>oaConstraintParamModTypeEnum</name>
      <anchor>a50</anchor>
      <init>1</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetValueConstraintParamModType</name>
      <anchor>a50a24</anchor>
      <init> 2</init>
    </member>
    <member kind="enumeration">
      <name>oaConstraintModTypeEnum</name>
      <anchor>a51</anchor>
      <init>5</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetHardConstraintModType</name>
      <anchor>a51a25</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetValueConstraintModType</name>
      <anchor>a51a26</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetParamsConstraintModType</name>
      <anchor>a51a27</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetIDConstraintModType</name>
      <anchor>a51a28</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetDescriptionConstraintModType</name>
      <anchor>a51a29</anchor>
      <init> 6</init>
    </member>
    <member kind="enumeration">
      <name>oaConstraintGroupMemModTypeEnum</name>
      <anchor>a52</anchor>
      <init>2</init>
    </member>
    <member kind="enumvalue">
      <name>oacMoveConstraintGroupMemModType</name>
      <anchor>a52a30</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacMoveFirstConstraintGroupMemModType</name>
      <anchor>a52a31</anchor>
      <init> 3</init>
    </member>
    <member kind="enumeration">
      <name>oaLibDefListMemModTypeEnum</name>
      <anchor>a53</anchor>
      <init>7</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibDefListMemMoveAfterModType</name>
      <anchor>a53a32</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibDefListMemMoveLastModType</name>
      <anchor>a53a33</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibDefListMemMoveFirstModType</name>
      <anchor>a53a34</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibDefSetWritePathModType</name>
      <anchor>a53a35</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibDefSetLibModeModType</name>
      <anchor>a53a36</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibDefAddAttributeModType</name>
      <anchor>a53a37</anchor>
      <init> 7</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibDefRemoveAttributeModType</name>
      <anchor>a53a38</anchor>
      <init> 8</init>
    </member>
    <member kind="enumeration">
      <name>oaLibDefListModTypeEnum</name>
      <anchor>a54</anchor>
      <init>0</init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaBaseMsgs.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaBaseMsgs_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaBaseMsgs_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavBaseMsgIdStartValue</name>
      <anchor>a1</anchor>
      <init>0</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumBaseMsgIds</name>
      <anchor>a2</anchor>
      <init>242</init>
    </member>
    <member kind="enumeration">
      <name>oaBaseMsgIds</name>
      <anchor>a245</anchor>
      <init>242</init>
    </member>
    <member kind="enumvalue">
      <name>oacOSError</name>
      <anchor>a245a3</anchor>
      <init> oavBaseMsgIdStartValue</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidAPIRev</name>
      <anchor>a245a4</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidFileAccessMode</name>
      <anchor>a245a5</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacFileNotWritable</name>
      <anchor>a245a6</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacUnableToRemove</name>
      <anchor>a245a7</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacUnableToRename</name>
      <anchor>a245a8</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidFileSize</name>
      <anchor>a245a9</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidMapFileWindow</name>
      <anchor>a245a10</anchor>
      <init> 7</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidSetMapWindowFile</name>
      <anchor>a245a11</anchor>
      <init> 8</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDatabaseFile</name>
      <anchor>a245a12</anchor>
      <init> 9</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDatabaseIndex</name>
      <anchor>a245a13</anchor>
      <init> 10</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDatabaseSize</name>
      <anchor>a245a14</anchor>
      <init> 11</init>
    </member>
    <member kind="enumvalue">
      <name>oacDeletedDatabase</name>
      <anchor>a245a15</anchor>
      <init> 12</init>
    </member>
    <member kind="enumvalue">
      <name>oacMismatchDatabaseID</name>
      <anchor>a245a16</anchor>
      <init> 13</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotUpgrade</name>
      <anchor>a245a17</anchor>
      <init> 14</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDatabaseAccessMode</name>
      <anchor>a245a18</anchor>
      <init> 15</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidProp</name>
      <anchor>a245a19</anchor>
      <init> 16</init>
    </member>
    <member kind="enumvalue">
      <name>oacPropNameUsed</name>
      <anchor>a245a20</anchor>
      <init> 17</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidObjForProp</name>
      <anchor>a245a21</anchor>
      <init> 18</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidGroupTypeName</name>
      <anchor>a245a22</anchor>
      <init> 19</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidGroupDeleteWhenTypeName</name>
      <anchor>a245a23</anchor>
      <init> 20</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidGroup</name>
      <anchor>a245a24</anchor>
      <init> 21</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidObjForGroup</name>
      <anchor>a245a25</anchor>
      <init> 22</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidGroupObject</name>
      <anchor>a245a26</anchor>
      <init> 23</init>
    </member>
    <member kind="enumvalue">
      <name>oacGroupMemberNotInSameDB</name>
      <anchor>a245a27</anchor>
      <init> 24</init>
    </member>
    <member kind="enumvalue">
      <name>oacGroupMemberNotInDomain</name>
      <anchor>a245a28</anchor>
      <init> 25</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidUniqueGroupName</name>
      <anchor>a245a29</anchor>
      <init> 26</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidGroupForSameObj</name>
      <anchor>a245a30</anchor>
      <init> 27</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidGroupForLeader</name>
      <anchor>a245a31</anchor>
      <init> 28</init>
    </member>
    <member kind="enumvalue">
      <name>oacMultipleGroupLeader</name>
      <anchor>a245a32</anchor>
      <init> 29</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidGroupLeader</name>
      <anchor>a245a33</anchor>
      <init> 30</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidGroupMem</name>
      <anchor>a245a34</anchor>
      <init> 31</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidGroupForMemberMove</name>
      <anchor>a245a35</anchor>
      <init> 32</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidGroupTypeForMemberMove</name>
      <anchor>a245a36</anchor>
      <init> 33</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidMoveLeader</name>
      <anchor>a245a37</anchor>
      <init> 34</init>
    </member>
    <member kind="enumvalue">
      <name>oacUnableToOpenDir</name>
      <anchor>a245a38</anchor>
      <init> 35</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidValueForIntRange</name>
      <anchor>a245a39</anchor>
      <init> 36</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidValueForFloatRange</name>
      <anchor>a245a40</anchor>
      <init> 37</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidEnumValue</name>
      <anchor>a245a41</anchor>
      <init> 38</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidName</name>
      <anchor>a245a42</anchor>
      <init> 39</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidNameTypeName</name>
      <anchor>a245a43</anchor>
      <init> 40</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidNameLength</name>
      <anchor>a245a44</anchor>
      <init> 41</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidNameSyntax</name>
      <anchor>a245a45</anchor>
      <init> 42</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidNameChar</name>
      <anchor>a245a46</anchor>
      <init> 43</init>
    </member>
    <member kind="enumvalue">
      <name>oacStepNameInvalid</name>
      <anchor>a245a47</anchor>
      <init> 44</init>
    </member>
    <member kind="enumvalue">
      <name>oacIndexedNameInvalid</name>
      <anchor>a245a48</anchor>
      <init> 45</init>
    </member>
    <member kind="enumvalue">
      <name>oacVectorNameInvalid</name>
      <anchor>a245a49</anchor>
      <init> 46</init>
    </member>
    <member kind="enumvalue">
      <name>oacHierNameInvalid</name>
      <anchor>a245a50</anchor>
      <init> 47</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidNameIndex</name>
      <anchor>a245a51</anchor>
      <init> 48</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidVectorValue</name>
      <anchor>a245a52</anchor>
      <init> 49</init>
    </member>
    <member kind="enumvalue">
      <name>oacBundleNameInvalid</name>
      <anchor>a245a53</anchor>
      <init> 50</init>
    </member>
    <member kind="enumvalue">
      <name>oacProgrammableCharTaken</name>
      <anchor>a245a54</anchor>
      <init> 51</init>
    </member>
    <member kind="enumvalue">
      <name>oacProgrammableCharInvalid</name>
      <anchor>a245a55</anchor>
      <init> 52</init>
    </member>
    <member kind="enumvalue">
      <name>oacNameNotIndexed</name>
      <anchor>a245a56</anchor>
      <init> 53</init>
    </member>
    <member kind="enumvalue">
      <name>oacBitNotInRangeForName</name>
      <anchor>a245a57</anchor>
      <init> 54</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDesignObjectForAppDef</name>
      <anchor>a245a58</anchor>
      <init> 55</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDesignObjectForInterAppDef</name>
      <anchor>a245a59</anchor>
      <init> 56</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDesignObjectForIntraAppDef</name>
      <anchor>a245a60</anchor>
      <init> 57</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidAppDef</name>
      <anchor>a245a61</anchor>
      <init> 58</init>
    </member>
    <member kind="enumvalue">
      <name>oacAppDefExists</name>
      <anchor>a245a62</anchor>
      <init> 59</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidAppObjectDef</name>
      <anchor>a245a63</anchor>
      <init> 60</init>
    </member>
    <member kind="enumvalue">
      <name>oacDeletedAppObject</name>
      <anchor>a245a64</anchor>
      <init> 61</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidAppObject</name>
      <anchor>a245a65</anchor>
      <init> 62</init>
    </member>
    <member kind="enumvalue">
      <name>oacDeleteLockedTree</name>
      <anchor>a245a66</anchor>
      <init> 63</init>
    </member>
    <member kind="enumvalue">
      <name>oacMemGetFailed</name>
      <anchor>a245a67</anchor>
      <init> 64</init>
    </member>
    <member kind="enumvalue">
      <name>oacMemResizeFailed</name>
      <anchor>a245a68</anchor>
      <init> 65</init>
    </member>
    <member kind="enumvalue">
      <name>oacNoObjectDB</name>
      <anchor>a245a69</anchor>
      <init> 66</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidObjectTypeName</name>
      <anchor>a245a70</anchor>
      <init> 67</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidOrientName</name>
      <anchor>a245a71</anchor>
      <init> 68</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidInterpolateTypeName</name>
      <anchor>a245a72</anchor>
      <init> 69</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidExtrapolateTypeName</name>
      <anchor>a245a73</anchor>
      <init> 70</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDomainName</name>
      <anchor>a245a74</anchor>
      <init> 71</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidParamTypeName</name>
      <anchor>a245a75</anchor>
      <init> 72</init>
    </member>
    <member kind="enumvalue">
      <name>oacNotASession</name>
      <anchor>a245a76</anchor>
      <init> 73</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidSession</name>
      <anchor>a245a77</anchor>
      <init> 74</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConstraintParamTypeName</name>
      <anchor>a245a78</anchor>
      <init> 75</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidSimpleConstraintTypeName</name>
      <anchor>a245a79</anchor>
      <init> 76</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidLayerConstraintTypeName</name>
      <anchor>a245a80</anchor>
      <init> 77</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidLayerPairConstraintTypeName</name>
      <anchor>a245a81</anchor>
      <init> 78</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDBTypeName</name>
      <anchor>a245a82</anchor>
      <init> 79</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConstraintParamDef</name>
      <anchor>a245a83</anchor>
      <init> 80</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintParamDefExists</name>
      <anchor>a245a84</anchor>
      <init> 81</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintParamDefHasReference</name>
      <anchor>a245a85</anchor>
      <init> 82</init>
    </member>
    <member kind="enumvalue">
      <name>oacUnableToDestroyBuiltInType</name>
      <anchor>a245a86</anchor>
      <init> 83</init>
    </member>
    <member kind="enumvalue">
      <name>oacValueInvalidForConstraintParamDef</name>
      <anchor>a245a87</anchor>
      <init> 84</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConstraintParam</name>
      <anchor>a245a88</anchor>
      <init> 85</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintParamAlreadyOwned</name>
      <anchor>a245a89</anchor>
      <init> 86</init>
    </member>
    <member kind="enumvalue">
      <name>oacCantDestroyOwnedConstraintParam</name>
      <anchor>a245a90</anchor>
      <init> 87</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidObjForConstraintParam</name>
      <anchor>a245a91</anchor>
      <init> 88</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintParamNotInSameDB</name>
      <anchor>a245a92</anchor>
      <init> 89</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConstraintDef</name>
      <anchor>a245a93</anchor>
      <init> 90</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintDefExists</name>
      <anchor>a245a94</anchor>
      <init> 91</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintDefHasReference</name>
      <anchor>a245a95</anchor>
      <init> 92</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidValueForConstraintDef</name>
      <anchor>a245a96</anchor>
      <init> 93</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDBForConstraintDef</name>
      <anchor>a245a97</anchor>
      <init> 94</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidObjForConstraintDef</name>
      <anchor>a245a98</anchor>
      <init> 95</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConstraintType</name>
      <anchor>a245a99</anchor>
      <init> 96</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintNameExists</name>
      <anchor>a245a100</anchor>
      <init> 97</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDatabaseForLayerConstraint</name>
      <anchor>a245a101</anchor>
      <init> 98</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDatabaseForLayerPairConstraint</name>
      <anchor>a245a102</anchor>
      <init> 99</init>
    </member>
    <member kind="enumvalue">
      <name>oacValueAlreadyOwned</name>
      <anchor>a245a103</anchor>
      <init> 100</init>
    </member>
    <member kind="enumvalue">
      <name>oacCantDestroyOwnedValue</name>
      <anchor>a245a104</anchor>
      <init> 101</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidValueType</name>
      <anchor>a245a105</anchor>
      <init> 102</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidObjForValue</name>
      <anchor>a245a106</anchor>
      <init> 103</init>
    </member>
    <member kind="enumvalue">
      <name>oacIllDefinedTblSpecified</name>
      <anchor>a245a107</anchor>
      <init> 104</init>
    </member>
    <member kind="enumvalue">
      <name>oacValueNotInSameDatabase</name>
      <anchor>a245a108</anchor>
      <init> 105</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidValueForCopy</name>
      <anchor>a245a109</anchor>
      <init> 106</init>
    </member>
    <member kind="enumvalue">
      <name>oacEmptyArrayValue</name>
      <anchor>a245a110</anchor>
      <init> 107</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidValueArrayValue</name>
      <anchor>a245a111</anchor>
      <init> 108</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDefaultValueForTblValue</name>
      <anchor>a245a112</anchor>
      <init> 109</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConstraintGroup</name>
      <anchor>a245a113</anchor>
      <init> 110</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConstraintGroupMem</name>
      <anchor>a245a114</anchor>
      <init> 111</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidObjForConstraintGroup</name>
      <anchor>a245a115</anchor>
      <init> 112</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintGroupNameExists</name>
      <anchor>a245a116</anchor>
      <init> 113</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintGroupAlreadyHasObj</name>
      <anchor>a245a117</anchor>
      <init> 114</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintGroupMemberNotInValidDB</name>
      <anchor>a245a118</anchor>
      <init> 115</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConstraintGroupForMemberMove</name>
      <anchor>a245a119</anchor>
      <init> 116</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConstraintGroupHeader</name>
      <anchor>a245a120</anchor>
      <init> 117</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidObjForConstraintGroupHeader</name>
      <anchor>a245a121</anchor>
      <init> 118</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotDeleteObject</name>
      <anchor>a245a122</anchor>
      <init> 119</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDatabaseForObject</name>
      <anchor>a245a123</anchor>
      <init> 120</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidBusSyntax</name>
      <anchor>a245a124</anchor>
      <init> 121</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidBitValue</name>
      <anchor>a245a125</anchor>
      <init> 122</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidParenSyntax</name>
      <anchor>a245a126</anchor>
      <init> 123</init>
    </member>
    <member kind="enumvalue">
      <name>oacFirstCharInvalid</name>
      <anchor>a245a127</anchor>
      <init> 124</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidCharFollowingEscChar</name>
      <anchor>a245a128</anchor>
      <init> 125</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidNameKeywordConflict</name>
      <anchor>a245a129</anchor>
      <init> 126</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidNumberSyntax</name>
      <anchor>a245a130</anchor>
      <init> 127</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidCharFollowingHexChar</name>
      <anchor>a245a131</anchor>
      <init> 128</init>
    </member>
    <member kind="enumvalue">
      <name>oacNotYetSupported</name>
      <anchor>a245a132</anchor>
      <init> 129</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDatabaseForValue</name>
      <anchor>a245a133</anchor>
      <init> 130</init>
    </member>
    <member kind="enumvalue">
      <name>oacCorruptedDatabase</name>
      <anchor>a245a134</anchor>
      <init> 131</init>
    </member>
    <member kind="enumvalue">
      <name>oacInternalError</name>
      <anchor>a245a135</anchor>
      <init> 132</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotBeCalled</name>
      <anchor>a245a136</anchor>
      <init> 133</init>
    </member>
    <member kind="enumvalue">
      <name>oacSocketGeneralError</name>
      <anchor>a245a137</anchor>
      <init> 134</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotResetMutex</name>
      <anchor>a245a138</anchor>
      <init> 135</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotCreateMutex</name>
      <anchor>a245a139</anchor>
      <init> 136</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDatabase</name>
      <anchor>a245a140</anchor>
      <init> 137</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidMajorAPIRev</name>
      <anchor>a245a141</anchor>
      <init> 138</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidCategoryName</name>
      <anchor>a245a142</anchor>
      <init> 139</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDataModelModTypeName</name>
      <anchor>a245a143</anchor>
      <init> 140</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidFeature</name>
      <anchor>a245a144</anchor>
      <init> 141</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotDowngradeDatabase</name>
      <anchor>a245a145</anchor>
      <init> 142</init>
    </member>
    <member kind="enumvalue">
      <name>oacDataNotCompatibleOnOpen</name>
      <anchor>a245a146</anchor>
      <init> 143</init>
    </member>
    <member kind="enumvalue">
      <name>oacDataNotCompatibleOnOpenInAppendMode</name>
      <anchor>a245a147</anchor>
      <init> 144</init>
    </member>
    <member kind="enumvalue">
      <name>oacDataNotCompatibleOnOpenInEditableMode</name>
      <anchor>a245a148</anchor>
      <init> 145</init>
    </member>
    <member kind="enumvalue">
      <name>oacDataNotCompatibleOnSave</name>
      <anchor>a245a149</anchor>
      <init> 146</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDataModelRev</name>
      <anchor>a245a150</anchor>
      <init> 147</init>
    </member>
    <member kind="enumvalue">
      <name>oacInconsistentDataModelRev</name>
      <anchor>a245a151</anchor>
      <init> 148</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotOpenHugeDatabase</name>
      <anchor>a245a152</anchor>
      <init> 149</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidRangeTypeName</name>
      <anchor>a245a153</anchor>
      <init> 150</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidBoundsForRange</name>
      <anchor>a245a154</anchor>
      <init> 151</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidTypeForRange</name>
      <anchor>a245a155</anchor>
      <init> 152</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidBoundForRange</name>
      <anchor>a245a156</anchor>
      <init> 153</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidLayerArrayConstraintTypeName</name>
      <anchor>a245a157</anchor>
      <init> 154</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDistanceMeasureTypeName</name>
      <anchor>a245a158</anchor>
      <init> 155</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidWidthLengthTableTypeName</name>
      <anchor>a245a159</anchor>
      <init> 156</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotMoveImplicitConstraintGroupMem</name>
      <anchor>a245a160</anchor>
      <init> 157</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotDestroyImplicitConstraintGroupMem</name>
      <anchor>a245a161</anchor>
      <init> 158</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDatabaseForLayerArrayConstraint</name>
      <anchor>a245a162</anchor>
      <init> 159</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidAlignmentTypeName</name>
      <anchor>a245a163</anchor>
      <init> 160</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidInterpolateTypeForTable</name>
      <anchor>a245a164</anchor>
      <init> 161</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidExtrapolateTypeForTable</name>
      <anchor>a245a165</anchor>
      <init> 162</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidLayerArrayForLayerArrayConstraint</name>
      <anchor>a245a166</anchor>
      <init> 163</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotCreateValueInDesignDBWithNoBlocks</name>
      <anchor>a245a167</anchor>
      <init> 164</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotDestroyConstraintGroupContainingImplicitMem</name>
      <anchor>a245a168</anchor>
      <init> 165</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotUpgradeOverwrittenDatabase</name>
      <anchor>a245a169</anchor>
      <init> 166</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidSessionObject</name>
      <anchor>a245a170</anchor>
      <init> 167</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidObject</name>
      <anchor>a245a171</anchor>
      <init> 168</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotSaveDataModelRev</name>
      <anchor>a245a172</anchor>
      <init> 169</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotRepairCorruptedAppData</name>
      <anchor>a245a173</anchor>
      <init> 170</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotKillProcess</name>
      <anchor>a245a174</anchor>
      <init> 171</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotCreateProcess</name>
      <anchor>a245a175</anchor>
      <init> 172</init>
    </member>
    <member kind="enumvalue">
      <name>oacChildProcessError</name>
      <anchor>a245a176</anchor>
      <init> 173</init>
    </member>
    <member kind="enumvalue">
      <name>oacCreateFileMappingFailed</name>
      <anchor>a245a177</anchor>
      <init> 174</init>
    </member>
    <member kind="enumvalue">
      <name>oacResetFileMappingFailed</name>
      <anchor>a245a178</anchor>
      <init> 175</init>
    </member>
    <member kind="enumvalue">
      <name>oacFileMappingFailed</name>
      <anchor>a245a179</anchor>
      <init> 176</init>
    </member>
    <member kind="enumvalue">
      <name>oacMemMapCloseFailed</name>
      <anchor>a245a180</anchor>
      <init> 177</init>
    </member>
    <member kind="enumvalue">
      <name>oacMemMapWriteFailed</name>
      <anchor>a245a181</anchor>
      <init> 178</init>
    </member>
    <member kind="enumvalue">
      <name>oacFileTruncateFailed</name>
      <anchor>a245a182</anchor>
      <init> 179</init>
    </member>
    <member kind="enumvalue">
      <name>oacGetFullPathFailed</name>
      <anchor>a245a183</anchor>
      <init> 180</init>
    </member>
    <member kind="enumvalue">
      <name>oacFileOpenFailed</name>
      <anchor>a245a184</anchor>
      <init> 181</init>
    </member>
    <member kind="enumvalue">
      <name>oacFileCloseFailed</name>
      <anchor>a245a185</anchor>
      <init> 182</init>
    </member>
    <member kind="enumvalue">
      <name>oacFileReadFailed</name>
      <anchor>a245a186</anchor>
      <init> 183</init>
    </member>
    <member kind="enumvalue">
      <name>oacFileWriteFailed</name>
      <anchor>a245a187</anchor>
      <init> 184</init>
    </member>
    <member kind="enumvalue">
      <name>oacFileGetInfoFailed</name>
      <anchor>a245a188</anchor>
      <init> 185</init>
    </member>
    <member kind="enumvalue">
      <name>oacFileCopyFailed</name>
      <anchor>a245a189</anchor>
      <init> 186</init>
    </member>
    <member kind="enumvalue">
      <name>oacFileSetAttrFailed</name>
      <anchor>a245a190</anchor>
      <init> 187</init>
    </member>
    <member kind="enumvalue">
      <name>oacDirCreateFailed</name>
      <anchor>a245a191</anchor>
      <init> 188</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidBasePurposeNumber</name>
      <anchor>a245a192</anchor>
      <init> 189</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidPurposeArrayForLayerArrayConstraint</name>
      <anchor>a245a193</anchor>
      <init> 190</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidSpacingDirectionTypeName</name>
      <anchor>a245a194</anchor>
      <init> 191</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidGateOrientationTypeName</name>
      <anchor>a245a195</anchor>
      <init> 192</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidGroupDefTypeName</name>
      <anchor>a245a196</anchor>
      <init> 193</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidGroupDef</name>
      <anchor>a245a197</anchor>
      <init> 194</init>
    </member>
    <member kind="enumvalue">
      <name>oacObjectDefExists</name>
      <anchor>a245a198</anchor>
      <init> 195</init>
    </member>
    <member kind="enumvalue">
      <name>oacObjectDefHasReference</name>
      <anchor>a245a199</anchor>
      <init> 196</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidDBForObjectDef</name>
      <anchor>a245a200</anchor>
      <init> 197</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidObjForObjectDef</name>
      <anchor>a245a201</anchor>
      <init> 198</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConstraintGroupDefTypeName</name>
      <anchor>a245a202</anchor>
      <init> 199</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConstraintGroupDef</name>
      <anchor>a245a203</anchor>
      <init> 200</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidOperationOnUserDefinedConstraintGroupDef</name>
      <anchor>a245a204</anchor>
      <init> 201</init>
    </member>
    <member kind="enumvalue">
      <name>oacObjectHasConstraintGroupOfSameType</name>
      <anchor>a245a205</anchor>
      <init> 202</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidAbstractType</name>
      <anchor>a245a206</anchor>
      <init> 203</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConcreteType</name>
      <anchor>a245a207</anchor>
      <init> 204</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidShapeAngleTypeName</name>
      <anchor>a245a208</anchor>
      <init> 205</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConstraintGroupOperatorName</name>
      <anchor>a245a209</anchor>
      <init> 206</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidOperationOnUserDefinedConstraintGroupType</name>
      <anchor>a245a210</anchor>
      <init> 207</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConnectivityTypeName</name>
      <anchor>a245a211</anchor>
      <init> 208</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidSimpleConstraintType</name>
      <anchor>a245a212</anchor>
      <init> 209</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidLayerConstraintType</name>
      <anchor>a245a213</anchor>
      <init> 210</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidLayerPairConstraintType</name>
      <anchor>a245a214</anchor>
      <init> 211</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidLayerArrayConstraintType</name>
      <anchor>a245a215</anchor>
      <init> 212</init>
    </member>
    <member kind="enumvalue">
      <name>oacParamTypeDoesNotMatchWithGetFunction</name>
      <anchor>a245a216</anchor>
      <init> 213</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConstraintGroupDefUniqueAttribute</name>
      <anchor>a245a217</anchor>
      <init> 214</init>
    </member>
    <member kind="enumvalue">
      <name>oacUniqueConstraintGroupAlreadyExists</name>
      <anchor>a245a218</anchor>
      <init> 215</init>
    </member>
    <member kind="enumvalue">
      <name>oacDBTypeCannotBeOwnerAndContainerConstraintGroupDef</name>
      <anchor>a245a219</anchor>
      <init> 216</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidMangedTypeForFlatGroupDef</name>
      <anchor>a245a220</anchor>
      <init> 217</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidGroupTypeForGroupMem</name>
      <anchor>a245a221</anchor>
      <init> 218</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintGroupMustHaveOwner</name>
      <anchor>a245a222</anchor>
      <init> 219</init>
    </member>
    <member kind="enumvalue">
      <name>oacUnknownSizeOfUInt8RangeTbl</name>
      <anchor>a245a223</anchor>
      <init> 220</init>
    </member>
    <member kind="enumvalue">
      <name>oacMissingAppDefDefault</name>
      <anchor>a245a224</anchor>
      <init> 221</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidStringRef</name>
      <anchor>a245a225</anchor>
      <init> 222</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidNameRef</name>
      <anchor>a245a226</anchor>
      <init> 223</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidReference</name>
      <anchor>a245a227</anchor>
      <init> 224</init>
    </member>
    <member kind="enumvalue">
      <name>oacCannotDestroyDefUndo</name>
      <anchor>a245a228</anchor>
      <init> 225</init>
    </member>
    <member kind="enumvalue">
      <name>oacChecksumMismatch</name>
      <anchor>a245a229</anchor>
      <init> 226</init>
    </member>
    <member kind="enumvalue">
      <name>oacStringOverflow</name>
      <anchor>a245a230</anchor>
      <init> 227</init>
    </member>
    <member kind="enumvalue">
      <name>oacOpenAccessNotInitialized</name>
      <anchor>a245a231</anchor>
      <init> 228</init>
    </member>
    <member kind="enumvalue">
      <name>oacFailedToLoadPlugIn</name>
      <anchor>a245a232</anchor>
      <init> 229</init>
    </member>
    <member kind="enumvalue">
      <name>oacLockSystemAlreadyInitialized</name>
      <anchor>a245a233</anchor>
      <init> 230</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidResourceAccess</name>
      <anchor>a245a234</anchor>
      <init> 231</init>
    </member>
    <member kind="enumvalue">
      <name>oacPropRecursiveOwnership</name>
      <anchor>a245a235</anchor>
      <init> 232</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidRepeat</name>
      <anchor>a245a236</anchor>
      <init> 233</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidViaExtensionTypeName</name>
      <anchor>a245a237</anchor>
      <init> 234</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidConnectLayerTypeName</name>
      <anchor>a245a238</anchor>
      <init> 235</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidSpacingTypeName</name>
      <anchor>a245a239</anchor>
      <init> 236</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidSpacingMeasureTypeName</name>
      <anchor>a245a240</anchor>
      <init> 237</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidEnclosedCutTypeName</name>
      <anchor>a245a241</anchor>
      <init> 238</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidNeighborLayerMetalTypeName</name>
      <anchor>a245a242</anchor>
      <init> 239</init>
    </member>
    <member kind="enumvalue">
      <name>oacInvalidThreadUseModelName</name>
      <anchor>a245a243</anchor>
      <init> 240</init>
    </member>
    <member kind="enumvalue">
      <name>oacThreadMutexError</name>
      <anchor>a245a244</anchor>
      <init> 241</init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaBaseObserver.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaBaseObserver_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaBaseObserver.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaBaseObserver_8h</filename>
    <class kind="class">oaObserver&lt;oaAppDef, oacObserverVersion1&gt;</class>
    <class kind="class">oaObserver&lt;oaConstraintDef, oacObserverVersion1&gt;</class>
    <class kind="class">oaObserver&lt;oaConstraintGroupDef, oacObserverVersion1&gt;</class>
    <class kind="class">oaObserver&lt;oaConstraintParamDef, oacObserverVersion1&gt;</class>
    <class kind="class">oaObserver&lt;oaGroupDef, oacObserverVersion1&gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaBaseObserver_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaConstraintParamDef</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaBaseObserver.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaBaseObserver_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaBaseObserver_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaBasePvt.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaBasePvt_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaBasePvt_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="function">
      <type>BEGIN_OA_NAMESPACE oaInt4</type>
      <name>oaSnapToGrid</name>
      <anchor>a1</anchor>
      <arglist>(oaInt4 value, oaUInt4 grid)</arglist>
    </member>
    <member kind="function">
      <type>oaPoint</type>
      <name>oaSnapToGrid</name>
      <anchor>a2</anchor>
      <arglist>(const oaPoint pt, oaUInt4 grid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaBaseTraits.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaBaseTraits_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaBaseTraits.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaBaseTraits_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaBaseTraits_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaBaseTypes.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaBaseTypes_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaBaseTypes.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaBaseTypes_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaBaseTypes_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacProdStreamAPIRevNumber</name>
      <anchor>a1</anchor>
      <init>201</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacProdStreamRevNumber</name>
      <anchor>a2</anchor>
      <init>oacProdStreamAPIRevNumber</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacStreamRevNumberOffset</name>
      <anchor>a3</anchor>
      <init>1000</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacBranchStreamNumberOffset</name>
      <anchor>a4</anchor>
      <init>100</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacAPIMajorRevNumber</name>
      <anchor>a5</anchor>
      <init>4</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacAPIMinorRevNumber</name>
      <anchor>a6</anchor>
      <init>oacProdStreamRevNumber</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacDataModelRevNumber</name>
      <anchor>a7</anchor>
      <init>4</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacNullIndex</name>
      <anchor>a8</anchor>
      <init>0xffffffffu</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacDeletedIndex</name>
      <anchor>a9</anchor>
      <init>0xfffffffeu</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacNegativeOne</name>
      <anchor>a10</anchor>
      <init>oaUInt4(-1)</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacNullLongIndex</name>
      <anchor>a11</anchor>
      <init>0xffffffffffffffffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacDeletedLongIndex</name>
      <anchor>a12</anchor>
      <init>0xfffffffffffffffeULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacMaxPathLen</name>
      <anchor>a13</anchor>
      <init>PATH_MAX</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacPathSeparator</name>
      <anchor>a14</anchor>
      <init>&quot;/&quot;</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacPathSeparatorChar</name>
      <anchor>a15</anchor>
      <init>&apos;/&apos;</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>M_PI</name>
      <anchor>a16</anchor>
      <init>3.14159265358979323846264338</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>M_PI_2</name>
      <anchor>a17</anchor>
      <init>1.57079632679489661923132169</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>M_PI_4</name>
      <anchor>a18</anchor>
      <init>0.78539816339744830961566085</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>M_PI_8</name>
      <anchor>a19</anchor>
      <init>0.39269908169872415480783042</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacObserverRevision</name>
      <anchor>a20</anchor>
      <init>1</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OA_BASE_DLL_API</name>
      <anchor>a21</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OA_BASE_DLL_PVT</name>
      <anchor>a22</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OA_DLL_EXPORT</name>
      <anchor>a23</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavBaseNumDataTypes</name>
      <anchor>a24</anchor>
      <init>22</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavBaseAppObjectDataTypeName</name>
      <anchor>a25</anchor>
      <init>&quot;appObject&quot;</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumThreadUseModelTypes</name>
      <anchor>a26</anchor>
      <init>3</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oaCast</name>
      <anchor>a27</anchor>
      <init>static_cast</init>
    </member>
    <member kind="typedef">
      <type>oaUInt4</type>
      <name>oaDist</name>
      <anchor>a29</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>oaInt4</type>
      <name>oaOffset</name>
      <anchor>a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>oaUInt4</type>
      <name>oaSocketD</name>
      <anchor>a31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>oaBaseDataTypeEnum</name>
      <anchor>a67</anchor>
      <init>24</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseDatabaseDataType</name>
      <anchor>a67a32</anchor>
      <init> UINT_MAX</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseAppObjectDataType</name>
      <anchor>a67a33</anchor>
      <init> UINT_MAX - 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacBasePropDataType</name>
      <anchor>a67a34</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseGroupDataType</name>
      <anchor>a67a35</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseGroupMemDataType</name>
      <anchor>a67a36</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseAvatarDataType</name>
      <anchor>a67a37</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseValueDataType</name>
      <anchor>a67a38</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseConstraintParamDefDataType</name>
      <anchor>a67a39</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseConstraintParamDataType</name>
      <anchor>a67a40</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseConstraintDefDataType</name>
      <anchor>a67a41</anchor>
      <init> 7</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseConstraintDataType</name>
      <anchor>a67a42</anchor>
      <init> 8</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseConstraintGroupDataType</name>
      <anchor>a67a43</anchor>
      <init> 9</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseConstraintGroupMemDataType</name>
      <anchor>a67a44</anchor>
      <init> 10</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseConstraintGroupHeaderDataType</name>
      <anchor>a67a45</anchor>
      <init> 11</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseFeatureDataType</name>
      <anchor>a67a46</anchor>
      <init> 12</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseFeaturePolicyDataType</name>
      <anchor>a67a47</anchor>
      <init> 13</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseDerivedLayerParamDefDataType</name>
      <anchor>a67a48</anchor>
      <init> 14</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseDerivedLayerDefDataType</name>
      <anchor>a67a49</anchor>
      <init> 15</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseGroupDefDataType</name>
      <anchor>a67a50</anchor>
      <init> 16</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseConstraintGroupDefDataType</name>
      <anchor>a67a51</anchor>
      <init> 17</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseViaVariantDataType</name>
      <anchor>a67a52</anchor>
      <init> 18</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseParamDataType</name>
      <anchor>a67a53</anchor>
      <init> 19</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseViaVariantHeaderDataType</name>
      <anchor>a67a54</anchor>
      <init> 20</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseViaParamDataType</name>
      <anchor>a67a55</anchor>
      <init> 21</init>
    </member>
    <member kind="enumeration">
      <name>oaUndoModelEnum</name>
      <anchor>a68</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacUndoModelNotSpecified</name>
      <anchor>a68a56</anchor>
      <init> UINT_MAX</init>
    </member>
    <member kind="enumvalue">
      <name>oacUndoModelPostCheckpoint</name>
      <anchor>a68a57</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacUndoModelPreCheckpoint</name>
      <anchor>a68a58</anchor>
      <init> 1</init>
    </member>
    <member kind="enumeration">
      <name>oaThreadUseModelEnum</name>
      <anchor>a69</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacSingleThreadUseModel</name>
      <anchor>a69a59</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacMultipleReadersThreadUseModel</name>
      <anchor>a69a60</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacMultipleWritersThreadUseModel</name>
      <anchor>a69a61</anchor>
      <init> 2</init>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API void</type>
      <name>oaBaseInit</name>
      <anchor>oaBaseInit</anchor>
      <arglist>(oaUInt4 apiMajorRev=oacAPIMajorRevNumber, oaUInt4 apiMinorRev=oacAPIMinorRevNumber)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API void</type>
      <name>oaBaseInit</name>
      <anchor>oaBaseInit1</anchor>
      <arglist>(oaUInt4 apiMajorRev, oaUInt4 apiMinorRev, oaUInt4 dataModelRev)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API void</type>
      <name>oaSleep</name>
      <anchor>a64</anchor>
      <arglist>(oaUInt4 sec)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API oaBoolean</type>
      <name>oaIsProcessActive</name>
      <anchor>a65</anchor>
      <arglist>(oaUInt4 pid)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API void</type>
      <name>oaStartDaemon</name>
      <anchor>a66</anchor>
      <arglist>(const char *name, char *const *argvIn=0, oaUInt4 numArgs=0)</arglist>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE typedef oaInt4</type>
      <name>oaCoord</name>
      <anchor>a28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaBaseTypes.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaBaseTypes_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaBaseTypes_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oaKitInit</name>
      <anchor>a1</anchor>
      <init>{ \
    void    *oalib = dlopen(&quot;liboaBase.so&quot;, RTLD_LAZY); \
    if (!oalib) { \
	const char *buff = &quot;ERROR: Failed to load OpenAccess library: liboaBase.so.\n&quot;; \
	throw *buff; \
    } \
    void    *handle = dlsym(oalib, &quot;oaBaseInitAppBuild&quot;); \
    if (!handle) { \
            class _oaMacroAppError : public ::OpenAccess_4::oaException { \
            public: \
                _oaMacroAppError(::OpenAccess_4::oaUInt4 msgIdIn, \
                                 const char* msgIn) \
                : ::OpenAccess_4::oaException(msgIdIn) \
                { \
                    msg = msgIn; \
                } \
                _oaMacroAppError(const _oaMacroAppError&amp; other) \
                : ::OpenAccess_4::oaException(other) \
                { \
                } \
                _oaMacroAppError &amp; operator=(const _oaMacroAppError&amp; other) \
                { \
                    if (this != &amp;other) { \
                        oaException::operator=(other); \
                        msg = other.msg; \
                    } \
                    return *this; \
                } \
                ~_oaMacroAppError() \
                { \
                } \
            }; \
        const char  sccs_id[] = OA_SCCS_ID; \
        char	msg[1024]; \
          \
          \
        msg[0] = sccs_id[0]; \
          \
        sprintf(msg, &quot;The application is compiled with an OpenAccess kit of version %s, which is newer than the OpenAccess kit being used.&quot;, OA_RELEASE_NAME); \
	throw _oaMacroAppError(::OpenAccess_4::oacInvalidAPIRev, msg); \
    } \
    typedef void (*Func)(const char *); \
    ((Func) handle)( (const char *) OA_RELEASE_NAME );\
}</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>defRelTol</name>
      <anchor>a2</anchor>
      <init>0.0001f</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>roundOffAngle</name>
      <anchor>a3</anchor>
      <init>0.0001f</init>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaInitAppBuild</name>
      <anchor>a4</anchor>
      <arglist>(const char *buildName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaBaseInitAppBuild</name>
      <anchor>a5</anchor>
      <arglist>(const char *buildName)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>oaIsFloatEqual</name>
      <anchor>a6</anchor>
      <arglist>(oaDouble val1, oaDouble val2, oaDouble relTol=defRelTol)</arglist>
    </member>
    <member kind="function">
      <type>oaInt4</type>
      <name>oaRound</name>
      <anchor>a7</anchor>
      <arglist>(oaDouble v)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt8</type>
      <name>oaRoundToUInt8</name>
      <anchor>a8</anchor>
      <arglist>(oaDouble v)</arglist>
    </member>
    <member kind="function">
      <type>obj</type>
      <name>oaMin</name>
      <anchor>a9</anchor>
      <arglist>(obj v1, obj v2)</arglist>
    </member>
    <member kind="function">
      <type>obj</type>
      <name>oaMax</name>
      <anchor>a10</anchor>
      <arglist>(obj v1, obj v2)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>oaLog2</name>
      <anchor>a11</anchor>
      <arglist>(oaUInt4 num)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>oaRoundUpToPow2</name>
      <anchor>a12</anchor>
      <arglist>(oaUInt4 val)</arglist>
    </member>
    <member kind="function">
      <type>obj</type>
      <name>oaRoundUpToGranularity</name>
      <anchor>a13</anchor>
      <arglist>(obj val, obj gran)</arglist>
    </member>
    <member kind="function">
      <type>obj</type>
      <name>oaRoundDownToGranularity</name>
      <anchor>a14</anchor>
      <arglist>(obj val, obj gran)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API void</type>
      <name>oaSleep</name>
      <anchor>a15</anchor>
      <arglist>(oaUInt4 sec)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>oaStrIsEqual</name>
      <anchor>a16</anchor>
      <arglist>(const char *str1, const char *str2, oaBoolean ignoreCase)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>oaStrLen</name>
      <anchor>a17</anchor>
      <arglist>(const char *stringIn)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>oaIsMemEq</name>
      <anchor>a18</anchor>
      <arglist>(const T *a, const T *b, oaUInt4 numElements)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isNon90Angle</name>
      <anchor>a19</anchor>
      <arglist>(oaDouble angle)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaBooleanProp.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaBooleanProp_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaBooleanProp.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaBooleanProp_8h</filename>
    <class kind="class">oaBooleanProp</class>
    <class kind="class">oaTraits&lt; oaBooleanProp &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaBooleanProp_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaBox.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaBox_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaBox.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaBox_8h</filename>
    <class kind="class">oaBox</class>
    <member kind="define">
      <type>#define</type>
      <name>oaBox_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaTransform</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaBox.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaBox_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaBox_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaBuildInfo.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaBuildInfo_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaBuildInfo.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaBuildInfo_8h</filename>
    <class kind="class">oaBuildInfo</class>
    <class kind="class">oaBuildInfoArray</class>
    <member kind="define">
      <type>#define</type>
      <name>oaBuildInfo_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaBuildInfo</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaBuildInfo.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaBuildInfo_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaBuildInfo_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaByteArray.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaByteArray_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaByteArray.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaByteArray_8h</filename>
    <class kind="class">oaByteArray</class>
    <member kind="define">
      <type>#define</type>
      <name>oaByteArray_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaByteArray.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaByteArray_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaByteArray_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaCdbaNS.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaCdbaNS_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaCdbaNS.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaCdbaNS_8h</filename>
    <class kind="class">oaCdbaNS</class>
    <member kind="define">
      <type>#define</type>
      <name>oaCdbaNS_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaCdbaNS.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaCdbaNS_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaCdbaNS_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaCollection.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaCollection_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaCollection.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaCollection_8h</filename>
    <class kind="class">oaBaseCollection</class>
    <class kind="class">oaBaseIter</class>
    <class kind="class">oaCollection</class>
    <class kind="class">oaEnumCollection</class>
    <class kind="class">oaEnumIterState</class>
    <class kind="class">oaEnumPropIter</class>
    <class kind="class">oaIter</class>
    <member kind="define">
      <type>#define</type>
      <name>oaCollection_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="enumeration">
      <name>oaCollTypeEnum</name>
      <anchor>a7</anchor>
      <init>5</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseCollType</name>
      <anchor>a7a2</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacDomainBaseCollType</name>
      <anchor>a7a3</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacAllCollType</name>
      <anchor>a7a4</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacGenericCollType</name>
      <anchor>a7a5</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacEmptyCollType</name>
      <anchor>a7a6</anchor>
      <init> 7</init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaDatabase</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaCollection.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaCollection_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaCollection_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaComplex.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaComplex_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaComplex.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaComplex_8h</filename>
    <class kind="class">oaComplex</class>
    <class kind="class">oaComplexArray</class>
    <member kind="define">
      <type>#define</type>
      <name>oaComplex_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="function">
      <type>oaComplex&lt; obj &gt;</type>
      <name>operator+</name>
      <anchor>a2</anchor>
      <arglist>(const oaComplex&lt; obj &gt; &amp;c1, const oaComplex&lt; obj &gt; &amp;c2)</arglist>
    </member>
    <member kind="function">
      <type>oaComplex&lt; obj &gt;</type>
      <name>operator-</name>
      <anchor>a3</anchor>
      <arglist>(const oaComplex&lt; obj &gt; &amp;c1, const oaComplex&lt; obj &gt; &amp;c2)</arglist>
    </member>
    <member kind="function">
      <type>oaComplex&lt; obj &gt;</type>
      <name>operator *</name>
      <anchor>a4</anchor>
      <arglist>(const oaComplex&lt; obj &gt; &amp;c1, const oaComplex&lt; obj &gt; &amp;c2)</arglist>
    </member>
    <member kind="function">
      <type>oaComplex&lt; obj &gt;</type>
      <name>operator/</name>
      <anchor>a5</anchor>
      <arglist>(const oaComplex&lt; obj &gt; &amp;c1, const oaComplex&lt; obj &gt; &amp;c2)</arglist>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaChecker</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaComplex.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaComplex_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaComplex_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="function">
      <type>oaComplex&lt; obj &gt;</type>
      <name>operator+</name>
      <anchor>a1</anchor>
      <arglist>(const oaComplex&lt; obj &gt; &amp;c1, const oaComplex&lt; obj &gt; &amp;c2)</arglist>
    </member>
    <member kind="function">
      <type>oaComplex&lt; obj &gt;</type>
      <name>operator-</name>
      <anchor>a2</anchor>
      <arglist>(const oaComplex&lt; obj &gt; &amp;c1, const oaComplex&lt; obj &gt; &amp;c2)</arglist>
    </member>
    <member kind="function">
      <type>oaComplex&lt; obj &gt;</type>
      <name>operator *</name>
      <anchor>a3</anchor>
      <arglist>(const oaComplex&lt; obj &gt; &amp;c1, const oaComplex&lt; obj &gt; &amp;c2)</arglist>
    </member>
    <member kind="function">
      <type>oaComplex&lt; obj &gt;</type>
      <name>operator/</name>
      <anchor>a4</anchor>
      <arglist>(const oaComplex&lt; obj &gt; &amp;c1, const oaComplex&lt; obj &gt; &amp;c2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaConstraint.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaConstraint_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaConstraint.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaConstraint_8h</filename>
    <class kind="class">oaConstraint</class>
    <class kind="class">oaTraits&lt; oaConstraint &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaConstraint_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaConstraintDef</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaConstraintDef.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaConstraintDef_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaConstraintDef.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaConstraintDef_8h</filename>
    <class kind="class">oaConstraintDef</class>
    <class kind="class">oaLayerArrayConstraintDef</class>
    <class kind="class">oaLayerArrayConstraintType</class>
    <class kind="class">oaLayerConstraintDef</class>
    <class kind="class">oaLayerConstraintType</class>
    <class kind="class">oaLayerPairConstraintDef</class>
    <class kind="class">oaLayerPairConstraintType</class>
    <class kind="class">oaSimpleConstraintDef</class>
    <class kind="class">oaSimpleConstraintType</class>
    <class kind="class">oaTraits&lt; oaConstraintDef &gt;</class>
    <class kind="class">oaTraits&lt; oaLayerArrayConstraintDef &gt;</class>
    <class kind="class">oaTraits&lt; oaLayerConstraintDef &gt;</class>
    <class kind="class">oaTraits&lt; oaLayerPairConstraintDef &gt;</class>
    <class kind="class">oaTraits&lt; oaSimpleConstraintDef &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaConstraintDef_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumSimpleConstraintTypes</name>
      <anchor>a1</anchor>
      <init>21</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumLayerConstraintTypes</name>
      <anchor>a2</anchor>
      <init>83</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumLayerPairConstraintTypes</name>
      <anchor>a3</anchor>
      <init>23</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumLayerArrayConstraintTypes</name>
      <anchor>a4</anchor>
      <init>8</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumDM4LayerArrayConstraintTypes</name>
      <anchor>a5</anchor>
      <init>1</init>
    </member>
    <member kind="enumeration">
      <name>oaSimpleConstraintTypeEnum</name>
      <anchor>a141</anchor>
      <init>21</init>
    </member>
    <member kind="enumvalue">
      <name>oacValidRoutingLayers</name>
      <anchor>a141a6</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacValidRoutingVias</name>
      <anchor>a141a7</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacCumMetalAntenna</name>
      <anchor>a141a8</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacCumViaAntenna</name>
      <anchor>a141a9</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaStackLimit</name>
      <anchor>a141a10</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacHorizontalPlacementGridPitch</name>
      <anchor>a141a11</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacHorizontalPlacementGridOffset</name>
      <anchor>a141a12</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacVerticalPlacementGridPitch</name>
      <anchor>a141a13</anchor>
      <init> 7</init>
    </member>
    <member kind="enumvalue">
      <name>oacVerticalPlacementGridOffset</name>
      <anchor>a141a14</anchor>
      <init> 8</init>
    </member>
    <member kind="enumvalue">
      <name>oacDefaultHorizontalRouteGridPitch</name>
      <anchor>a141a15</anchor>
      <init> 9</init>
    </member>
    <member kind="enumvalue">
      <name>oacDefaultVerticalRouteGridPitch</name>
      <anchor>a141a16</anchor>
      <init> 10</init>
    </member>
    <member kind="enumvalue">
      <name>oacDefault135RouteGridPitch</name>
      <anchor>a141a17</anchor>
      <init> 11</init>
    </member>
    <member kind="enumvalue">
      <name>oacDefault45RouteGridPitch</name>
      <anchor>a141a18</anchor>
      <init> 12</init>
    </member>
    <member kind="enumvalue">
      <name>oacDefaultHorizontalRouteGridOffset</name>
      <anchor>a141a19</anchor>
      <init> 13</init>
    </member>
    <member kind="enumvalue">
      <name>oacDefaultVerticalRouteGridOffset</name>
      <anchor>a141a20</anchor>
      <init> 14</init>
    </member>
    <member kind="enumvalue">
      <name>oacDefault135RouteGridOffset</name>
      <anchor>a141a21</anchor>
      <init> 15</init>
    </member>
    <member kind="enumvalue">
      <name>oacDefault45RouteGridOffset</name>
      <anchor>a141a22</anchor>
      <init> 16</init>
    </member>
    <member kind="enumvalue">
      <name>oacTaperHalo</name>
      <anchor>a141a23</anchor>
      <init> 17</init>
    </member>
    <member kind="enumvalue">
      <name>oacShapeAngle</name>
      <anchor>a141a24</anchor>
      <init> 18</init>
    </member>
    <member kind="enumvalue">
      <name>oacUseNonOrthogonalRoutingRules</name>
      <anchor>a141a25</anchor>
      <init> 19</init>
    </member>
    <member kind="enumvalue">
      <name>oacMaxFloatingArea</name>
      <anchor>a141a26</anchor>
      <init> 20</init>
    </member>
    <member kind="enumeration">
      <name>oaLayerConstraintTypeEnum</name>
      <anchor>a142</anchor>
      <init>83</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinArea</name>
      <anchor>a142a27</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinEnclosedArea</name>
      <anchor>a142a28</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinDensity</name>
      <anchor>a142a29</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacMaxDensity</name>
      <anchor>a142a30</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinEdgeLength</name>
      <anchor>a142a31</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinConcaveEdgeLength</name>
      <anchor>a142a32</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinConvexEdgeLength</name>
      <anchor>a142a33</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinDiagonalEdgeLength</name>
      <anchor>a142a34</anchor>
      <init> 7</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinSpacing</name>
      <anchor>a142a35</anchor>
      <init> 8</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinDiagonalSpacing</name>
      <anchor>a142a36</anchor>
      <init> 9</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinCenterToCenterSpacing</name>
      <anchor>a142a37</anchor>
      <init> 10</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinDiffPotentialSpacing</name>
      <anchor>a142a38</anchor>
      <init> 11</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinEnclosedSpacing</name>
      <anchor>a142a39</anchor>
      <init> 12</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinFillPatternSpacing</name>
      <anchor>a142a40</anchor>
      <init> 13</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinProximitySpacing</name>
      <anchor>a142a41</anchor>
      <init> 14</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinProtrudedProximitySpacing</name>
      <anchor>a142a42</anchor>
      <init> 15</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinSameNetSpacing</name>
      <anchor>a142a43</anchor>
      <init> 16</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinAdjacentViaSpacing</name>
      <anchor>a142a44</anchor>
      <init> 17</init>
    </member>
    <member kind="enumvalue">
      <name>oacMergeSpaceAllowed</name>
      <anchor>a142a45</anchor>
      <init> 18</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinWidth</name>
      <anchor>a142a46</anchor>
      <init> 19</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinDiagonalWidth</name>
      <anchor>a142a47</anchor>
      <init> 20</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinProtrusionWidth</name>
      <anchor>a142a48</anchor>
      <init> 21</init>
    </member>
    <member kind="enumvalue">
      <name>oacMaxWidth</name>
      <anchor>a142a49</anchor>
      <init> 22</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinSize</name>
      <anchor>a142a50</anchor>
      <init> 23</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinNumCut</name>
      <anchor>a142a51</anchor>
      <init> 24</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinProtrusionNumCut</name>
      <anchor>a142a52</anchor>
      <init> 25</init>
    </member>
    <member kind="enumvalue">
      <name>oacHorizontalRouteGridPitch</name>
      <anchor>a142a53</anchor>
      <init> 26</init>
    </member>
    <member kind="enumvalue">
      <name>oacHorizontalRouteGridOffset</name>
      <anchor>a142a54</anchor>
      <init> 27</init>
    </member>
    <member kind="enumvalue">
      <name>oacVerticalRouteGridPitch</name>
      <anchor>a142a55</anchor>
      <init> 28</init>
    </member>
    <member kind="enumvalue">
      <name>oacVerticalRouteGridOffset</name>
      <anchor>a142a56</anchor>
      <init> 29</init>
    </member>
    <member kind="enumvalue">
      <name>oac135RouteGridPitch</name>
      <anchor>a142a57</anchor>
      <init> 30</init>
    </member>
    <member kind="enumvalue">
      <name>oac135RouteGridOffset</name>
      <anchor>a142a58</anchor>
      <init> 31</init>
    </member>
    <member kind="enumvalue">
      <name>oac45RouteGridPitch</name>
      <anchor>a142a59</anchor>
      <init> 32</init>
    </member>
    <member kind="enumvalue">
      <name>oac45RouteGridOffset</name>
      <anchor>a142a60</anchor>
      <init> 33</init>
    </member>
    <member kind="enumvalue">
      <name>oacErrorLayer</name>
      <anchor>a142a61</anchor>
      <init> 34</init>
    </member>
    <member kind="enumvalue">
      <name>oacAntenna</name>
      <anchor>a142a62</anchor>
      <init> 35</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinLength</name>
      <anchor>a142a63</anchor>
      <init> 36</init>
    </member>
    <member kind="enumvalue">
      <name>oacMaxLength</name>
      <anchor>a142a64</anchor>
      <init> 37</init>
    </member>
    <member kind="enumvalue">
      <name>oacDiagonalShapesAllowed</name>
      <anchor>a142a65</anchor>
      <init> 38</init>
    </member>
    <member kind="enumvalue">
      <name>oacMaxTapSpacing</name>
      <anchor>a142a66</anchor>
      <init> 39</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinBoundaryExtension</name>
      <anchor>a142a67</anchor>
      <init> 40</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinBoundaryInteriorHalo</name>
      <anchor>a142a68</anchor>
      <init> 41</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinWireExtension</name>
      <anchor>a142a69</anchor>
      <init> 42</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinParallelViaSpacing</name>
      <anchor>a142a70</anchor>
      <init> 43</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinEndOfLineSpacing</name>
      <anchor>a142a71</anchor>
      <init> 44</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinLargeViaArraySpacing</name>
      <anchor>a142a72</anchor>
      <init> 45</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinLargeViaArrayWidth</name>
      <anchor>a142a73</anchor>
      <init> 46</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinLargeViaArrayCutSpacing</name>
      <anchor>a142a74</anchor>
      <init> 47</init>
    </member>
    <member kind="enumvalue">
      <name>oacRectangularLargeViaArraysAllowed</name>
      <anchor>a142a75</anchor>
      <init> 48</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinEdgeMaxCount</name>
      <anchor>a142a76</anchor>
      <init> 49</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinEdgeAdjacentDistance</name>
      <anchor>a142a77</anchor>
      <init> 50</init>
    </member>
    <member kind="enumvalue">
      <name>oacMaxDiagonalEdgeLength</name>
      <anchor>a142a78</anchor>
      <init> 51</init>
    </member>
    <member kind="enumvalue">
      <name>oacMaxRoutingDistance</name>
      <anchor>a142a79</anchor>
      <init> 52</init>
    </member>
    <member kind="enumvalue">
      <name>oacKeepAlignedShapeAndBoundary</name>
      <anchor>a142a80</anchor>
      <init> 53</init>
    </member>
    <member kind="enumvalue">
      <name>oacPreferredRoutingDirection</name>
      <anchor>a142a81</anchor>
      <init> 54</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinEdgeAdjacentLength</name>
      <anchor>a142a82</anchor>
      <init> 55</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinRectArea</name>
      <anchor>a142a83</anchor>
      <init> 56</init>
    </member>
    <member kind="enumvalue">
      <name>oacGateOrientation</name>
      <anchor>a142a84</anchor>
      <init> 57</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinOrthogonalViaSpacing</name>
      <anchor>a142a85</anchor>
      <init> 58</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinNotchSpacing</name>
      <anchor>a142a86</anchor>
      <init> 59</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinEndOfNotchSpacing</name>
      <anchor>a142a87</anchor>
      <init> 60</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerShapeAngle</name>
      <anchor>a142a88</anchor>
      <init> 61</init>
    </member>
    <member kind="enumvalue">
      <name>oacAllowedSpacingRange</name>
      <anchor>a142a89</anchor>
      <init> 62</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinViaSpacing</name>
      <anchor>a142a90</anchor>
      <init> 63</init>
    </member>
    <member kind="enumvalue">
      <name>oacCutClass</name>
      <anchor>a142a91</anchor>
      <init> 64</init>
    </member>
    <member kind="enumvalue">
      <name>oacGateClearance</name>
      <anchor>a142a92</anchor>
      <init> 65</init>
    </member>
    <member kind="enumvalue">
      <name>oacMaxDiffDensity</name>
      <anchor>a142a93</anchor>
      <init> 66</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinAreaEdgeLength</name>
      <anchor>a142a94</anchor>
      <init> 67</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinCornerToCornerDistance</name>
      <anchor>a142a95</anchor>
      <init> 68</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinCutClassSpacing</name>
      <anchor>a142a96</anchor>
      <init> 69</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinEndOfLinePerpSpacing</name>
      <anchor>a142a97</anchor>
      <init> 70</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinEndOfLineExtensionSpacing</name>
      <anchor>a142a98</anchor>
      <init> 71</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinFillToFillSpacing</name>
      <anchor>a142a99</anchor>
      <init> 72</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinNeighborViaSpacing</name>
      <anchor>a142a100</anchor>
      <init> 73</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinOppositeSpanSpacing</name>
      <anchor>a142a101</anchor>
      <init> 74</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinParallelSpanSpacing</name>
      <anchor>a142a102</anchor>
      <init> 75</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinParallelWithinViaSpacing</name>
      <anchor>a142a103</anchor>
      <init> 76</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinPerimeter</name>
      <anchor>a142a104</anchor>
      <init> 77</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinSameMetalSharedEdgeViaSpacing</name>
      <anchor>a142a105</anchor>
      <init> 78</init>
    </member>
    <member kind="enumvalue">
      <name>oacAllowedWidthRange</name>
      <anchor>a142a106</anchor>
      <init> 79</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinBoundaryExteriorHalo</name>
      <anchor>a142a107</anchor>
      <init> 80</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinVoltageSpacing</name>
      <anchor>a142a108</anchor>
      <init> 81</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinProtrusionSpacing</name>
      <anchor>a142a109</anchor>
      <init> 82</init>
    </member>
    <member kind="enumeration">
      <name>oaLayerPairConstraintTypeEnum</name>
      <anchor>a143</anchor>
      <init>23</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinClearance</name>
      <anchor>a143a110</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacMaxClearance</name>
      <anchor>a143a111</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinSameNetClearance</name>
      <anchor>a143a112</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinExtension</name>
      <anchor>a143a113</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacMaxExtension</name>
      <anchor>a143a114</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinDualExtension</name>
      <anchor>a143a115</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinOverlap</name>
      <anchor>a143a116</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaStackingAllowed</name>
      <anchor>a143a117</anchor>
      <init> 7</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinRedundantViaSetback</name>
      <anchor>a143a118</anchor>
      <init> 8</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinConcaveCornerOverlap</name>
      <anchor>a143a119</anchor>
      <init> 9</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinConcaveCornerExtension</name>
      <anchor>a143a120</anchor>
      <init> 10</init>
    </member>
    <member kind="enumvalue">
      <name>oacKeepAlignedShapes</name>
      <anchor>a143a121</anchor>
      <init> 11</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinEndOfLineExtension</name>
      <anchor>a143a122</anchor>
      <init> 12</init>
    </member>
    <member kind="enumvalue">
      <name>oacAllowedClearanceRange</name>
      <anchor>a143a123</anchor>
      <init> 13</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinViaClearance</name>
      <anchor>a143a124</anchor>
      <init> 14</init>
    </member>
    <member kind="enumvalue">
      <name>oacIllegalHGatePattern</name>
      <anchor>a143a125</anchor>
      <init> 15</init>
    </member>
    <member kind="enumvalue">
      <name>oacMaxTouchingDirectionLength</name>
      <anchor>a143a126</anchor>
      <init> 16</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinCutClassClearance</name>
      <anchor>a143a127</anchor>
      <init> 17</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinExtensionEdge</name>
      <anchor>a143a128</anchor>
      <init> 18</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinGateExtension</name>
      <anchor>a143a129</anchor>
      <init> 19</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinOuterVertexSpacing</name>
      <anchor>a143a130</anchor>
      <init> 20</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinViaExtension</name>
      <anchor>a143a131</anchor>
      <init> 21</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinVoltageClearance</name>
      <anchor>a143a132</anchor>
      <init> 22</init>
    </member>
    <member kind="enumeration">
      <name>oaLayerArrayConstraintTypeEnum</name>
      <anchor>a144</anchor>
      <init>8</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinTouchingDirectionExtension</name>
      <anchor>a144a133</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinTouchingDirectionClearance</name>
      <anchor>a144a134</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinClearanceOverLayer</name>
      <anchor>a144a135</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinParallelViaClearance</name>
      <anchor>a144a136</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacDummyPolyExtension</name>
      <anchor>a144a137</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacMaxPolyLength</name>
      <anchor>a144a138</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinInnerVertexSpacing</name>
      <anchor>a144a139</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacValidRoutingLPPs</name>
      <anchor>a144a140</anchor>
      <init> 7</init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaConstraintDef.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaConstraintDef_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaConstraintDef_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaConstraintGroup.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaConstraintGroup_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaConstraintGroup.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaConstraintGroup_8h</filename>
    <class kind="class">oaConstraintGroup</class>
    <class kind="class">oaConstraintGroupMem</class>
    <class kind="class">oaConstraintGroupOperator</class>
    <class kind="class">oaTraits&lt; oaConstraintGroup &gt;</class>
    <class kind="class">oaTraits&lt; oaConstraintGroupMem &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaConstraintGroup_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumConstraintGroupOperators</name>
      <anchor>a1</anchor>
      <init>3</init>
    </member>
    <member kind="enumeration">
      <name>oaConstraintGroupOperatorEnum</name>
      <anchor>a5</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacPrecedenceGroupOperator</name>
      <anchor>a5a2</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacAndGroupOperator</name>
      <anchor>a5a3</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacOrGroupOperator</name>
      <anchor>a5a4</anchor>
      <init> 2</init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaConstraintGroup.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaConstraintGroup_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaConstraintGroup_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaConstraintGroupDef.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaConstraintGroupDef_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaConstraintGroupDef.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaConstraintGroupDef_8h</filename>
    <class kind="class">oaConstraintGroupDef</class>
    <class kind="class">oaConstraintGroupType</class>
    <class kind="class">oaTraits&lt; oaConstraintGroupDef &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaConstraintGroupDef_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumConstraintGroupTypes</name>
      <anchor>a1</anchor>
      <init>11</init>
    </member>
    <member kind="enumeration">
      <name>oaConstraintGroupTypeEnum</name>
      <anchor>a13</anchor>
      <init>11</init>
    </member>
    <member kind="enumvalue">
      <name>oacUserDefinedConstraintGroupType</name>
      <anchor>a13a2</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacImplicitConstraintGroupType</name>
      <anchor>a13a3</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacDefaultConstraintGroupType</name>
      <anchor>a13a4</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacFoundryConstraintGroupType</name>
      <anchor>a13a5</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacTaperConstraintGroupType</name>
      <anchor>a13a6</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacInputTaperConstraintGroupType</name>
      <anchor>a13a7</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacOutputTaperConstraintGroupType</name>
      <anchor>a13a8</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacShieldingConstraintGroupType</name>
      <anchor>a13a9</anchor>
      <init> 7</init>
    </member>
    <member kind="enumvalue">
      <name>oacTransReflexiveConstraintGroupType</name>
      <anchor>a13a10</anchor>
      <init> 8</init>
    </member>
    <member kind="enumvalue">
      <name>oacReflexiveConstraintGroupType</name>
      <anchor>a13a11</anchor>
      <init> 9</init>
    </member>
    <member kind="enumvalue">
      <name>oacInterChildConstraintGroupType</name>
      <anchor>a13a12</anchor>
      <init> 10</init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaConstraintGroupDef.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaConstraintGroupDef_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaConstraintGroupDef_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaConstraintGroupHeader.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaConstraintGroupHeader_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaConstraintGroupHeader.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaConstraintGroupHeader_8h</filename>
    <class kind="class">oaConstraintGroupHeader</class>
    <class kind="class">oaTraits&lt; oaConstraintGroupHeader &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaConstraintGroupHeader_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaConstraintGroupMem</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaConstraintParam.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaConstraintParam_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaConstraintParam.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaConstraintParam_8h</filename>
    <class kind="class">oaConstraintParam</class>
    <class kind="class">oaConstraintParamArray</class>
    <class kind="class">oaTraits&lt; oaConstraintParam &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaConstraintParam_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaConstraintParamDef</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaConstraintParam.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaConstraintParam_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaConstraintParam_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaConstraintParamDef.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaConstraintParamDef_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaConstraintParamDef.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaConstraintParamDef_8h</filename>
    <class kind="class">oaAlignmentType</class>
    <class kind="class">oaConnectivityType</class>
    <class kind="class">oaConnectLayerType</class>
    <class kind="class">oaConstraintParamDef</class>
    <class kind="class">oaConstraintParamType</class>
    <class kind="class">oaDistanceMeasureType</class>
    <class kind="class">oaEnclosedCutType</class>
    <class kind="class">oaNeighborLayerMetalType</class>
    <class kind="class">oaSpacingDirectionType</class>
    <class kind="class">oaSpacingMeasureType</class>
    <class kind="class">oaSpacingType</class>
    <class kind="class">oaTraits&lt; oaConstraintParamDef &gt;</class>
    <class kind="class">oaViaExtensionType</class>
    <class kind="class">oaWidthLengthTableType</class>
    <member kind="define">
      <type>#define</type>
      <name>oaConstraintParamDef_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumConstraintParamTypes</name>
      <anchor>a1</anchor>
      <init>100</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumDistanceMeasureTypes</name>
      <anchor>a2</anchor>
      <init>2</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumWidthLengthTableTypes</name>
      <anchor>a3</anchor>
      <init>3</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumAlignmentTypes</name>
      <anchor>a4</anchor>
      <init>3</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumSpacingDirectionTypes</name>
      <anchor>a5</anchor>
      <init>3</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumConnectivityTypes</name>
      <anchor>a6</anchor>
      <init>5</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumViaExtensionTypes</name>
      <anchor>a7</anchor>
      <init>3</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumConnectLayerTypes</name>
      <anchor>a8</anchor>
      <init>3</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumSpacingTypes</name>
      <anchor>a9</anchor>
      <init>4</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumSpacingMeasureTypes</name>
      <anchor>a10</anchor>
      <init>2</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumEnclosedCutTypes</name>
      <anchor>a11</anchor>
      <init>3</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNeighborLayerMetalType</name>
      <anchor>a12</anchor>
      <init>3</init>
    </member>
    <member kind="enumeration">
      <name>oaConstraintParamTypeEnum</name>
      <anchor>a147</anchor>
      <init>100</init>
    </member>
    <member kind="enumvalue">
      <name>oacDistanceConstraintParamType</name>
      <anchor>a147a13</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacFrequencyConstraintParamType</name>
      <anchor>a147a14</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacLengthConstraintParamType</name>
      <anchor>a147a15</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacNumCutsConstraintParamType</name>
      <anchor>a147a16</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacWidthConstraintParamType</name>
      <anchor>a147a17</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacLengthSumConstraintParamType</name>
      <anchor>a147a18</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacLowerLayerConstraintParamType</name>
      <anchor>a147a19</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacUpperLayerConstraintParamType</name>
      <anchor>a147a20</anchor>
      <init> 7</init>
    </member>
    <member kind="enumvalue">
      <name>oacCoincidentAllowedParamType</name>
      <anchor>a147a21</anchor>
      <init> 8</init>
    </member>
    <member kind="enumvalue">
      <name>oacWidthLengthTableTypeConstraintParamType</name>
      <anchor>a147a22</anchor>
      <init> 9</init>
    </member>
    <member kind="enumvalue">
      <name>oacDistanceMeasureTypeConstraintParamType</name>
      <anchor>a147a23</anchor>
      <init> 10</init>
    </member>
    <member kind="enumvalue">
      <name>oacCountConstraintParamType</name>
      <anchor>a147a24</anchor>
      <init> 11</init>
    </member>
    <member kind="enumvalue">
      <name>oacParallelEdgeSpaceConstraintParamType</name>
      <anchor>a147a25</anchor>
      <init> 12</init>
    </member>
    <member kind="enumvalue">
      <name>oacParallelEdgeWithinConstraintParamType</name>
      <anchor>a147a26</anchor>
      <init> 13</init>
    </member>
    <member kind="enumvalue">
      <name>oacMaxLengthConstraintParamType</name>
      <anchor>a147a27</anchor>
      <init> 14</init>
    </member>
    <member kind="enumvalue">
      <name>oacMaxEdgeCountConstraintParamType</name>
      <anchor>a147a28</anchor>
      <init> 15</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinNumCutsConstraintParamType</name>
      <anchor>a147a29</anchor>
      <init> 16</init>
    </member>
    <member kind="enumvalue">
      <name>oacAntennaAreaFactorConstraintParamType</name>
      <anchor>a147a30</anchor>
      <init> 17</init>
    </member>
    <member kind="enumvalue">
      <name>oacAntennaDiffPlusFactorConstraintParamType</name>
      <anchor>a147a31</anchor>
      <init> 18</init>
    </member>
    <member kind="enumvalue">
      <name>oacAntennaDiffMinusFactorConstraintParamType</name>
      <anchor>a147a32</anchor>
      <init> 19</init>
    </member>
    <member kind="enumvalue">
      <name>oacAntennaDiffAreaReduceFactorConstraintParamType</name>
      <anchor>a147a33</anchor>
      <init> 20</init>
    </member>
    <member kind="enumvalue">
      <name>oacAntennaCumRoutingPlusCutConstraintParamType</name>
      <anchor>a147a34</anchor>
      <init> 21</init>
    </member>
    <member kind="enumvalue">
      <name>oacAlignmentTypeConstraintParamType</name>
      <anchor>a147a35</anchor>
      <init> 22</init>
    </member>
    <member kind="enumvalue">
      <name>oacEndOfLineSpaceConstraintParamType</name>
      <anchor>a147a36</anchor>
      <init> 23</init>
    </member>
    <member kind="enumvalue">
      <name>oacSpacingDirectionConstraintParamType</name>
      <anchor>a147a37</anchor>
      <init> 24</init>
    </member>
    <member kind="enumvalue">
      <name>oacDistanceWithinConstraintParamType</name>
      <anchor>a147a38</anchor>
      <init> 25</init>
    </member>
    <member kind="enumvalue">
      <name>oacNotchLengthConstraintParamType</name>
      <anchor>a147a39</anchor>
      <init> 26</init>
    </member>
    <member kind="enumvalue">
      <name>oacNotchSpacingConstraintParamType</name>
      <anchor>a147a40</anchor>
      <init> 27</init>
    </member>
    <member kind="enumvalue">
      <name>oacNotchWidthConstraintParamType</name>
      <anchor>a147a41</anchor>
      <init> 28</init>
    </member>
    <member kind="enumvalue">
      <name>oacCutDistanceConstraintParamType</name>
      <anchor>a147a42</anchor>
      <init> 29</init>
    </member>
    <member kind="enumvalue">
      <name>oacNoSharedEdgeConstraintParamType</name>
      <anchor>a147a43</anchor>
      <init> 30</init>
    </member>
    <member kind="enumvalue">
      <name>oacObsoleteConstraintParamType31</name>
      <anchor>a147a44</anchor>
      <init> 31</init>
    </member>
    <member kind="enumvalue">
      <name>oacCenterToCenterConstraintParamType</name>
      <anchor>a147a45</anchor>
      <init> 32</init>
    </member>
    <member kind="enumvalue">
      <name>oacAreaConstraintParamType</name>
      <anchor>a147a46</anchor>
      <init> 33</init>
    </member>
    <member kind="enumvalue">
      <name>oacStackConstraintParamType</name>
      <anchor>a147a47</anchor>
      <init> 34</init>
    </member>
    <member kind="enumvalue">
      <name>oacNoSingleCutViaConstraintParamType</name>
      <anchor>a147a48</anchor>
      <init> 35</init>
    </member>
    <member kind="enumvalue">
      <name>oacConnectivityTypeConstraintParamType</name>
      <anchor>a147a49</anchor>
      <init> 36</init>
    </member>
    <member kind="enumvalue">
      <name>oacPGNetConstraintParamType</name>
      <anchor>a147a50</anchor>
      <init> 37</init>
    </member>
    <member kind="enumvalue">
      <name>oacExceptSamePGNetConstraintParamType</name>
      <anchor>a147a51</anchor>
      <init> 38</init>
    </member>
    <member kind="enumvalue">
      <name>oacAboveOnlyConstraintParamType</name>
      <anchor>a147a52</anchor>
      <init> 39</init>
    </member>
    <member kind="enumvalue">
      <name>oacAllCutsConstraintParamType</name>
      <anchor>a147a53</anchor>
      <init> 40</init>
    </member>
    <member kind="enumvalue">
      <name>oacClassNameConstraintParamType</name>
      <anchor>a147a54</anchor>
      <init> 41</init>
    </member>
    <member kind="enumvalue">
      <name>oacCutClassCenterToCenterConstraintParamType</name>
      <anchor>a147a55</anchor>
      <init> 42</init>
    </member>
    <member kind="enumvalue">
      <name>oacCutClassConstraintParamType</name>
      <anchor>a147a56</anchor>
      <init> 43</init>
    </member>
    <member kind="enumvalue">
      <name>oacCutClassListConstraintParamType</name>
      <anchor>a147a57</anchor>
      <init> 44</init>
    </member>
    <member kind="enumvalue">
      <name>oacCutToMetalSpacingConstraintParamType</name>
      <anchor>a147a58</anchor>
      <init> 45</init>
    </member>
    <member kind="enumvalue">
      <name>oacEnclosedCutConstraintParamType</name>
      <anchor>a147a59</anchor>
      <init> 46</init>
    </member>
    <member kind="enumvalue">
      <name>oacEnclosedDistanceConstraintParamType</name>
      <anchor>a147a60</anchor>
      <init> 47</init>
    </member>
    <member kind="enumvalue">
      <name>oacEndOfLinePerpWidthConstraintParamType</name>
      <anchor>a147a61</anchor>
      <init> 48</init>
    </member>
    <member kind="enumvalue">
      <name>oacEndOfLineWidthConstraintParamType</name>
      <anchor>a147a62</anchor>
      <init> 49</init>
    </member>
    <member kind="enumvalue">
      <name>oacEndToEndSpacingConstraintParamType</name>
      <anchor>a147a63</anchor>
      <init> 50</init>
    </member>
    <member kind="enumvalue">
      <name>oacEqualRectWidthConstraintParamType</name>
      <anchor>a147a64</anchor>
      <init> 51</init>
    </member>
    <member kind="enumvalue">
      <name>oacExactAlignedConstraintParamType</name>
      <anchor>a147a65</anchor>
      <init> 52</init>
    </member>
    <member kind="enumvalue">
      <name>oacExactParallelRunLengthConstraintParamType</name>
      <anchor>a147a66</anchor>
      <init> 53</init>
    </member>
    <member kind="enumvalue">
      <name>oacExactSpacingConstraintParamType</name>
      <anchor>a147a67</anchor>
      <init> 54</init>
    </member>
    <member kind="enumvalue">
      <name>oacExceptConnectivityTypeConstraintParamType</name>
      <anchor>a147a68</anchor>
      <init> 55</init>
    </member>
    <member kind="enumvalue">
      <name>oacExceptEdgeLengthConstraintParamType</name>
      <anchor>a147a69</anchor>
      <init> 56</init>
    </member>
    <member kind="enumvalue">
      <name>oacExceptExtraCutConstraintParamType</name>
      <anchor>a147a70</anchor>
      <init> 57</init>
    </member>
    <member kind="enumvalue">
      <name>oacExceptLineTouchConstraintParamType</name>
      <anchor>a147a71</anchor>
      <init> 58</init>
    </member>
    <member kind="enumvalue">
      <name>oacExceptMinSizeConstraintParamType</name>
      <anchor>a147a72</anchor>
      <init> 59</init>
    </member>
    <member kind="enumvalue">
      <name>oacExceptPointTouchConstraintParamType</name>
      <anchor>a147a73</anchor>
      <init> 60</init>
    </member>
    <member kind="enumvalue">
      <name>oacExceptSameCornerConstraintParamType</name>
      <anchor>a147a74</anchor>
      <init> 61</init>
    </member>
    <member kind="enumvalue">
      <name>oacExceptSameViaCountConstraintParamType</name>
      <anchor>a147a75</anchor>
      <init> 62</init>
    </member>
    <member kind="enumvalue">
      <name>oacExceptTwoEdgesConstraintParamType</name>
      <anchor>a147a76</anchor>
      <init> 63</init>
    </member>
    <member kind="enumvalue">
      <name>oacFloatingAreaSpacingConstraintParamType</name>
      <anchor>a147a77</anchor>
      <init> 64</init>
    </member>
    <member kind="enumvalue">
      <name>oacFloatingMetalConstraintParamType</name>
      <anchor>a147a78</anchor>
      <init> 65</init>
    </member>
    <member kind="enumvalue">
      <name>oacInLayerDirectionConstraintParamType</name>
      <anchor>a147a79</anchor>
      <init> 66</init>
    </member>
    <member kind="enumvalue">
      <name>oacInterSpaceConstraintParamType</name>
      <anchor>a147a80</anchor>
      <init> 67</init>
    </member>
    <member kind="enumvalue">
      <name>oacMaxChannelLengthConstraintParamType</name>
      <anchor>a147a81</anchor>
      <init> 68</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinJogLengthConstraintParamType</name>
      <anchor>a147a82</anchor>
      <init> 69</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinLengthConstraintParamType</name>
      <anchor>a147a83</anchor>
      <init> 70</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinLengthRatioConstraintParamType</name>
      <anchor>a147a84</anchor>
      <init> 71</init>
    </member>
    <member kind="enumvalue">
      <name>oacMinOppositeWidthConstraintParamType</name>
      <anchor>a147a85</anchor>
      <init> 72</init>
    </member>
    <member kind="enumvalue">
      <name>oacOtherEndWidthConstraintParamType</name>
      <anchor>a147a86</anchor>
      <init> 73</init>
    </member>
    <member kind="enumvalue">
      <name>oacParallelEdgeLengthConstraintParamType</name>
      <anchor>a147a87</anchor>
      <init> 74</init>
    </member>
    <member kind="enumvalue">
      <name>oacParallelEdgeMinLengthConstraintParamType</name>
      <anchor>a147a88</anchor>
      <init> 75</init>
    </member>
    <member kind="enumvalue">
      <name>oacParallelOverlapConstraintParamType</name>
      <anchor>a147a89</anchor>
      <init> 76</init>
    </member>
    <member kind="enumvalue">
      <name>oacParallelRunLengthConstraintParamType</name>
      <anchor>a147a90</anchor>
      <init> 77</init>
    </member>
    <member kind="enumvalue">
      <name>oacParallelRunLengthTableConstraintParamType</name>
      <anchor>a147a91</anchor>
      <init> 78</init>
    </member>
    <member kind="enumvalue">
      <name>oacRedundantCutDistanceConstraintParamType</name>
      <anchor>a147a92</anchor>
      <init> 79</init>
    </member>
    <member kind="enumvalue">
      <name>oacRoutingLayersConstraintParamType</name>
      <anchor>a147a93</anchor>
      <init> 80</init>
    </member>
    <member kind="enumvalue">
      <name>oacSpanLengthConstraintParamType</name>
      <anchor>a147a94</anchor>
      <init> 81</init>
    </member>
    <member kind="enumvalue">
      <name>oacSubtractEndOfLineWidthConstraintParamType</name>
      <anchor>a147a95</anchor>
      <init> 82</init>
    </member>
    <member kind="enumvalue">
      <name>oacTwoSidesConstraintParamType</name>
      <anchor>a147a96</anchor>
      <init> 83</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaExtensionTypeConstraintParamType</name>
      <anchor>a147a97</anchor>
      <init> 84</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaLengthMinConstraintParamType</name>
      <anchor>a147a98</anchor>
      <init> 85</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaWidthMinConstraintParamType</name>
      <anchor>a147a99</anchor>
      <init> 86</init>
    </member>
    <member kind="enumvalue">
      <name>oacWindowStepSizeConstraintParamType</name>
      <anchor>a147a100</anchor>
      <init> 87</init>
    </member>
    <member kind="enumvalue">
      <name>oacExtensionSpacingConstraintParamType</name>
      <anchor>a147a101</anchor>
      <init> 88</init>
    </member>
    <member kind="enumvalue">
      <name>oacConvexCornerConstraintParamType</name>
      <anchor>a147a102</anchor>
      <init> 89</init>
    </member>
    <member kind="enumvalue">
      <name>oacHasParallelRunLengthConstraintParamType</name>
      <anchor>a147a103</anchor>
      <init> 90</init>
    </member>
    <member kind="enumvalue">
      <name>oacJointWidthConstraintParamType</name>
      <anchor>a147a104</anchor>
      <init> 91</init>
    </member>
    <member kind="enumvalue">
      <name>oacWrongDirectionConstraintParamType</name>
      <anchor>a147a105</anchor>
      <init> 92</init>
    </member>
    <member kind="enumvalue">
      <name>oacExceptEdgeLengthPRLConstraintParamType</name>
      <anchor>a147a106</anchor>
      <init> 93</init>
    </member>
    <member kind="enumvalue">
      <name>oacEndSideOverhangConstraintParamType</name>
      <anchor>a147a107</anchor>
      <init> 94</init>
    </member>
    <member kind="enumvalue">
      <name>oacJointToEdgeEndLengthConstraintParamType</name>
      <anchor>a147a108</anchor>
      <init> 95</init>
    </member>
    <member kind="enumvalue">
      <name>oacSideParallelOverlapConstraintParamType</name>
      <anchor>a147a109</anchor>
      <init> 96</init>
    </member>
    <member kind="enumvalue">
      <name>oacNeighborLayerMetalConstraintParamType</name>
      <anchor>a147a110</anchor>
      <init> 97</init>
    </member>
    <member kind="enumvalue">
      <name>oacExceptCutMetalEdgeExtensionConstraintParamType</name>
      <anchor>a147a111</anchor>
      <init> 98</init>
    </member>
    <member kind="enumvalue">
      <name>oacCutClassProfileConstraintParamType</name>
      <anchor>a147a112</anchor>
      <init> 99</init>
    </member>
    <member kind="enumeration">
      <name>oaDistanceMeasureTypeEnum</name>
      <anchor>a148</anchor>
      <init>2</init>
    </member>
    <member kind="enumvalue">
      <name>oacEuclidianDistanceMeasureType</name>
      <anchor>a148a113</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacManhattanDistanceMeasureType</name>
      <anchor>a148a114</anchor>
      <init> 1</init>
    </member>
    <member kind="enumeration">
      <name>oaWidthLengthTableTypeEnum</name>
      <anchor>a149</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacWidthParallelRunLengthTableType</name>
      <anchor>a149a115</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacWidthWidthTableType</name>
      <anchor>a149a116</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacTwoWidthParallelRunLengthTableType</name>
      <anchor>a149a117</anchor>
      <init> 2</init>
    </member>
    <member kind="enumeration">
      <name>oaAlignmentTypeEnum</name>
      <anchor>a150</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacInsideAlignmentType</name>
      <anchor>a150a118</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacOutsideAlignmentType</name>
      <anchor>a150a119</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacInsideOutsideAlignmentType</name>
      <anchor>a150a120</anchor>
      <init> 2</init>
    </member>
    <member kind="enumeration">
      <name>oaSpacingDirectionTypeEnum</name>
      <anchor>a151</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacAnySpacingDirectionType</name>
      <anchor>a151a121</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacHorizontalSpacingDirectionType</name>
      <anchor>a151a122</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacVerticalSpacingDirectionType</name>
      <anchor>a151a123</anchor>
      <init> 2</init>
    </member>
    <member kind="enumeration">
      <name>oaConnectivityTypeEnum</name>
      <anchor>a152</anchor>
      <init>5</init>
    </member>
    <member kind="enumvalue">
      <name>oacAnyConnectivityType</name>
      <anchor>a152a124</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacSameNetConnectivityType</name>
      <anchor>a152a125</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacContiguousShapesConnectivityType</name>
      <anchor>a152a126</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacDirectShapesConnectivityType</name>
      <anchor>a152a127</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacSameViaConnectivityType</name>
      <anchor>a152a128</anchor>
      <init> 4</init>
    </member>
    <member kind="enumeration">
      <name>oaViaExtensionTypeEnum</name>
      <anchor>a153</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacOneThreeViaExtensionType</name>
      <anchor>a153a129</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacOneOneTwoViaExtensionType</name>
      <anchor>a153a130</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacDiagonalViaExtensionType</name>
      <anchor>a153a131</anchor>
      <init> 2</init>
    </member>
    <member kind="enumeration">
      <name>oaConnectLayerTypeEnum</name>
      <anchor>a154</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacSingleConnectLayerType</name>
      <anchor>a154a132</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacConnectedConnectLayerType</name>
      <anchor>a154a133</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacAllConnectedConnectLayerType</name>
      <anchor>a154a134</anchor>
      <init> 2</init>
    </member>
    <member kind="enumeration">
      <name>oaSpacingTypeEnum</name>
      <anchor>a155</anchor>
      <init>4</init>
    </member>
    <member kind="enumvalue">
      <name>oacEndToEndSpacingType</name>
      <anchor>a155a135</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacEndToJoiintSpacingType</name>
      <anchor>a155a136</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacJointToEndSpacingType</name>
      <anchor>a155a137</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacJointToJointSpacingType</name>
      <anchor>a155a138</anchor>
      <init> 3</init>
    </member>
    <member kind="enumeration">
      <name>oaSpacingMeasureTypeEnum</name>
      <anchor>a156</anchor>
      <init>2</init>
    </member>
    <member kind="enumvalue">
      <name>oacEdgeToEdgeSpacingMeasureType</name>
      <anchor>a156a139</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacCenterToCenterSpacingMeasureType</name>
      <anchor>a156a140</anchor>
      <init> 1</init>
    </member>
    <member kind="enumeration">
      <name>oaEnclosedCutTypeEnum</name>
      <anchor>a157</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacAllEnclosedCutType</name>
      <anchor>a157a141</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacBelowEnclosedCutType</name>
      <anchor>a157a142</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacAboveEnclosedCutType</name>
      <anchor>a157a143</anchor>
      <init> 2</init>
    </member>
    <member kind="enumeration">
      <name>oaNeighborLayerMetalTypeEnum</name>
      <anchor>a158</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacUpperLowerLayerMetalType</name>
      <anchor>a158a144</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacUpperLayerMetalType</name>
      <anchor>a158a145</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacLowerLayerMetalType</name>
      <anchor>a158a146</anchor>
      <init> 2</init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaConstraintParamDef.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaConstraintParamDef_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaConstraintParamDef_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaDefNS.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaDefNS_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaDomain.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaDomain_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaDomain.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaDomain_8h</filename>
    <class kind="class">oaDomain</class>
    <member kind="define">
      <type>#define</type>
      <name>oaDomain_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumDomains</name>
      <anchor>a1</anchor>
      <init>4</init>
    </member>
    <member kind="enumeration">
      <name>oaDomainEnum</name>
      <anchor>a8</anchor>
      <init>5</init>
    </member>
    <member kind="enumvalue">
      <name>oacFutureDomain</name>
      <anchor>a8a3</anchor>
      <init> UINT_MAX</init>
    </member>
    <member kind="enumvalue">
      <name>oacNoDomain</name>
      <anchor>a8a4</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacBlockDomain</name>
      <anchor>a8a5</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccDomain</name>
      <anchor>a8a6</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacModDomain</name>
      <anchor>a8a7</anchor>
      <init> 3</init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaString</name>
      <anchor>a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaDomain.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaDomain_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaDomain_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaDoubleProp.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaDoubleProp_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaDoubleProp.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaDoubleProp_8h</filename>
    <class kind="class">oaDoubleProp</class>
    <class kind="class">oaTraits&lt; oaDoubleProp &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaDoubleProp_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaDoubleRangeProp.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaDoubleRangeProp_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaDoubleRangeProp.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaDoubleRangeProp_8h</filename>
    <class kind="class">oaDoubleRangeProp</class>
    <class kind="class">oaTraits&lt; oaDoubleRangeProp &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaDoubleRangeProp_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaEnumCollection.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaEnumCollection_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaEnumIterState.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaEnumIterState_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaEnumProp.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaEnumProp_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaEnumProp.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaEnumProp_8h</filename>
    <class kind="class">oaEnumProp</class>
    <class kind="class">oaTraits&lt; oaEnumProp &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaEnumProp_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaEnumCollection</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaException.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaException_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaException.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaException_8h</filename>
    <class kind="class">oaCompatibilityError</class>
    <class kind="class">oaError</class>
    <class kind="class">oaException</class>
    <class kind="class">oaMemoryError</class>
    <class kind="class">oaOSError</class>
    <class kind="class">oaSocketError</class>
    <member kind="define">
      <type>#define</type>
      <name>oaException_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oaValidate</name>
      <anchor>a1</anchor>
      <init>{\
    if (!(exp)) {\
	throw oa::oaError(errorID);\
    }\
}</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oaAssert</name>
      <anchor>a2</anchor>
      <init>{\
    if (!(exp)) {\
	throw oa::oaError(oa::oacInternalError, #exp, __FILE__, __LINE__);\
    }\
}</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oaInternalError</name>
      <anchor>a3</anchor>
      <init>throw oa::oaError(oa::oacInternalError, str, __FILE__, __LINE__)</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oaUnexpectedCase</name>
      <anchor>a4</anchor>
      <init>{\
    oa::oaString    str;\
    \
    str.format(&quot;Unexpected case %d&quot;, (oaUInt4) value);\
    \
    throw oa::oaError(oa::oacInternalError, (const char *) str, __FILE__, __LINE__);\
}</init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaException.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaException_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaException_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaExtrapolateType.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaExtrapolateType_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaFeature.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaFeature_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaFeature.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaFeature_8h</filename>
    <class kind="class">oaFeature</class>
    <class kind="class">oaTraits&lt; oaFeature &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaFeature_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="enumeration">
      <name>oaFeatureIDEnum</name>
      <anchor>a42</anchor>
      <init>41</init>
    </member>
    <member kind="enumvalue">
      <name>oacHugeDatabaseFeatureID</name>
      <anchor>a42a1</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacFigGroupFeatureID</name>
      <anchor>a42a2</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacReferenceToFigGroupFeatureID</name>
      <anchor>a42a3</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacDefaultConstraintGroupFeatureID</name>
      <anchor>a42a4</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacNewMaterialTypeEnumFeatureID</name>
      <anchor>a42a5</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintIDDataFeatureID</name>
      <anchor>a42a6</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintDescriptionDataFeatureID</name>
      <anchor>a42a7</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacTechGateGroundedDataFeatureID</name>
      <anchor>a42a8</anchor>
      <init> 7</init>
    </member>
    <member kind="enumvalue">
      <name>oacNewConstraintOfExistingTypeInRev1FeatureID</name>
      <anchor>a42a9</anchor>
      <init> 8</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerArrayConstraintTypeFeatureID</name>
      <anchor>a42a10</anchor>
      <init> 9</init>
    </member>
    <member kind="enumvalue">
      <name>oacNewConstraintParamInRev1FeatureID</name>
      <anchor>a42a11</anchor>
      <init> 10</init>
    </member>
    <member kind="enumvalue">
      <name>oacModifiedConstraintInRev1FeatureID</name>
      <anchor>a42a12</anchor>
      <init> 11</init>
    </member>
    <member kind="enumvalue">
      <name>oacNewValueTypeInRev1FeatureID</name>
      <anchor>a42a13</anchor>
      <init> 12</init>
    </member>
    <member kind="enumvalue">
      <name>oacDerivedLayerParamFeatureID</name>
      <anchor>a42a14</anchor>
      <init> 13</init>
    </member>
    <member kind="enumvalue">
      <name>oacNewDerivedLayerFeatureID</name>
      <anchor>a42a15</anchor>
      <init> 14</init>
    </member>
    <member kind="enumvalue">
      <name>oacReferenceToDerivedLayerParamFeatureID</name>
      <anchor>a42a16</anchor>
      <init> 15</init>
    </member>
    <member kind="enumvalue">
      <name>oacIncrementalTechFeatureID</name>
      <anchor>a42a17</anchor>
      <init> 16</init>
    </member>
    <member kind="enumvalue">
      <name>oacTechProcessFamilyInRev4FeatureID</name>
      <anchor>a42a18</anchor>
      <init> 17</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerExclusionInRev4FeatureID</name>
      <anchor>a42a19</anchor>
      <init> 18</init>
    </member>
    <member kind="enumvalue">
      <name>oacPurposeAwareConstraintInRev4TechFeatureID</name>
      <anchor>a42a20</anchor>
      <init> 19</init>
    </member>
    <member kind="enumvalue">
      <name>oacPurposeAwareConstraintInRev4DesignFeatureID</name>
      <anchor>a42a21</anchor>
      <init> 20</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerDerivedFromPurposeInRev4FeatureID</name>
      <anchor>a42a22</anchor>
      <init> 21</init>
    </member>
    <member kind="enumvalue">
      <name>oacNewReservedPurposeInRev4TechFeatureID</name>
      <anchor>a42a23</anchor>
      <init> 22</init>
    </member>
    <member kind="enumvalue">
      <name>oacNewReservedPurposeInRev4DesignFeatureID</name>
      <anchor>a42a24</anchor>
      <init> 23</init>
    </member>
    <member kind="enumvalue">
      <name>oacNewValueTypeInRev4FeatureID</name>
      <anchor>a42a25</anchor>
      <init> 24</init>
    </member>
    <member kind="enumvalue">
      <name>oacNewConstraintInRev4FeatureID</name>
      <anchor>a42a26</anchor>
      <init> 25</init>
    </member>
    <member kind="enumvalue">
      <name>oacNewConstraintParamInRev4FeatureID</name>
      <anchor>a42a27</anchor>
      <init> 26</init>
    </member>
    <member kind="enumvalue">
      <name>oacModifiedConstraintInRev4FeatureID</name>
      <anchor>a42a28</anchor>
      <init> 27</init>
    </member>
    <member kind="enumvalue">
      <name>oacNewPinTypeInRev4FeatureID</name>
      <anchor>a42a29</anchor>
      <init> 28</init>
    </member>
    <member kind="enumvalue">
      <name>oacNewBlockageSpacingInRev4FeatureID</name>
      <anchor>a42a30</anchor>
      <init> 29</init>
    </member>
    <member kind="enumvalue">
      <name>oacNewBlockageSoftInRev4FeatureID</name>
      <anchor>a42a31</anchor>
      <init> 30</init>
    </member>
    <member kind="enumvalue">
      <name>oacNewBlockageExceptPGNetInRev4FeatureID</name>
      <anchor>a42a32</anchor>
      <init> 31</init>
    </member>
    <member kind="enumvalue">
      <name>oacModifiedDensityInRev4FeatureID</name>
      <anchor>a42a33</anchor>
      <init> 32</init>
    </member>
    <member kind="enumvalue">
      <name>oacGroupDefInRev4FeatureID</name>
      <anchor>a42a34</anchor>
      <init> 33</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintGroupDefInRev4FeatureID</name>
      <anchor>a42a35</anchor>
      <init> 34</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaVariantInRev4TechFeatureID</name>
      <anchor>a42a36</anchor>
      <init> 35</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaVariantInRev4DesignFeatureID</name>
      <anchor>a42a37</anchor>
      <init> 36</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerRangeBlockageInRev4FeatureID</name>
      <anchor>a42a38</anchor>
      <init> 37</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerRangeHaloInRev4FeatureID</name>
      <anchor>a42a39</anchor>
      <init> 38</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintGroupOperatorInRev4FeatureID</name>
      <anchor>a42a40</anchor>
      <init> 39</init>
    </member>
    <member kind="enumvalue">
      <name>oacModifiedConstraintParamInRev4FeatureID</name>
      <anchor>a42a41</anchor>
      <init> 40</init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaFeature.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaFeature_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaFeature_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaFile.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaFile_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaFile.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaFile_8h</filename>
    <class kind="class">oaDir</class>
    <class kind="class">oaDirIter</class>
    <class kind="class">oaFile</class>
    <class kind="class">oaFSComponent</class>
    <member kind="define">
      <type>#define</type>
      <name>oaFile_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="enumeration">
      <name>oaDirIterModeEnum</name>
      <anchor>a4</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacFilesDirIterMode</name>
      <anchor>a4a1</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacDirsDirIterMode</name>
      <anchor>a4a2</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacAllDirIterMode</name>
      <anchor>a4a3</anchor>
      <init> 2</init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaFile.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaFile_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaFile_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaFloatProp.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaFloatProp_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaFloatProp.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaFloatProp_8h</filename>
    <class kind="class">oaFloatProp</class>
    <class kind="class">oaTraits&lt; oaFloatProp &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaFloatProp_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaFloatRangeProp.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaFloatRangeProp_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaFloatRangeProp.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaFloatRangeProp_8h</filename>
    <class kind="class">oaFloatRangeProp</class>
    <class kind="class">oaTraits&lt; oaFloatRangeProp &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaFloatRangeProp_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaGroup.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaGroup_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaGroup.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaGroup_8h</filename>
    <class kind="class">oaGroup</class>
    <class kind="class">oaGroupDeleteWhen</class>
    <class kind="class">oaGroupMember</class>
    <class kind="class">oaGroupType</class>
    <class kind="class">oaTraits&lt; oaGroup &gt;</class>
    <class kind="class">oaTraits&lt; oaGroupMember &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaGroup_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacGroupIterNoDomain</name>
      <anchor>a1</anchor>
      <init>0x0001u</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacGroupIterBlockDomain</name>
      <anchor>a2</anchor>
      <init>0x0002u</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacGroupIterModDomain</name>
      <anchor>a3</anchor>
      <init>0x0004u</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacGroupIterOccDomain</name>
      <anchor>a4</anchor>
      <init>0x0008u</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumGroupTypes</name>
      <anchor>a5</anchor>
      <init>2</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumGroupDeleteWhenEnums</name>
      <anchor>a6</anchor>
      <init>3</init>
    </member>
    <member kind="enumeration">
      <name>oaGroupTypeEnum</name>
      <anchor>a13</anchor>
      <init>2</init>
    </member>
    <member kind="enumvalue">
      <name>oacCollectionGroupType</name>
      <anchor>a13a8</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacSetGroupType</name>
      <anchor>a13a9</anchor>
      <init> 1</init>
    </member>
    <member kind="enumeration">
      <name>oaGroupDeleteWhenEnum</name>
      <anchor>a14</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacNeverGroupDeleteWhen</name>
      <anchor>a14a10</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacOnFirstGroupDeleteWhen</name>
      <anchor>a14a11</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacOnLastGroupDeleteWhen</name>
      <anchor>a14a12</anchor>
      <init> 2</init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaGroupDef</name>
      <anchor>a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaGroup.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaGroup_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaGroup_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaGroupDef.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaGroupDef_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaGroupDef.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaGroupDef_8h</filename>
    <class kind="class">oaFlatGroupDef</class>
    <class kind="class">oaGroupDef</class>
    <class kind="class">oaGroupDefArray</class>
    <class kind="class">oaGroupPurposeType</class>
    <class kind="class">oaHierGroupDef</class>
    <class kind="class">oaTraits&lt; oaFlatGroupDef &gt;</class>
    <class kind="class">oaTraits&lt; oaGroupDef &gt;</class>
    <class kind="class">oaTraits&lt; oaHierGroupDef &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaGroupDef_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumGroupPurposeTypes</name>
      <anchor>a1</anchor>
      <init>6</init>
    </member>
    <member kind="enumeration">
      <name>oaGroupPurposeTypeEnum</name>
      <anchor>a8</anchor>
      <init>6</init>
    </member>
    <member kind="enumvalue">
      <name>oacUnrestrictedGroupPurposeType</name>
      <anchor>a8a2</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacDiffNetPairGroupPurposeType</name>
      <anchor>a8a3</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacMatchedNetGroupPurposeType</name>
      <anchor>a8a4</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacNetGroupPurposeType</name>
      <anchor>a8a5</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacNestedNetGroupPurposeType</name>
      <anchor>a8a6</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacSymmetricNetGroupPurposeType</name>
      <anchor>a8a7</anchor>
      <init> 5</init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaGroupDef.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaGroupDef_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaGroupDef_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaHashMap.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaHashMap_8h</filename>
    <class kind="class">oaHashMap</class>
    <class kind="class">oaHashMapIter</class>
    <class kind="class">oaHashMapTbl</class>
    <member kind="define">
      <type>#define</type>
      <name>oaHashMap_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaHashMap</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaHashMap.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaHashMap_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaHashMap_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaHashSet.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaHashSet_8h</filename>
    <class kind="class">oaHashSetTbl</class>
    <class kind="class">oaKeySizedHashSet&lt; K, false &gt;</class>
    <class kind="class">oaKeySizedHashSet&lt; K, true &gt;</class>
    <class kind="class">oaKeySizedHashSetIter&lt; K, false &gt;</class>
    <class kind="class">oaKeySizedHashSetIter&lt; K, true &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaHashSet_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaKeySizedHashSet</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaHashSet.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaHashSet_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaHashSet_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaHashTbl.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaHashTbl_8h</filename>
    <class kind="class">oaHashIter</class>
    <class kind="class">oaHashTbl</class>
    <class kind="class">oaHashTblSlotId</class>
    <member kind="define">
      <type>#define</type>
      <name>oaHashTbl_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaHashTbl</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaHashTbl.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaHashTbl_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaHashTbl_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaHierProp.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaHierProp_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaHierProp.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaHierProp_8h</filename>
    <class kind="class">oaHierProp</class>
    <class kind="class">oaTraits&lt; oaHierProp &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaHierProp_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaIExceptionImpl.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaIExceptionImpl_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaIExceptionImpl.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaIExceptionImpl_8h</filename>
    <class kind="class">IExceptionImpl</class>
    <member kind="define">
      <type>#define</type>
      <name>oaIExceptionImpl_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaILockFactory.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaILockFactory_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaILockFactory.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaILockFactory_8h</filename>
    <class kind="class">ILockFactory</class>
    <member kind="define">
      <type>#define</type>
      <name>oaILockFactory_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaILockFactory.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaILockFactory_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaILockFactory_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaInterpolateType.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaInterpolateType_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaIntProp.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaIntProp_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaIntProp.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaIntProp_8h</filename>
    <class kind="class">oaIntProp</class>
    <class kind="class">oaTraits&lt; oaIntProp &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaIntProp_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaIntRangeProp.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaIntRangeProp_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaIntRangeProp.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaIntRangeProp_8h</filename>
    <class kind="class">oaIntRangeProp</class>
    <class kind="class">oaTraits&lt; oaIntRangeProp &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaIntRangeProp_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaLefDefNS.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaLefDefNS_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaLefDefNS.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaLefDefNS_8h</filename>
    <class kind="class">oaDefNS</class>
    <class kind="class">oaLefNS</class>
    <member kind="define">
      <type>#define</type>
      <name>oaLefDefNS_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaVectorName</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaLefDefNS.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaLefDefNS_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaLefDefNS_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaLefNS.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaLefNS_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaLookupTbl.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaLookupTbl_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaLookupTbl.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaLookupTbl_8h</filename>
    <class kind="class">oa1DLookupTbl</class>
    <class kind="class">oa2DLookupTbl</class>
    <class kind="class">oaExtrapolateType</class>
    <class kind="class">oaInterpolateType</class>
    <member kind="define">
      <type>#define</type>
      <name>oaLookupTbl_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumInterpolateTypes</name>
      <anchor>a1</anchor>
      <init>5</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumExtrapolateTypes</name>
      <anchor>a2</anchor>
      <init>3</init>
    </member>
    <member kind="enumeration">
      <name>oaInterpolateTypeEnum</name>
      <anchor>a12</anchor>
      <init>5</init>
    </member>
    <member kind="enumvalue">
      <name>oacSnapDownInterpolateType</name>
      <anchor>a12a4</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacSnapUpInterpolateType</name>
      <anchor>a12a5</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacLinearInterpolateType</name>
      <anchor>a12a6</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacInclusiveSnapDownInterpolateType</name>
      <anchor>a12a7</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacInclusiveSnapUpInterpolateType</name>
      <anchor>a12a8</anchor>
      <init> 4</init>
    </member>
    <member kind="enumeration">
      <name>oaExtrapolateTypeEnum</name>
      <anchor>a13</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacSnapDownExtrapolateType</name>
      <anchor>a13a9</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacSnapUpExtrapolateType</name>
      <anchor>a13a10</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacLinearExtrapolateType</name>
      <anchor>a13a11</anchor>
      <init> 2</init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaString</name>
      <anchor>a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaLookupTbl.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaLookupTbl_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaLookupTbl_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaMapFile.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaMapFile_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaMapFile.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaMapFile_8h</filename>
    <class kind="class">oaMapFile</class>
    <member kind="define">
      <type>#define</type>
      <name>oaMapFile_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaMapFileWindow</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaMapFile.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaMapFile_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaMapFile_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaMapWindow.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaMapWindow_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaMapWindow.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaMapWindow_8h</filename>
    <class kind="class">oaMapFileWindow</class>
    <class kind="class">oaMapWindow</class>
    <member kind="define">
      <type>#define</type>
      <name>oaMapWindow_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaMapFile</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaMapWindow.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaMapWindow_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaMapWindow_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaMemory.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaMemory_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaMemory.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaMemory_8h</filename>
    <class kind="class">oaMemory</class>
    <member kind="define">
      <type>#define</type>
      <name>oaMemory_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaMutex.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaMutex_8h</filename>
    <class kind="class">oaMutex</class>
    <class kind="class">oaMutexBase</class>
    <class kind="class">oaRWLock</class>
    <class kind="class">oaSpinMutex</class>
    <member kind="define">
      <type>#define</type>
      <name>oaMutexPvt_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaName.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaName_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaName.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaName_8h</filename>
    <class kind="class">oaBundleName</class>
    <class kind="class">oaName</class>
    <class kind="class">oaNameBase</class>
    <class kind="class">oaNameMem</class>
    <class kind="class">oaNameType</class>
    <class kind="class">oaScalarName</class>
    <class kind="class">oaSimpleName</class>
    <class kind="class">oaVectorBitName</class>
    <class kind="class">oaVectorName</class>
    <member kind="define">
      <type>#define</type>
      <name>oaName_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumNameTypes</name>
      <anchor>a1</anchor>
      <init>5</init>
    </member>
    <member kind="enumeration">
      <name>oaNameTypeEnum</name>
      <anchor>a8</anchor>
      <init>5</init>
    </member>
    <member kind="enumvalue">
      <name>oacEmptyNameType</name>
      <anchor>a8a3</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacScalarNameType</name>
      <anchor>a8a4</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacVectorNameType</name>
      <anchor>a8a5</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacVectorBitNameType</name>
      <anchor>a8a6</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacBundleNameType</name>
      <anchor>a8a7</anchor>
      <init> 4</init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaNameSpace</name>
      <anchor>a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaName.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaName_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaName_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaNameSpace.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaNameSpace_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaNameSpace.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaNameSpace_8h</filename>
    <class kind="class">oaNameSpace</class>
    <member kind="define">
      <type>#define</type>
      <name>oaNameSpace_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacInternalHexDelimiter</name>
      <anchor>a1</anchor>
      <init>&apos;#&apos;</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacInternalOpenBus</name>
      <anchor>a2</anchor>
      <init>&apos;[&apos;</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacInternalCloseBus</name>
      <anchor>a3</anchor>
      <init>&apos;]&apos;</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacInternalBitDelimiter</name>
      <anchor>a4</anchor>
      <init>&apos;:&apos;</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacInternalHierDelimiter</name>
      <anchor>a5</anchor>
      <init>&apos;/&apos;</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacInternalNameDelimiter</name>
      <anchor>a6</anchor>
      <init>&apos;,&apos;</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacInternalRepeat</name>
      <anchor>a7</anchor>
      <init>&apos;*&apos;</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMemberFirstInName</name>
      <anchor>a8</anchor>
      <init>0x0001U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMemberLastInName</name>
      <anchor>a9</anchor>
      <init>0x0002U</init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaVectorName</name>
      <anchor>a10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaNameSpace.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaNameSpace_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaNameSpace_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaNameType.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaNameType_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaNativeNS.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaNativeNS_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaNativeNS.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaNativeNS_8h</filename>
    <class kind="class">oaNativeNS</class>
    <member kind="define">
      <type>#define</type>
      <name>oaNativeNS_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaNativeNS.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaNativeNS_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaNativeNS_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaObject.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaObject_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaObject.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaObject_8h</filename>
    <class kind="class">oaBaseTraits</class>
    <class kind="class">oaObject</class>
    <class kind="class">oaTraits&lt; oaObject &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaObject_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaConstraintGroup</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>OA_BASE_DLL_PVT</type>
      <name>oaCollection</name>
      <anchor>a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaObject.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaObject_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaObject_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaObjectArray.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaObjectArray_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaObjectArray.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaObjectArray_8h</filename>
    <class kind="class">oaObjectArray</class>
    <member kind="define">
      <type>#define</type>
      <name>oaObjectArray_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaObjectArray.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaObjectArray_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaObjectArray_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaObserver.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaObserver_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaObserver.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaObserver_8h</filename>
    <class kind="class">oaBaseObserver</class>
    <class kind="class">oaObserver</class>
    <class kind="class">oaObserver&lt;T, V&gt;</class>
    <class kind="class">oaStdObserver</class>
    <member kind="define">
      <type>#define</type>
      <name>oaObserver_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oaObserver</name>
      <anchor>a1</anchor>
      <init>oaVersionedObserver</init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaObserver.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaObserver_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaObserver_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaOrient.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaOrient_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaOrient.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaOrient_8h</filename>
    <class kind="class">oaOrient</class>
    <member kind="define">
      <type>#define</type>
      <name>oaOrient_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumOrientEnums</name>
      <anchor>a1</anchor>
      <init>8</init>
    </member>
    <member kind="enumeration">
      <name>oaOrientEnum</name>
      <anchor>a11</anchor>
      <init>8</init>
    </member>
    <member kind="enumvalue">
      <name>oacR0</name>
      <anchor>a11a3</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacR90</name>
      <anchor>a11a4</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacR180</name>
      <anchor>a11a5</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacR270</name>
      <anchor>a11a6</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacMY</name>
      <anchor>a11a7</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacMYR90</name>
      <anchor>a11a8</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacMX</name>
      <anchor>a11a9</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacMXR90</name>
      <anchor>a11a10</anchor>
      <init> 7</init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaString</name>
      <anchor>a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaOrient.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaOrient_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaOrient_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaPackedData.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaPackedData_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaPackedData.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaPackedData_8h</filename>
    <class kind="class">oaBasePackedData</class>
    <class kind="class">oaPackedData</class>
    <member kind="define">
      <type>#define</type>
      <name>oaPackedData_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_1Byte_4</name>
      <anchor>a1</anchor>
      <init>0x7U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_2Byte_4</name>
      <anchor>a2</anchor>
      <init>0x7ffU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_3Byte_4</name>
      <anchor>a3</anchor>
      <init>0x7ffffU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_4Byte_4</name>
      <anchor>a4</anchor>
      <init>0x7ffffffU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_5Byte_4</name>
      <anchor>a5</anchor>
      <init>0xffffffffU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_1Byte_U4</name>
      <anchor>a6</anchor>
      <init>0xfU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_2Byte_U4</name>
      <anchor>a7</anchor>
      <init>0xfffU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_3Byte_U4</name>
      <anchor>a8</anchor>
      <init>0xfffffU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_4Byte_U4</name>
      <anchor>a9</anchor>
      <init>0xfffffffU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_5Byte_U4</name>
      <anchor>a10</anchor>
      <init>0xffffffffU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_1Byte_8</name>
      <anchor>a11</anchor>
      <init>0x3ULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_2Byte_8</name>
      <anchor>a12</anchor>
      <init>0x3ffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_3Byte_8</name>
      <anchor>a13</anchor>
      <init>0x3ffffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_4Byte_8</name>
      <anchor>a14</anchor>
      <init>0x3ffffffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_5Byte_8</name>
      <anchor>a15</anchor>
      <init>0x3ffffffffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_6Byte_8</name>
      <anchor>a16</anchor>
      <init>0x3ffffffffffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_7Byte_8</name>
      <anchor>a17</anchor>
      <init>0x3ffffffffffffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_8Byte_8</name>
      <anchor>a18</anchor>
      <init>0x3ffffffffffffffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_9Byte_8</name>
      <anchor>a19</anchor>
      <init>0xffffffffffffffffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_1Byte_U8</name>
      <anchor>a20</anchor>
      <init>0x7ULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_2Byte_U8</name>
      <anchor>a21</anchor>
      <init>0x7ffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_3Byte_U8</name>
      <anchor>a22</anchor>
      <init>0x7ffffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_4Byte_U8</name>
      <anchor>a23</anchor>
      <init>0x7ffffffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_5Byte_U8</name>
      <anchor>a24</anchor>
      <init>0x7ffffffffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_6Byte_U8</name>
      <anchor>a25</anchor>
      <init>0x7ffffffffffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_7Byte_U8</name>
      <anchor>a26</anchor>
      <init>0x7ffffffffffffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_8Byte_U8</name>
      <anchor>a27</anchor>
      <init>0x7ffffffffffffffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMax_9Byte_U8</name>
      <anchor>a28</anchor>
      <init>0xffffffffffffffffULL</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavMaxPackedWidth</name>
      <anchor>a29</anchor>
      <init>9</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavCodeMask4</name>
      <anchor>a30</anchor>
      <init>0x1fU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavCodeMaskU4</name>
      <anchor>a31</anchor>
      <init>0x0fU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavCodeMask8</name>
      <anchor>a32</anchor>
      <init>0x3fU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavCodeMaskU8</name>
      <anchor>a33</anchor>
      <init>0x1fU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavGridMask</name>
      <anchor>a34</anchor>
      <init>0x01U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavSizeMask4</name>
      <anchor>a35</anchor>
      <init>0x0eU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavSizeMask8</name>
      <anchor>a36</anchor>
      <init>0x1eU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavSignMask4</name>
      <anchor>a37</anchor>
      <init>0x10U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavSignMask8</name>
      <anchor>a38</anchor>
      <init>0x20U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_1Byte</name>
      <anchor>a39</anchor>
      <init>0x00U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_2Byte</name>
      <anchor>a40</anchor>
      <init>0x02U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_3Byte</name>
      <anchor>a41</anchor>
      <init>0x04U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_4Byte</name>
      <anchor>a42</anchor>
      <init>0x06U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_5Byte</name>
      <anchor>a43</anchor>
      <init>0x08U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_6Byte</name>
      <anchor>a44</anchor>
      <init>0x0aU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_7Byte</name>
      <anchor>a45</anchor>
      <init>0x0cU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_8Byte</name>
      <anchor>a46</anchor>
      <init>0x0eU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_9Byte</name>
      <anchor>a47</anchor>
      <init>0x10U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_1Byte_N_Pos</name>
      <anchor>a48</anchor>
      <init>0x00U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_1Byte_G_Pos</name>
      <anchor>a49</anchor>
      <init>0x01U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_2Byte_N_Pos</name>
      <anchor>a50</anchor>
      <init>0x02U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_2Byte_G_Pos</name>
      <anchor>a51</anchor>
      <init>0x03U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_3Byte_N_Pos</name>
      <anchor>a52</anchor>
      <init>0x04U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_3Byte_G_Pos</name>
      <anchor>a53</anchor>
      <init>0x05U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_4Byte_N_Pos</name>
      <anchor>a54</anchor>
      <init>0x06U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_4Byte_G_Pos</name>
      <anchor>a55</anchor>
      <init>0x07U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_5Byte_N_Pos</name>
      <anchor>a56</anchor>
      <init>0x08U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_5Byte_G_Pos</name>
      <anchor>a57</anchor>
      <init>0x09U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_6Byte_N_Pos</name>
      <anchor>a58</anchor>
      <init>0x0aU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_6Byte_G_Pos</name>
      <anchor>a59</anchor>
      <init>0x0bU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_7Byte_N_Pos</name>
      <anchor>a60</anchor>
      <init>0x0cU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_7Byte_G_Pos</name>
      <anchor>a61</anchor>
      <init>0x0dU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_8Byte_N_Pos</name>
      <anchor>a62</anchor>
      <init>0x0eU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_8Byte_G_Pos</name>
      <anchor>a63</anchor>
      <init>0x0fU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_9Byte_N_Pos</name>
      <anchor>a64</anchor>
      <init>0x10U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_9Byte_G_Pos</name>
      <anchor>a65</anchor>
      <init>0x11U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_1Byte_N_Neg_4</name>
      <anchor>a66</anchor>
      <init>0x10U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_1Byte_G_Neg_4</name>
      <anchor>a67</anchor>
      <init>0x11U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_2Byte_N_Neg_4</name>
      <anchor>a68</anchor>
      <init>0x12U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_2Byte_G_Neg_4</name>
      <anchor>a69</anchor>
      <init>0x13U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_3Byte_N_Neg_4</name>
      <anchor>a70</anchor>
      <init>0x14U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_3Byte_G_Neg_4</name>
      <anchor>a71</anchor>
      <init>0x15U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_4Byte_N_Neg_4</name>
      <anchor>a72</anchor>
      <init>0x16U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_4Byte_G_Neg_4</name>
      <anchor>a73</anchor>
      <init>0x17U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_5Byte_N_Neg_4</name>
      <anchor>a74</anchor>
      <init>0x18U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_5Byte_G_Neg_4</name>
      <anchor>a75</anchor>
      <init>0x19U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_1Byte_N_Neg_8</name>
      <anchor>a76</anchor>
      <init>0x20U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_1Byte_G_Neg_8</name>
      <anchor>a77</anchor>
      <init>0x21U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_2Byte_N_Neg_8</name>
      <anchor>a78</anchor>
      <init>0x22U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_2Byte_G_Neg_8</name>
      <anchor>a79</anchor>
      <init>0x23U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_3Byte_N_Neg_8</name>
      <anchor>a80</anchor>
      <init>0x24U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_3Byte_G_Neg_8</name>
      <anchor>a81</anchor>
      <init>0x25U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_4Byte_N_Neg_8</name>
      <anchor>a82</anchor>
      <init>0x26U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_4Byte_G_Neg_8</name>
      <anchor>a83</anchor>
      <init>0x27U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_5Byte_N_Neg_8</name>
      <anchor>a84</anchor>
      <init>0x28U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_5Byte_G_Neg_8</name>
      <anchor>a85</anchor>
      <init>0x29U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_6Byte_N_Neg_8</name>
      <anchor>a86</anchor>
      <init>0x2aU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_6Byte_G_Neg_8</name>
      <anchor>a87</anchor>
      <init>0x2bU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_7Byte_N_Neg_8</name>
      <anchor>a88</anchor>
      <init>0x2cU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_7Byte_G_Neg_8</name>
      <anchor>a89</anchor>
      <init>0x2dU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_8Byte_N_Neg_8</name>
      <anchor>a90</anchor>
      <init>0x2eU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_8Byte_G_Neg_8</name>
      <anchor>a91</anchor>
      <init>0x2fU</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_9Byte_N_Neg_8</name>
      <anchor>a92</anchor>
      <init>0x30U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oav_9Byte_G_Neg_8</name>
      <anchor>a93</anchor>
      <init>0x31U</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavDefaultGrid</name>
      <anchor>a94</anchor>
      <init>100</init>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a96</anchor>
      <arglist>(T &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a97</anchor>
      <arglist>(oaInt2 &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a98</anchor>
      <arglist>(oaUInt2 &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a99</anchor>
      <arglist>(oaInt4 &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a100</anchor>
      <arglist>(oaUInt4 &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a101</anchor>
      <arglist>(oaInt8 &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a102</anchor>
      <arglist>(oaUInt8 &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a103</anchor>
      <arglist>(oaFloat &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a104</anchor>
      <arglist>(oaDouble &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a105</anchor>
      <arglist>(oaComplex&lt; oaFloat &gt; &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a106</anchor>
      <arglist>(oaVector &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a107</anchor>
      <arglist>(oaPoint &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a108</anchor>
      <arglist>(oaBox &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a109</anchor>
      <arglist>(oaTimeStamp &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a110</anchor>
      <arglist>(oaIntRange &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a111</anchor>
      <arglist>(oaUInt8Range &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaPoint</name>
      <anchor>a95</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaPackedData.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaPackedData_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaPackedData_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a1</anchor>
      <arglist>(T &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a2</anchor>
      <arglist>(oaInt2 &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a3</anchor>
      <arglist>(oaUInt2 &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a4</anchor>
      <arglist>(oaInt4 &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a5</anchor>
      <arglist>(oaUInt4 &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a6</anchor>
      <arglist>(oaInt8 &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a7</anchor>
      <arglist>(oaUInt8 &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a8</anchor>
      <arglist>(oaFloat &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a9</anchor>
      <arglist>(oaDouble &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a10</anchor>
      <arglist>(oaDualInt &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a11</anchor>
      <arglist>(oaComplex&lt; oaFloat &gt; &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a12</anchor>
      <arglist>(oaVector &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a13</anchor>
      <arglist>(oaPoint &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a14</anchor>
      <arglist>(oaBox &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a15</anchor>
      <arglist>(oaTimeStamp &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a16</anchor>
      <arglist>(oaIntRange &amp;out, const oaByte *bytesIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oaSwap</name>
      <anchor>a17</anchor>
      <arglist>(oaUInt8Range &amp;out, const oaByte *bytesIn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaParam.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaParam_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaParam.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaParam_8h</filename>
    <class kind="class">oaParam</class>
    <class kind="class">oaParamArray</class>
    <class kind="class">oaParamType</class>
    <member kind="define">
      <type>#define</type>
      <name>oaParam_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumParamTypes</name>
      <anchor>a1</anchor>
      <init>7</init>
    </member>
    <member kind="enumeration">
      <name>oaParamTypeEnum</name>
      <anchor>a9</anchor>
      <init>7</init>
    </member>
    <member kind="enumvalue">
      <name>oacIntParamType</name>
      <anchor>a9a2</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacFloatParamType</name>
      <anchor>a9a3</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacStringParamType</name>
      <anchor>a9a4</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacAppParamType</name>
      <anchor>a9a5</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacDoubleParamType</name>
      <anchor>a9a6</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacBooleanParamType</name>
      <anchor>a9a7</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacTimeParamType</name>
      <anchor>a9a8</anchor>
      <init> 6</init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaParam.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaParam_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaParam_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaPlugInBase.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaPlugInBase_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaPlugInBase_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaPlugInBase.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaPlugInBase_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaPlugInBase_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaPoint.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaPoint_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaPoint.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaPoint_8h</filename>
    <class kind="class">oaPoint</class>
    <member kind="define">
      <type>#define</type>
      <name>oaPoint_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaPoint</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaPoint.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaPoint_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaPoint_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaPointArray.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaPointArray_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaPointArray.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaPointArray_8h</filename>
    <class kind="class">oaPointArray</class>
    <member kind="define">
      <type>#define</type>
      <name>oaPointArray_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaPoint</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaPointArray.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaPointArray_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaPointArray_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaProp.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaProp_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaProp.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaProp_8h</filename>
    <class kind="class">oaProp</class>
    <class kind="class">oaTraits&lt; oaProp &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaProp_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaRange.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaRange_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaRange.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaRange_8h</filename>
    <class kind="class">oaIntRange</class>
    <class kind="class">oaRange</class>
    <class kind="class">oaRangeBase</class>
    <class kind="class">oaRangeType</class>
    <class kind="class">oaUInt8Range</class>
    <member kind="define">
      <type>#define</type>
      <name>oaRange_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumRangeTypes</name>
      <anchor>a1</anchor>
      <init>8</init>
    </member>
    <member kind="enumeration">
      <name>oaRangeTypeEnum</name>
      <anchor>a11</anchor>
      <init>8</init>
    </member>
    <member kind="enumvalue">
      <name>oacLessThanRangeType</name>
      <anchor>a11a3</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacLessThanEqualRangeType</name>
      <anchor>a11a4</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacGreaterThanRangeType</name>
      <anchor>a11a5</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacGreaterThanEqualRangeType</name>
      <anchor>a11a6</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacClosedRangeType</name>
      <anchor>a11a7</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacOpenRangeType</name>
      <anchor>a11a8</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacOpenLeftRangeType</name>
      <anchor>a11a9</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacOpenRightRangeType</name>
      <anchor>a11a10</anchor>
      <init> 7</init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaString</name>
      <anchor>a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaRange.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaRange_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaRange_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaRevisionTraits.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaRevisionTraits_8h</filename>
    <class kind="class">oaRevisionTraits</class>
    <class kind="class">oaRevisionTraits&lt; oaAppDef &gt;</class>
    <class kind="class">oaRevisionTraits&lt; oaChangeMgr &gt;</class>
    <class kind="class">oaRevisionTraits&lt; oaConstraintDef &gt;</class>
    <class kind="class">oaRevisionTraits&lt; oaConstraintGroupDef &gt;</class>
    <class kind="class">oaRevisionTraits&lt; oaConstraintParamDef &gt;</class>
    <class kind="class">oaRevisionTraits&lt; oaDerivedLayerDef &gt;</class>
    <class kind="class">oaRevisionTraits&lt; oaDerivedLayerParamDef &gt;</class>
    <class kind="class">oaRevisionTraits&lt; oaDesign &gt;</class>
    <class kind="class">oaRevisionTraits&lt; oaDMData &gt;</class>
    <class kind="class">oaRevisionTraits&lt; oaGroupDef &gt;</class>
    <class kind="class">oaRevisionTraits&lt; oaLib &gt;</class>
    <class kind="class">oaRevisionTraits&lt; oaLibDefList &gt;</class>
    <class kind="class">oaRevisionTraits&lt; oaParasiticNetwork &gt;</class>
    <class kind="class">oaRevisionTraits&lt; oaTech &gt;</class>
    <class kind="class">oaRevisionTraits&lt; oaViewType &gt;</class>
    <class kind="class">oaRevisionTraits&lt; oaWafer &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaRevisionTraits_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacObserverVersion2</name>
      <anchor>a1</anchor>
      <init>1</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacObserverVersion1</name>
      <anchor>a2</anchor>
      <init>0</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacTechObserverVersion3</name>
      <anchor>a3</anchor>
      <init>2</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacTechObserverVersion2</name>
      <anchor>a4</anchor>
      <init>1</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacTechObserverVersion1</name>
      <anchor>a5</anchor>
      <init>0</init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaStdObserver</name>
      <anchor>a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaSegment.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaSegment_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaSegment.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaSegment_8h</filename>
    <class kind="class">oaSegment</class>
    <member kind="define">
      <type>#define</type>
      <name>oaSegment_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaPoint</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaSegment.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaSegment_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaSegment_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaSemaphore.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaSemaphore_8h</filename>
    <class kind="class">oaSemaphore</class>
    <member kind="define">
      <type>#define</type>
      <name>oaSemaphore_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE typedef oaInt4</type>
      <name>HANDLE</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaSemaphore.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaSemaphore_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaSemaphore_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaSession.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaSession_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaSession.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaSession_8h</filename>
    <class kind="class">oaSession</class>
    <class kind="class">oaThreadUseModel</class>
    <class kind="class">oaTraits&lt; oaSession &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaSession_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaAppObjectDef</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaSessionObject.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaSessionObject_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaSessionObject.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaSessionObject_8h</filename>
    <class kind="class">oaSessionObject</class>
    <class kind="class">oaTraits&lt; oaSessionObject &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaSessionObject_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumSessionDataTypes</name>
      <anchor>a1</anchor>
      <init>23</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumNewSessionDataTypes</name>
      <anchor>a2</anchor>
      <init>6</init>
    </member>
    <member kind="enumeration">
      <name>oaSessionDataTypeEnum</name>
      <anchor>a29</anchor>
      <init>25</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionDataType</name>
      <anchor>a29a4</anchor>
      <init> UINT_MAX</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionAppObjectDataType</name>
      <anchor>a29a5</anchor>
      <init> UINT_MAX - 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionPropDataType</name>
      <anchor>a29a6</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionGroupDataType</name>
      <anchor>a29a7</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionGroupMemDataType</name>
      <anchor>a29a8</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionAvatarDataType</name>
      <anchor>a29a9</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionValueDataType</name>
      <anchor>a29a10</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionConstraintParamDefDataType</name>
      <anchor>a29a11</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionConstraintParamDataType</name>
      <anchor>a29a12</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionConstraintDefDataType</name>
      <anchor>a29a13</anchor>
      <init> 7</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionConstraintDataType</name>
      <anchor>a29a14</anchor>
      <init> 8</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionConstraintGroupDataType</name>
      <anchor>a29a15</anchor>
      <init> 9</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionConstraintGroupMemDataType</name>
      <anchor>a29a16</anchor>
      <init> 10</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionConstraintGroupHeaderDataType</name>
      <anchor>a29a17</anchor>
      <init> 11</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibDefListDataType</name>
      <anchor>a29a18</anchor>
      <init> 12</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibDefListMemDataType</name>
      <anchor>a29a19</anchor>
      <init> 13</init>
    </member>
    <member kind="enumvalue">
      <name>oacViewTypeDataType</name>
      <anchor>a29a20</anchor>
      <init> 14</init>
    </member>
    <member kind="enumvalue">
      <name>oacAppDefDataType</name>
      <anchor>a29a21</anchor>
      <init> 15</init>
    </member>
    <member kind="enumvalue">
      <name>oacAppObjectDefDataType</name>
      <anchor>a29a22</anchor>
      <init> 16</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionFeatureDataType</name>
      <anchor>a29a23</anchor>
      <init> 17</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionFeaturePolicyDataType</name>
      <anchor>a29a24</anchor>
      <init> 18</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionDerivedLayerParamDefDataType</name>
      <anchor>a29a25</anchor>
      <init> 19</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionDerivedLayerDefDataType</name>
      <anchor>a29a26</anchor>
      <init> 20</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionGroupDefDataType</name>
      <anchor>a29a27</anchor>
      <init> 21</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionConstraintGroupDefDataType</name>
      <anchor>a29a28</anchor>
      <init> 22</init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaSession</name>
      <anchor>a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaSimpleConstraint.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaSimpleConstraint_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaSimpleConstraint.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaSimpleConstraint_8h</filename>
    <class kind="class">oaSimpleConstraint</class>
    <class kind="class">oaTraits&lt; oaSimpleConstraint &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaSimpleConstraint_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaSimpleConstraintDef</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaSocket.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaSocket_8h</filename>
    <class kind="class">oaClientSocket</class>
    <class kind="class">oaFDSet</class>
    <class kind="class">oaServerSocket</class>
    <class kind="class">oaSocket</class>
    <member kind="define">
      <type>#define</type>
      <name>oaSocket_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacHostNameLength</name>
      <anchor>a1</anchor>
      <init>MAXHOSTNAMELEN</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacInvalidSocket</name>
      <anchor>a2</anchor>
      <init>UINT_MAX</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacInvalidSocketAddress</name>
      <anchor>a3</anchor>
      <init>UINT_MAX</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oacSocketError</name>
      <anchor>a4</anchor>
      <init>-1</init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaString</name>
      <anchor>a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaSocket.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaSocket_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaSocket_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaSpefNS.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaSpefNS_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaSpefNS.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaSpefNS_8h</filename>
    <class kind="class">oaSpefNS</class>
    <member kind="define">
      <type>#define</type>
      <name>oaSpefNS_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaSpefNS.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaSpefNS_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaSpefNS_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaSpfNS.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaSpfNS_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaSpfNS.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaSpfNS_8h</filename>
    <class kind="class">oaSpfNS</class>
    <member kind="define">
      <type>#define</type>
      <name>oaSpfNS_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaSpfNS.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaSpfNS_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaSpfNS_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaSpiceNS.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaSpiceNS_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaSpiceNS.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaSpiceNS_8h</filename>
    <class kind="class">oaSpiceNS</class>
    <member kind="define">
      <type>#define</type>
      <name>oaSpiceNS_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaSpiceNS.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaSpiceNS_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaSpiceNS_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaString.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaString_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaString.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaString_8h</filename>
    <class kind="class">oaString</class>
    <member kind="define">
      <type>#define</type>
      <name>oaString_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API oaString</type>
      <name>operator+</name>
      <anchor>a2</anchor>
      <arglist>(const oaString &amp;s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API oaBoolean</type>
      <name>operator&lt;</name>
      <anchor>a3</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API oaBoolean</type>
      <name>operator&lt;</name>
      <anchor>a4</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API oaBoolean</type>
      <name>operator&gt;</name>
      <anchor>a5</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API oaBoolean</type>
      <name>operator&gt;</name>
      <anchor>a6</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API oaBoolean</type>
      <name>operator==</name>
      <anchor>a7</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API oaBoolean</type>
      <name>operator==</name>
      <anchor>a8</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API oaBoolean</type>
      <name>operator&lt;=</name>
      <anchor>a9</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API oaBoolean</type>
      <name>operator&lt;=</name>
      <anchor>a10</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API oaBoolean</type>
      <name>operator&gt;=</name>
      <anchor>a11</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API oaBoolean</type>
      <name>operator&gt;=</name>
      <anchor>a12</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API oaBoolean</type>
      <name>operator!=</name>
      <anchor>a13</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="function">
      <type>OA_BASE_DLL_API oaBoolean</type>
      <name>operator!=</name>
      <anchor>a14</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaString</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaString.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaString_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaString_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oaStrCopy</name>
      <anchor>a1</anchor>
      <init>strcpy(_dst, _src)</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oaStrNCopy</name>
      <anchor>a2</anchor>
      <init>strncpy(_dst, _src, _len)</init>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator&lt;</name>
      <anchor>a3</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator&lt;</name>
      <anchor>a4</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator&gt;</name>
      <anchor>a5</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator&gt;</name>
      <anchor>a6</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a7</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a8</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator&lt;=</name>
      <anchor>a9</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator&lt;=</name>
      <anchor>a10</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator&gt;=</name>
      <anchor>a11</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator&gt;=</name>
      <anchor>a12</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a13</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a14</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaStringArray.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaStringArray_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaStringArray.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaStringArray_8h</filename>
    <class kind="class">oaStringArray</class>
    <member kind="define">
      <type>#define</type>
      <name>oaStringArray_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaStringProp.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaStringProp_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaStringProp.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaStringProp_8h</filename>
    <class kind="class">oaStringProp</class>
    <class kind="class">oaTraits&lt; oaStringProp &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaStringProp_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaTimeProp.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaTimeProp_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaTimeProp.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaTimeProp_8h</filename>
    <class kind="class">oaTimeProp</class>
    <class kind="class">oaTraits&lt; oaTimeProp &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaTimeProp_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaTimer.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaTimer_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaTimer.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaTimer_8h</filename>
    <class kind="class">oaSystemTime</class>
    <class kind="class">oaTimer</class>
    <member kind="define">
      <type>#define</type>
      <name>oaTimer_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaTimer.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaTimer_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaTimer_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaTimeRangeProp.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaTimeRangeProp_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaTimeRangeProp.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaTimeRangeProp_8h</filename>
    <class kind="class">oaTimeRangeProp</class>
    <class kind="class">oaTraits&lt; oaTimeRangeProp &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>oaTimeRangeProp_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaTimeStamp.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaTimeStamp_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaTimeStamp.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaTimeStamp_8h</filename>
    <class kind="class">oaTimeStamp</class>
    <member kind="define">
      <type>#define</type>
      <name>oaTimeStamp_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a1</anchor>
      <arglist>(const oaTimeStamp &amp;s1, const oaUInt4 s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a2</anchor>
      <arglist>(const oaUInt4 s1, const oaTimeStamp &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a3</anchor>
      <arglist>(const oaTimeStamp &amp;s1, const oaUInt4 s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a4</anchor>
      <arglist>(const oaUInt4 s1, const oaTimeStamp &amp;s2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaTimeStamp.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaTimeStamp_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaTimeStamp_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a1</anchor>
      <arglist>(const oaTimeStamp &amp;s1, const oaUInt4 s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a2</anchor>
      <arglist>(const oaUInt4 s1, const oaTimeStamp &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a3</anchor>
      <arglist>(const oaTimeStamp &amp;s1, const oaUInt4 s2)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a4</anchor>
      <arglist>(const oaUInt4 s1, const oaTimeStamp &amp;s2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaTransform.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaTransform_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaTransform.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaTransform_8h</filename>
    <class kind="class">oaTransform</class>
    <member kind="define">
      <type>#define</type>
      <name>oaTransform_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaTransform.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaTransform_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaTransform_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaType.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaType_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaType.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaType_8h</filename>
    <class kind="class">oaAbstractType</class>
    <class kind="class">oaCategory</class>
    <class kind="class">oaDataModelModType</class>
    <class kind="class">oaDBType</class>
    <class kind="class">oaManagedType</class>
    <class kind="class">oaType</class>
    <member kind="define">
      <type>#define</type>
      <name>oaType_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumObjectTypes</name>
      <anchor>a1</anchor>
      <init>287</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavAbstractTypeMask</name>
      <anchor>a2</anchor>
      <init>0x80000000</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumObjectAbstractTypes</name>
      <anchor>a3</anchor>
      <init>72</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumDBTypes</name>
      <anchor>a4</anchor>
      <init>6</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumCategories</name>
      <anchor>a5</anchor>
      <init>18</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumDataModelModTypes</name>
      <anchor>a6</anchor>
      <init>4</init>
    </member>
    <member kind="enumeration">
      <name>oaTypeEnum</name>
      <anchor>a397</anchor>
      <init>287</init>
    </member>
    <member kind="enumvalue">
      <name>oacUnknownType</name>
      <anchor>a397a8</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionType</name>
      <anchor>a397a9</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibType</name>
      <anchor>a397a10</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacTechType</name>
      <anchor>a397a11</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacDesignType</name>
      <anchor>a397a12</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacWaferType</name>
      <anchor>a397a13</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacBlockType</name>
      <anchor>a397a14</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacModuleType</name>
      <anchor>a397a15</anchor>
      <init> 7</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccurrenceType</name>
      <anchor>a397a16</anchor>
      <init> 8</init>
    </member>
    <member kind="enumvalue">
      <name>oacLPPHeaderType</name>
      <anchor>a397a17</anchor>
      <init> 9</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerHeaderType</name>
      <anchor>a397a18</anchor>
      <init> 10</init>
    </member>
    <member kind="enumvalue">
      <name>oacArcType</name>
      <anchor>a397a19</anchor>
      <init> 11</init>
    </member>
    <member kind="enumvalue">
      <name>oacDonutType</name>
      <anchor>a397a20</anchor>
      <init> 12</init>
    </member>
    <member kind="enumvalue">
      <name>oacDotType</name>
      <anchor>a397a21</anchor>
      <init> 13</init>
    </member>
    <member kind="enumvalue">
      <name>oacEllipseType</name>
      <anchor>a397a22</anchor>
      <init> 14</init>
    </member>
    <member kind="enumvalue">
      <name>oacLineType</name>
      <anchor>a397a23</anchor>
      <init> 15</init>
    </member>
    <member kind="enumvalue">
      <name>oacPathType</name>
      <anchor>a397a24</anchor>
      <init> 16</init>
    </member>
    <member kind="enumvalue">
      <name>oacPathSegType</name>
      <anchor>a397a25</anchor>
      <init> 17</init>
    </member>
    <member kind="enumvalue">
      <name>oacPolygonType</name>
      <anchor>a397a26</anchor>
      <init> 18</init>
    </member>
    <member kind="enumvalue">
      <name>oacRectType</name>
      <anchor>a397a27</anchor>
      <init> 19</init>
    </member>
    <member kind="enumvalue">
      <name>oacTextType</name>
      <anchor>a397a28</anchor>
      <init> 20</init>
    </member>
    <member kind="enumvalue">
      <name>oacEvalTextType</name>
      <anchor>a397a29</anchor>
      <init> 21</init>
    </member>
    <member kind="enumvalue">
      <name>oacPropDisplayType</name>
      <anchor>a397a30</anchor>
      <init> 22</init>
    </member>
    <member kind="enumvalue">
      <name>oacAttrDisplayType</name>
      <anchor>a397a31</anchor>
      <init> 23</init>
    </member>
    <member kind="enumvalue">
      <name>oacTextOverrideType</name>
      <anchor>a397a32</anchor>
      <init> 24</init>
    </member>
    <member kind="enumvalue">
      <name>oacInstPropDisplayType</name>
      <anchor>a397a33</anchor>
      <init> 25</init>
    </member>
    <member kind="enumvalue">
      <name>oacInstAttrDisplayType</name>
      <anchor>a397a34</anchor>
      <init> 26</init>
    </member>
    <member kind="enumvalue">
      <name>oacRouteType</name>
      <anchor>a397a35</anchor>
      <init> 27</init>
    </member>
    <member kind="enumvalue">
      <name>oacMarkerType</name>
      <anchor>a397a36</anchor>
      <init> 28</init>
    </member>
    <member kind="enumvalue">
      <name>oacTrackPatternType</name>
      <anchor>a397a37</anchor>
      <init> 29</init>
    </member>
    <member kind="enumvalue">
      <name>oacRowType</name>
      <anchor>a397a38</anchor>
      <init> 30</init>
    </member>
    <member kind="enumvalue">
      <name>oacRowHeaderType</name>
      <anchor>a397a39</anchor>
      <init> 31</init>
    </member>
    <member kind="enumvalue">
      <name>oacPinType</name>
      <anchor>a397a40</anchor>
      <init> 32</init>
    </member>
    <member kind="enumvalue">
      <name>oacClusterType</name>
      <anchor>a397a41</anchor>
      <init> 33</init>
    </member>
    <member kind="enumvalue">
      <name>oacAreaBoundaryType</name>
      <anchor>a397a42</anchor>
      <init> 34</init>
    </member>
    <member kind="enumvalue">
      <name>oacPRBoundaryType</name>
      <anchor>a397a43</anchor>
      <init> 35</init>
    </member>
    <member kind="enumvalue">
      <name>oacSnapBoundaryType</name>
      <anchor>a397a44</anchor>
      <init> 36</init>
    </member>
    <member kind="enumvalue">
      <name>oacClusterBoundaryType</name>
      <anchor>a397a45</anchor>
      <init> 37</init>
    </member>
    <member kind="enumvalue">
      <name>oacAreaBlockageType</name>
      <anchor>a397a46</anchor>
      <init> 38</init>
    </member>
    <member kind="enumvalue">
      <name>oacAreaHaloType</name>
      <anchor>a397a47</anchor>
      <init> 39</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerBlockageType</name>
      <anchor>a397a48</anchor>
      <init> 40</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerHaloType</name>
      <anchor>a397a49</anchor>
      <init> 41</init>
    </member>
    <member kind="enumvalue">
      <name>oacSteinerType</name>
      <anchor>a397a50</anchor>
      <init> 42</init>
    </member>
    <member kind="enumvalue">
      <name>oacStdViaType</name>
      <anchor>a397a51</anchor>
      <init> 43</init>
    </member>
    <member kind="enumvalue">
      <name>oacCustomViaType</name>
      <anchor>a397a52</anchor>
      <init> 44</init>
    </member>
    <member kind="enumvalue">
      <name>oacStdViaHeaderType</name>
      <anchor>a397a53</anchor>
      <init> 45</init>
    </member>
    <member kind="enumvalue">
      <name>oacCustomViaHeaderType</name>
      <anchor>a397a54</anchor>
      <init> 46</init>
    </member>
    <member kind="enumvalue">
      <name>oacGCellPatternType</name>
      <anchor>a397a55</anchor>
      <init> 47</init>
    </member>
    <member kind="enumvalue">
      <name>oacCMapType</name>
      <anchor>a397a56</anchor>
      <init> 48</init>
    </member>
    <member kind="enumvalue">
      <name>oacArrayInstType</name>
      <anchor>a397a57</anchor>
      <init> 49</init>
    </member>
    <member kind="enumvalue">
      <name>oacScalarInstType</name>
      <anchor>a397a58</anchor>
      <init> 50</init>
    </member>
    <member kind="enumvalue">
      <name>oacVectorInstType</name>
      <anchor>a397a59</anchor>
      <init> 51</init>
    </member>
    <member kind="enumvalue">
      <name>oacVectorInstBitType</name>
      <anchor>a397a60</anchor>
      <init> 52</init>
    </member>
    <member kind="enumvalue">
      <name>oacVectorInstDefType</name>
      <anchor>a397a61</anchor>
      <init> 53</init>
    </member>
    <member kind="enumvalue">
      <name>oacBundleNetType</name>
      <anchor>a397a62</anchor>
      <init> 54</init>
    </member>
    <member kind="enumvalue">
      <name>oacBusNetType</name>
      <anchor>a397a63</anchor>
      <init> 55</init>
    </member>
    <member kind="enumvalue">
      <name>oacBusNetBitType</name>
      <anchor>a397a64</anchor>
      <init> 56</init>
    </member>
    <member kind="enumvalue">
      <name>oacScalarNetType</name>
      <anchor>a397a65</anchor>
      <init> 57</init>
    </member>
    <member kind="enumvalue">
      <name>oacBusNetDefType</name>
      <anchor>a397a66</anchor>
      <init> 58</init>
    </member>
    <member kind="enumvalue">
      <name>oacBundleTermType</name>
      <anchor>a397a67</anchor>
      <init> 59</init>
    </member>
    <member kind="enumvalue">
      <name>oacBusTermType</name>
      <anchor>a397a68</anchor>
      <init> 60</init>
    </member>
    <member kind="enumvalue">
      <name>oacBusTermBitType</name>
      <anchor>a397a69</anchor>
      <init> 61</init>
    </member>
    <member kind="enumvalue">
      <name>oacScalarTermType</name>
      <anchor>a397a70</anchor>
      <init> 62</init>
    </member>
    <member kind="enumvalue">
      <name>oacBusTermDefType</name>
      <anchor>a397a71</anchor>
      <init> 63</init>
    </member>
    <member kind="enumvalue">
      <name>oacInstTermType</name>
      <anchor>a397a72</anchor>
      <init> 64</init>
    </member>
    <member kind="enumvalue">
      <name>oacNetConnectDefType</name>
      <anchor>a397a73</anchor>
      <init> 65</init>
    </member>
    <member kind="enumvalue">
      <name>oacTermConnectDefType</name>
      <anchor>a397a74</anchor>
      <init> 66</init>
    </member>
    <member kind="enumvalue">
      <name>oacAssignValueType</name>
      <anchor>a397a75</anchor>
      <init> 67</init>
    </member>
    <member kind="enumvalue">
      <name>oacAssignAssignmentType</name>
      <anchor>a397a76</anchor>
      <init> 68</init>
    </member>
    <member kind="enumvalue">
      <name>oacScanChainType</name>
      <anchor>a397a77</anchor>
      <init> 69</init>
    </member>
    <member kind="enumvalue">
      <name>oacScanChainInstType</name>
      <anchor>a397a78</anchor>
      <init> 70</init>
    </member>
    <member kind="enumvalue">
      <name>oacScanChainSetType</name>
      <anchor>a397a79</anchor>
      <init> 71</init>
    </member>
    <member kind="enumvalue">
      <name>oacInstHeaderType</name>
      <anchor>a397a80</anchor>
      <init> 72</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccScalarInstType</name>
      <anchor>a397a81</anchor>
      <init> 73</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccVectorInstType</name>
      <anchor>a397a82</anchor>
      <init> 74</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccVectorInstBitType</name>
      <anchor>a397a83</anchor>
      <init> 75</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccVectorInstDefType</name>
      <anchor>a397a84</anchor>
      <init> 76</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccBundleNetType</name>
      <anchor>a397a85</anchor>
      <init> 77</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccBusNetType</name>
      <anchor>a397a86</anchor>
      <init> 78</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccBusNetBitType</name>
      <anchor>a397a87</anchor>
      <init> 79</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccScalarNetType</name>
      <anchor>a397a88</anchor>
      <init> 80</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccBusNetDefType</name>
      <anchor>a397a89</anchor>
      <init> 81</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccBundleTermType</name>
      <anchor>a397a90</anchor>
      <init> 82</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccBusTermType</name>
      <anchor>a397a91</anchor>
      <init> 83</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccBusTermBitType</name>
      <anchor>a397a92</anchor>
      <init> 84</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccScalarTermType</name>
      <anchor>a397a93</anchor>
      <init> 85</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccBusTermDefType</name>
      <anchor>a397a94</anchor>
      <init> 86</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccInstTermType</name>
      <anchor>a397a95</anchor>
      <init> 87</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccNetConnectDefType</name>
      <anchor>a397a96</anchor>
      <init> 88</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccTermConnectDefType</name>
      <anchor>a397a97</anchor>
      <init> 89</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccAssignValueType</name>
      <anchor>a397a98</anchor>
      <init> 90</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccAssignAssignmentType</name>
      <anchor>a397a99</anchor>
      <init> 91</init>
    </member>
    <member kind="enumvalue">
      <name>oacObsoleteType92</name>
      <anchor>a397a100</anchor>
      <init> 92</init>
    </member>
    <member kind="enumvalue">
      <name>oacObsoleteType93</name>
      <anchor>a397a101</anchor>
      <init> 93</init>
    </member>
    <member kind="enumvalue">
      <name>oacObsoleteType94</name>
      <anchor>a397a102</anchor>
      <init> 94</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccInstHeaderType</name>
      <anchor>a397a103</anchor>
      <init> 95</init>
    </member>
    <member kind="enumvalue">
      <name>oacModScalarInstType</name>
      <anchor>a397a104</anchor>
      <init> 96</init>
    </member>
    <member kind="enumvalue">
      <name>oacModVectorInstType</name>
      <anchor>a397a105</anchor>
      <init> 97</init>
    </member>
    <member kind="enumvalue">
      <name>oacModVectorInstBitType</name>
      <anchor>a397a106</anchor>
      <init> 98</init>
    </member>
    <member kind="enumvalue">
      <name>oacModVectorInstDefType</name>
      <anchor>a397a107</anchor>
      <init> 99</init>
    </member>
    <member kind="enumvalue">
      <name>oacModBundleNetType</name>
      <anchor>a397a108</anchor>
      <init> 100</init>
    </member>
    <member kind="enumvalue">
      <name>oacModBusNetType</name>
      <anchor>a397a109</anchor>
      <init> 101</init>
    </member>
    <member kind="enumvalue">
      <name>oacModBusNetBitType</name>
      <anchor>a397a110</anchor>
      <init> 102</init>
    </member>
    <member kind="enumvalue">
      <name>oacModScalarNetType</name>
      <anchor>a397a111</anchor>
      <init> 103</init>
    </member>
    <member kind="enumvalue">
      <name>oacModBusNetDefType</name>
      <anchor>a397a112</anchor>
      <init> 104</init>
    </member>
    <member kind="enumvalue">
      <name>oacModBundleTermType</name>
      <anchor>a397a113</anchor>
      <init> 105</init>
    </member>
    <member kind="enumvalue">
      <name>oacModBusTermType</name>
      <anchor>a397a114</anchor>
      <init> 106</init>
    </member>
    <member kind="enumvalue">
      <name>oacModBusTermBitType</name>
      <anchor>a397a115</anchor>
      <init> 107</init>
    </member>
    <member kind="enumvalue">
      <name>oacModScalarTermType</name>
      <anchor>a397a116</anchor>
      <init> 108</init>
    </member>
    <member kind="enumvalue">
      <name>oacModBusTermDefType</name>
      <anchor>a397a117</anchor>
      <init> 109</init>
    </member>
    <member kind="enumvalue">
      <name>oacModInstTermType</name>
      <anchor>a397a118</anchor>
      <init> 110</init>
    </member>
    <member kind="enumvalue">
      <name>oacModNetConnectDefType</name>
      <anchor>a397a119</anchor>
      <init> 111</init>
    </member>
    <member kind="enumvalue">
      <name>oacModTermConnectDefType</name>
      <anchor>a397a120</anchor>
      <init> 112</init>
    </member>
    <member kind="enumvalue">
      <name>oacModAssignValueType</name>
      <anchor>a397a121</anchor>
      <init> 113</init>
    </member>
    <member kind="enumvalue">
      <name>oacModAssignAssignmentType</name>
      <anchor>a397a122</anchor>
      <init> 114</init>
    </member>
    <member kind="enumvalue">
      <name>oacObsoleteType115</name>
      <anchor>a397a123</anchor>
      <init> 115</init>
    </member>
    <member kind="enumvalue">
      <name>oacObsoleteType116</name>
      <anchor>a397a124</anchor>
      <init> 116</init>
    </member>
    <member kind="enumvalue">
      <name>oacObsoleteType117</name>
      <anchor>a397a125</anchor>
      <init> 117</init>
    </member>
    <member kind="enumvalue">
      <name>oacModInstHeaderType</name>
      <anchor>a397a126</anchor>
      <init> 118</init>
    </member>
    <member kind="enumvalue">
      <name>oacModModuleScalarInstType</name>
      <anchor>a397a127</anchor>
      <init> 119</init>
    </member>
    <member kind="enumvalue">
      <name>oacModModuleVectorInstType</name>
      <anchor>a397a128</anchor>
      <init> 120</init>
    </member>
    <member kind="enumvalue">
      <name>oacModModuleVectorInstBitType</name>
      <anchor>a397a129</anchor>
      <init> 121</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccArrayInstType</name>
      <anchor>a397a130</anchor>
      <init> 122</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccModuleScalarInstType</name>
      <anchor>a397a131</anchor>
      <init> 123</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccModuleVectorInstType</name>
      <anchor>a397a132</anchor>
      <init> 124</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccModuleVectorInstBitType</name>
      <anchor>a397a133</anchor>
      <init> 125</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccModuleInstHeaderType</name>
      <anchor>a397a134</anchor>
      <init> 126</init>
    </member>
    <member kind="enumvalue">
      <name>oacModModuleInstHeaderType</name>
      <anchor>a397a135</anchor>
      <init> 127</init>
    </member>
    <member kind="enumvalue">
      <name>oacAnalysisPointType</name>
      <anchor>a397a136</anchor>
      <init> 128</init>
    </member>
    <member kind="enumvalue">
      <name>oacAnalysisOpPointType</name>
      <anchor>a397a137</anchor>
      <init> 129</init>
    </member>
    <member kind="enumvalue">
      <name>oacOpPointHeaderType</name>
      <anchor>a397a138</anchor>
      <init> 130</init>
    </member>
    <member kind="enumvalue">
      <name>oacReducedDriverType</name>
      <anchor>a397a139</anchor>
      <init> 131</init>
    </member>
    <member kind="enumvalue">
      <name>oacParasiticNetworkType</name>
      <anchor>a397a140</anchor>
      <init> 132</init>
    </member>
    <member kind="enumvalue">
      <name>oacSubNetworkType</name>
      <anchor>a397a141</anchor>
      <init> 133</init>
    </member>
    <member kind="enumvalue">
      <name>oacSubNetworkMemType</name>
      <anchor>a397a142</anchor>
      <init> 134</init>
    </member>
    <member kind="enumvalue">
      <name>oacResistorType</name>
      <anchor>a397a143</anchor>
      <init> 135</init>
    </member>
    <member kind="enumvalue">
      <name>oacCouplingCapType</name>
      <anchor>a397a144</anchor>
      <init> 136</init>
    </member>
    <member kind="enumvalue">
      <name>oacInductorType</name>
      <anchor>a397a145</anchor>
      <init> 137</init>
    </member>
    <member kind="enumvalue">
      <name>oacDiodeType</name>
      <anchor>a397a146</anchor>
      <init> 138</init>
    </member>
    <member kind="enumvalue">
      <name>oacSeriesRLType</name>
      <anchor>a397a147</anchor>
      <init> 139</init>
    </member>
    <member kind="enumvalue">
      <name>oacMutualInductorType</name>
      <anchor>a397a148</anchor>
      <init> 140</init>
    </member>
    <member kind="enumvalue">
      <name>oacExternalDeviceType</name>
      <anchor>a397a149</anchor>
      <init> 141</init>
    </member>
    <member kind="enumvalue">
      <name>oacNodeType</name>
      <anchor>a397a150</anchor>
      <init> 142</init>
    </member>
    <member kind="enumvalue">
      <name>oacGroundedNodeType</name>
      <anchor>a397a151</anchor>
      <init> 143</init>
    </member>
    <member kind="enumvalue">
      <name>oacGuideType</name>
      <anchor>a397a152</anchor>
      <init> 144</init>
    </member>
    <member kind="enumvalue">
      <name>oacLumpedElmoreType</name>
      <anchor>a397a153</anchor>
      <init> 145</init>
    </member>
    <member kind="enumvalue">
      <name>oacPiElmoreType</name>
      <anchor>a397a154</anchor>
      <init> 146</init>
    </member>
    <member kind="enumvalue">
      <name>oacPiPoleResidueType</name>
      <anchor>a397a155</anchor>
      <init> 147</init>
    </member>
    <member kind="enumvalue">
      <name>oacElmoreType</name>
      <anchor>a397a156</anchor>
      <init> 148</init>
    </member>
    <member kind="enumvalue">
      <name>oacPoleResidueType</name>
      <anchor>a397a157</anchor>
      <init> 149</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccArcType</name>
      <anchor>a397a158</anchor>
      <init> 150</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccDonutType</name>
      <anchor>a397a159</anchor>
      <init> 151</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccDotType</name>
      <anchor>a397a160</anchor>
      <init> 152</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccEllipseType</name>
      <anchor>a397a161</anchor>
      <init> 153</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccLineType</name>
      <anchor>a397a162</anchor>
      <init> 154</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccPathType</name>
      <anchor>a397a163</anchor>
      <init> 155</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccPathSegType</name>
      <anchor>a397a164</anchor>
      <init> 156</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccPolygonType</name>
      <anchor>a397a165</anchor>
      <init> 157</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccRectType</name>
      <anchor>a397a166</anchor>
      <init> 158</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccTextType</name>
      <anchor>a397a167</anchor>
      <init> 159</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccEvalTextType</name>
      <anchor>a397a168</anchor>
      <init> 160</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccPropDisplayType</name>
      <anchor>a397a169</anchor>
      <init> 161</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccAttrDisplayType</name>
      <anchor>a397a170</anchor>
      <init> 162</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccTextOverrideType</name>
      <anchor>a397a171</anchor>
      <init> 163</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccInstPropDisplayType</name>
      <anchor>a397a172</anchor>
      <init> 164</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccInstAttrDisplayType</name>
      <anchor>a397a173</anchor>
      <init> 165</init>
    </member>
    <member kind="enumvalue">
      <name>oacIntPropType</name>
      <anchor>a397a174</anchor>
      <init> 166</init>
    </member>
    <member kind="enumvalue">
      <name>oacIntRangePropType</name>
      <anchor>a397a175</anchor>
      <init> 167</init>
    </member>
    <member kind="enumvalue">
      <name>oacFloatPropType</name>
      <anchor>a397a176</anchor>
      <init> 168</init>
    </member>
    <member kind="enumvalue">
      <name>oacFloatRangePropType</name>
      <anchor>a397a177</anchor>
      <init> 169</init>
    </member>
    <member kind="enumvalue">
      <name>oacStringPropType</name>
      <anchor>a397a178</anchor>
      <init> 170</init>
    </member>
    <member kind="enumvalue">
      <name>oacAppPropType</name>
      <anchor>a397a179</anchor>
      <init> 171</init>
    </member>
    <member kind="enumvalue">
      <name>oacDoublePropType</name>
      <anchor>a397a180</anchor>
      <init> 172</init>
    </member>
    <member kind="enumvalue">
      <name>oacDoubleRangePropType</name>
      <anchor>a397a181</anchor>
      <init> 173</init>
    </member>
    <member kind="enumvalue">
      <name>oacBooleanPropType</name>
      <anchor>a397a182</anchor>
      <init> 174</init>
    </member>
    <member kind="enumvalue">
      <name>oacHierPropType</name>
      <anchor>a397a183</anchor>
      <init> 175</init>
    </member>
    <member kind="enumvalue">
      <name>oacTimePropType</name>
      <anchor>a397a184</anchor>
      <init> 176</init>
    </member>
    <member kind="enumvalue">
      <name>oacTimeRangePropType</name>
      <anchor>a397a185</anchor>
      <init> 177</init>
    </member>
    <member kind="enumvalue">
      <name>oacEnumPropType</name>
      <anchor>a397a186</anchor>
      <init> 178</init>
    </member>
    <member kind="enumvalue">
      <name>oacGroupType</name>
      <anchor>a397a187</anchor>
      <init> 179</init>
    </member>
    <member kind="enumvalue">
      <name>oacGroupMemberType</name>
      <anchor>a397a188</anchor>
      <init> 180</init>
    </member>
    <member kind="enumvalue">
      <name>oacPhysicalLayerType</name>
      <anchor>a397a189</anchor>
      <init> 181</init>
    </member>
    <member kind="enumvalue">
      <name>oacDerivedLayerType</name>
      <anchor>a397a190</anchor>
      <init> 182</init>
    </member>
    <member kind="enumvalue">
      <name>oacSizedLayerType</name>
      <anchor>a397a191</anchor>
      <init> 183</init>
    </member>
    <member kind="enumvalue">
      <name>oacPurposeType</name>
      <anchor>a397a192</anchor>
      <init> 184</init>
    </member>
    <member kind="enumvalue">
      <name>oacScalarSiteDefType</name>
      <anchor>a397a193</anchor>
      <init> 185</init>
    </member>
    <member kind="enumvalue">
      <name>oacArraySiteDefType</name>
      <anchor>a397a194</anchor>
      <init> 186</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaSpecType</name>
      <anchor>a397a195</anchor>
      <init> 187</init>
    </member>
    <member kind="enumvalue">
      <name>oacStdViaDefType</name>
      <anchor>a397a196</anchor>
      <init> 188</init>
    </member>
    <member kind="enumvalue">
      <name>oacCustomViaDefType</name>
      <anchor>a397a197</anchor>
      <init> 189</init>
    </member>
    <member kind="enumvalue">
      <name>oacOpPointType</name>
      <anchor>a397a198</anchor>
      <init> 190</init>
    </member>
    <member kind="enumvalue">
      <name>oacAnalysisLibType</name>
      <anchor>a397a199</anchor>
      <init> 191</init>
    </member>
    <member kind="enumvalue">
      <name>oacAppObjectType</name>
      <anchor>a397a200</anchor>
      <init> 192</init>
    </member>
    <member kind="enumvalue">
      <name>oacCellType</name>
      <anchor>a397a201</anchor>
      <init> 193</init>
    </member>
    <member kind="enumvalue">
      <name>oacViewType</name>
      <anchor>a397a202</anchor>
      <init> 194</init>
    </member>
    <member kind="enumvalue">
      <name>oacCellViewType</name>
      <anchor>a397a203</anchor>
      <init> 195</init>
    </member>
    <member kind="enumvalue">
      <name>oacDMFileType</name>
      <anchor>a397a204</anchor>
      <init> 196</init>
    </member>
    <member kind="enumvalue">
      <name>oacWaferDescType</name>
      <anchor>a397a205</anchor>
      <init> 197</init>
    </member>
    <member kind="enumvalue">
      <name>oacFrameType</name>
      <anchor>a397a206</anchor>
      <init> 198</init>
    </member>
    <member kind="enumvalue">
      <name>oacReticleType</name>
      <anchor>a397a207</anchor>
      <init> 199</init>
    </member>
    <member kind="enumvalue">
      <name>oacReticleRefType</name>
      <anchor>a397a208</anchor>
      <init> 200</init>
    </member>
    <member kind="enumvalue">
      <name>oacWaferFeatureType</name>
      <anchor>a397a209</anchor>
      <init> 201</init>
    </member>
    <member kind="enumvalue">
      <name>oacStepperMapType</name>
      <anchor>a397a210</anchor>
      <init> 202</init>
    </member>
    <member kind="enumvalue">
      <name>oacImageType</name>
      <anchor>a397a211</anchor>
      <init> 203</init>
    </member>
    <member kind="enumvalue">
      <name>oacFrameInstType</name>
      <anchor>a397a212</anchor>
      <init> 204</init>
    </member>
    <member kind="enumvalue">
      <name>oacDesignInstType</name>
      <anchor>a397a213</anchor>
      <init> 205</init>
    </member>
    <member kind="enumvalue">
      <name>oacViewTypeType</name>
      <anchor>a397a214</anchor>
      <init> 206</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintParamDefType</name>
      <anchor>a397a215</anchor>
      <init> 207</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintParamType</name>
      <anchor>a397a216</anchor>
      <init> 208</init>
    </member>
    <member kind="enumvalue">
      <name>oacSimpleConstraintDefType</name>
      <anchor>a397a217</anchor>
      <init> 209</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerConstraintDefType</name>
      <anchor>a397a218</anchor>
      <init> 210</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerPairConstraintDefType</name>
      <anchor>a397a219</anchor>
      <init> 211</init>
    </member>
    <member kind="enumvalue">
      <name>oacSimpleConstraintType</name>
      <anchor>a397a220</anchor>
      <init> 212</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerConstraintType</name>
      <anchor>a397a221</anchor>
      <init> 213</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerPairConstraintType</name>
      <anchor>a397a222</anchor>
      <init> 214</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintGroupType</name>
      <anchor>a397a223</anchor>
      <init> 215</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintGroupMemType</name>
      <anchor>a397a224</anchor>
      <init> 216</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintGroupHeaderType</name>
      <anchor>a397a225</anchor>
      <init> 217</init>
    </member>
    <member kind="enumvalue">
      <name>oacBooleanValueType</name>
      <anchor>a397a226</anchor>
      <init> 218</init>
    </member>
    <member kind="enumvalue">
      <name>oacIntValueType</name>
      <anchor>a397a227</anchor>
      <init> 219</init>
    </member>
    <member kind="enumvalue">
      <name>oacFltValueType</name>
      <anchor>a397a228</anchor>
      <init> 220</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerArrayValueType</name>
      <anchor>a397a229</anchor>
      <init> 221</init>
    </member>
    <member kind="enumvalue">
      <name>oacInt1DTblValueType</name>
      <anchor>a397a230</anchor>
      <init> 222</init>
    </member>
    <member kind="enumvalue">
      <name>oacFlt1DTblValueType</name>
      <anchor>a397a231</anchor>
      <init> 223</init>
    </member>
    <member kind="enumvalue">
      <name>oacInt2DTblValueType</name>
      <anchor>a397a232</anchor>
      <init> 224</init>
    </member>
    <member kind="enumvalue">
      <name>oacFlt2DTblValueType</name>
      <anchor>a397a233</anchor>
      <init> 225</init>
    </member>
    <member kind="enumvalue">
      <name>oacIntFltTblValueType</name>
      <anchor>a397a234</anchor>
      <init> 226</init>
    </member>
    <member kind="enumvalue">
      <name>oacFltIntFltTblValueType</name>
      <anchor>a397a235</anchor>
      <init> 227</init>
    </member>
    <member kind="enumvalue">
      <name>oacDualIntValueType</name>
      <anchor>a397a236</anchor>
      <init> 228</init>
    </member>
    <member kind="enumvalue">
      <name>oacDualInt1DTblValueType</name>
      <anchor>a397a237</anchor>
      <init> 229</init>
    </member>
    <member kind="enumvalue">
      <name>oacBoxArrayValueType</name>
      <anchor>a397a238</anchor>
      <init> 230</init>
    </member>
    <member kind="enumvalue">
      <name>oacValueArrayValueType</name>
      <anchor>a397a239</anchor>
      <init> 231</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaDefArrayValueType</name>
      <anchor>a397a240</anchor>
      <init> 232</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerValueType</name>
      <anchor>a397a241</anchor>
      <init> 233</init>
    </member>
    <member kind="enumvalue">
      <name>oacAntennaRatioValueType</name>
      <anchor>a397a242</anchor>
      <init> 234</init>
    </member>
    <member kind="enumvalue">
      <name>oacAntennaRatioArrayValueType</name>
      <anchor>a397a243</anchor>
      <init> 235</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaDef2DTblValueType</name>
      <anchor>a397a244</anchor>
      <init> 236</init>
    </member>
    <member kind="enumvalue">
      <name>oacIntAppDefType</name>
      <anchor>a397a245</anchor>
      <init> 237</init>
    </member>
    <member kind="enumvalue">
      <name>oacFloatAppDefType</name>
      <anchor>a397a246</anchor>
      <init> 238</init>
    </member>
    <member kind="enumvalue">
      <name>oacStringAppDefType</name>
      <anchor>a397a247</anchor>
      <init> 239</init>
    </member>
    <member kind="enumvalue">
      <name>oacIntraPointerAppDefType</name>
      <anchor>a397a248</anchor>
      <init> 240</init>
    </member>
    <member kind="enumvalue">
      <name>oacInterPointerAppDefType</name>
      <anchor>a397a249</anchor>
      <init> 241</init>
    </member>
    <member kind="enumvalue">
      <name>oacDataAppDefType</name>
      <anchor>a397a250</anchor>
      <init> 242</init>
    </member>
    <member kind="enumvalue">
      <name>oacVarDataAppDefType</name>
      <anchor>a397a251</anchor>
      <init> 243</init>
    </member>
    <member kind="enumvalue">
      <name>oacTimeAppDefType</name>
      <anchor>a397a252</anchor>
      <init> 244</init>
    </member>
    <member kind="enumvalue">
      <name>oacDoubleAppDefType</name>
      <anchor>a397a253</anchor>
      <init> 245</init>
    </member>
    <member kind="enumvalue">
      <name>oacVoidPointerAppDefType</name>
      <anchor>a397a254</anchor>
      <init> 246</init>
    </member>
    <member kind="enumvalue">
      <name>oacBooleanAppDefType</name>
      <anchor>a397a255</anchor>
      <init> 247</init>
    </member>
    <member kind="enumvalue">
      <name>oacAppObjectDefType</name>
      <anchor>a397a256</anchor>
      <init> 248</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibDefListType</name>
      <anchor>a397a257</anchor>
      <init> 249</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibDefType</name>
      <anchor>a397a258</anchor>
      <init> 250</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibDefListRefType</name>
      <anchor>a397a259</anchor>
      <init> 251</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibDMDataType</name>
      <anchor>a397a260</anchor>
      <init> 252</init>
    </member>
    <member kind="enumvalue">
      <name>oacCellDMDataType</name>
      <anchor>a397a261</anchor>
      <init> 253</init>
    </member>
    <member kind="enumvalue">
      <name>oacViewDMDataType</name>
      <anchor>a397a262</anchor>
      <init> 254</init>
    </member>
    <member kind="enumvalue">
      <name>oacCellViewDMDataType</name>
      <anchor>a397a263</anchor>
      <init> 255</init>
    </member>
    <member kind="enumvalue">
      <name>oacFeatureType</name>
      <anchor>a397a264</anchor>
      <init> 256</init>
    </member>
    <member kind="enumvalue">
      <name>oacFigGroupType</name>
      <anchor>a397a265</anchor>
      <init> 257</init>
    </member>
    <member kind="enumvalue">
      <name>oacFigGroupMemType</name>
      <anchor>a397a266</anchor>
      <init> 258</init>
    </member>
    <member kind="enumvalue">
      <name>oacTechHeaderType</name>
      <anchor>a397a267</anchor>
      <init> 259</init>
    </member>
    <member kind="enumvalue">
      <name>oacTechLayerHeaderType</name>
      <anchor>a397a268</anchor>
      <init> 260</init>
    </member>
    <member kind="enumvalue">
      <name>oacTechViaDefHeaderType</name>
      <anchor>a397a269</anchor>
      <init> 261</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerArrayConstraintDefType</name>
      <anchor>a397a270</anchor>
      <init> 262</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerArrayConstraintType</name>
      <anchor>a397a271</anchor>
      <init> 263</init>
    </member>
    <member kind="enumvalue">
      <name>oacUInt8ValueType</name>
      <anchor>a397a272</anchor>
      <init> 264</init>
    </member>
    <member kind="enumvalue">
      <name>oacIntDualIntArrayTblValueType</name>
      <anchor>a397a273</anchor>
      <init> 265</init>
    </member>
    <member kind="enumvalue">
      <name>oacIntRangeValueType</name>
      <anchor>a397a274</anchor>
      <init> 266</init>
    </member>
    <member kind="enumvalue">
      <name>oacUInt8RangeValueType</name>
      <anchor>a397a275</anchor>
      <init> 267</init>
    </member>
    <member kind="enumvalue">
      <name>oacDerivedLayerParamDefType</name>
      <anchor>a397a276</anchor>
      <init> 268</init>
    </member>
    <member kind="enumvalue">
      <name>oacDerivedLayerParamType</name>
      <anchor>a397a277</anchor>
      <init> 269</init>
    </member>
    <member kind="enumvalue">
      <name>oacDerivedLayerDefType</name>
      <anchor>a397a278</anchor>
      <init> 270</init>
    </member>
    <member kind="enumvalue">
      <name>oacPurposeValueType</name>
      <anchor>a397a279</anchor>
      <init> 271</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintGroupDefType</name>
      <anchor>a397a280</anchor>
      <init> 272</init>
    </member>
    <member kind="enumvalue">
      <name>oacStdViaVariantType</name>
      <anchor>a397a281</anchor>
      <init> 273</init>
    </member>
    <member kind="enumvalue">
      <name>oacCustomViaVariantType</name>
      <anchor>a397a282</anchor>
      <init> 274</init>
    </member>
    <member kind="enumvalue">
      <name>oacTechViaVariantHeaderType</name>
      <anchor>a397a283</anchor>
      <init> 275</init>
    </member>
    <member kind="enumvalue">
      <name>oacDesignViaVariantHeaderType</name>
      <anchor>a397a284</anchor>
      <init> 276</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaTopologyArrayValueType</name>
      <anchor>a397a285</anchor>
      <init> 277</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaTopology2DTblValueType</name>
      <anchor>a397a286</anchor>
      <init> 278</init>
    </member>
    <member kind="enumvalue">
      <name>oacStringValueType</name>
      <anchor>a397a287</anchor>
      <init> 279</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerRangeBlockageType</name>
      <anchor>a397a288</anchor>
      <init> 280</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerRangeHaloType</name>
      <anchor>a397a289</anchor>
      <init> 281</init>
    </member>
    <member kind="enumvalue">
      <name>oacIntRangeArrayValueType</name>
      <anchor>a397a290</anchor>
      <init> 282</init>
    </member>
    <member kind="enumvalue">
      <name>oacIntRangeArray1DTblValueType</name>
      <anchor>a397a291</anchor>
      <init> 283</init>
    </member>
    <member kind="enumvalue">
      <name>oacIntRangeArray2DTblValueType</name>
      <anchor>a397a292</anchor>
      <init> 284</init>
    </member>
    <member kind="enumvalue">
      <name>oacFlatGroupDefType</name>
      <anchor>a397a293</anchor>
      <init> 285</init>
    </member>
    <member kind="enumvalue">
      <name>oacHierGroupDefType</name>
      <anchor>a397a294</anchor>
      <init> 286</init>
    </member>
    <member kind="enumeration">
      <name>oaAbstractTypeEnum</name>
      <anchor>a398</anchor>
      <init>72</init>
    </member>
    <member kind="enumvalue">
      <name>oacDesignObjectType</name>
      <anchor>a398a295</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacDeviceType</name>
      <anchor>a398a296</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacReducedModelType</name>
      <anchor>a398a297</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacBlockObjectType</name>
      <anchor>a398a298</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacAssignmentType</name>
      <anchor>a398a299</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacConnectDefType</name>
      <anchor>a398a300</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacFigType</name>
      <anchor>a398a301</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacNetType</name>
      <anchor>a398a302</anchor>
      <init> 7</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccShapeType</name>
      <anchor>a398a303</anchor>
      <init> 8</init>
    </member>
    <member kind="enumvalue">
      <name>oacRefHeaderType</name>
      <anchor>a398a304</anchor>
      <init> 9</init>
    </member>
    <member kind="enumvalue">
      <name>oacTermType</name>
      <anchor>a398a305</anchor>
      <init> 10</init>
    </member>
    <member kind="enumvalue">
      <name>oacStdDeviceType</name>
      <anchor>a398a306</anchor>
      <init> 11</init>
    </member>
    <member kind="enumvalue">
      <name>oacBlockageType</name>
      <anchor>a398a307</anchor>
      <init> 12</init>
    </member>
    <member kind="enumvalue">
      <name>oacBoundaryType</name>
      <anchor>a398a308</anchor>
      <init> 13</init>
    </member>
    <member kind="enumvalue">
      <name>oacConnFigType</name>
      <anchor>a398a309</anchor>
      <init> 14</init>
    </member>
    <member kind="enumvalue">
      <name>oacBitNetType</name>
      <anchor>a398a310</anchor>
      <init> 15</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccTextDisplayType</name>
      <anchor>a398a311</anchor>
      <init> 16</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaHeaderType</name>
      <anchor>a398a312</anchor>
      <init> 17</init>
    </member>
    <member kind="enumvalue">
      <name>oacBitTermType</name>
      <anchor>a398a313</anchor>
      <init> 18</init>
    </member>
    <member kind="enumvalue">
      <name>oacPinFigType</name>
      <anchor>a398a314</anchor>
      <init> 19</init>
    </member>
    <member kind="enumvalue">
      <name>oacRefType</name>
      <anchor>a398a315</anchor>
      <init> 20</init>
    </member>
    <member kind="enumvalue">
      <name>oacShapeType</name>
      <anchor>a398a316</anchor>
      <init> 21</init>
    </member>
    <member kind="enumvalue">
      <name>oacTextDisplayType</name>
      <anchor>a398a317</anchor>
      <init> 22</init>
    </member>
    <member kind="enumvalue">
      <name>oacInstType</name>
      <anchor>a398a318</anchor>
      <init> 23</init>
    </member>
    <member kind="enumvalue">
      <name>oacBitInstType</name>
      <anchor>a398a319</anchor>
      <init> 24</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaType</name>
      <anchor>a398a320</anchor>
      <init> 25</init>
    </member>
    <member kind="enumvalue">
      <name>oacModObjectType</name>
      <anchor>a398a321</anchor>
      <init> 26</init>
    </member>
    <member kind="enumvalue">
      <name>oacModAssignmentType</name>
      <anchor>a398a322</anchor>
      <init> 27</init>
    </member>
    <member kind="enumvalue">
      <name>oacModConnectDefType</name>
      <anchor>a398a323</anchor>
      <init> 28</init>
    </member>
    <member kind="enumvalue">
      <name>oacModTermType</name>
      <anchor>a398a324</anchor>
      <init> 29</init>
    </member>
    <member kind="enumvalue">
      <name>oacModInstType</name>
      <anchor>a398a325</anchor>
      <init> 30</init>
    </member>
    <member kind="enumvalue">
      <name>oacModDesignInstType</name>
      <anchor>a398a326</anchor>
      <init> 31</init>
    </member>
    <member kind="enumvalue">
      <name>oacModModuleInstType</name>
      <anchor>a398a327</anchor>
      <init> 32</init>
    </member>
    <member kind="enumvalue">
      <name>oacModBitInstType</name>
      <anchor>a398a328</anchor>
      <init> 33</init>
    </member>
    <member kind="enumvalue">
      <name>oacModModuleBitInstType</name>
      <anchor>a398a329</anchor>
      <init> 34</init>
    </member>
    <member kind="enumvalue">
      <name>oacModNetType</name>
      <anchor>a398a330</anchor>
      <init> 35</init>
    </member>
    <member kind="enumvalue">
      <name>oacModBitNetType</name>
      <anchor>a398a331</anchor>
      <init> 36</init>
    </member>
    <member kind="enumvalue">
      <name>oacModBitTermType</name>
      <anchor>a398a332</anchor>
      <init> 37</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccObjectType</name>
      <anchor>a398a333</anchor>
      <init> 38</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccInstType</name>
      <anchor>a398a334</anchor>
      <init> 39</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccNetType</name>
      <anchor>a398a335</anchor>
      <init> 40</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccBitNetType</name>
      <anchor>a398a336</anchor>
      <init> 41</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccTermType</name>
      <anchor>a398a337</anchor>
      <init> 42</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccBitTermType</name>
      <anchor>a398a338</anchor>
      <init> 43</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccAssignmentType</name>
      <anchor>a398a339</anchor>
      <init> 44</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccConnectDefType</name>
      <anchor>a398a340</anchor>
      <init> 45</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccDesignInstType</name>
      <anchor>a398a341</anchor>
      <init> 46</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccModuleInstType</name>
      <anchor>a398a342</anchor>
      <init> 47</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccBitInstType</name>
      <anchor>a398a343</anchor>
      <init> 48</init>
    </member>
    <member kind="enumvalue">
      <name>oacOccModuleBitInstType</name>
      <anchor>a398a344</anchor>
      <init> 49</init>
    </member>
    <member kind="enumvalue">
      <name>oacObjectType</name>
      <anchor>a398a345</anchor>
      <init> 50</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintType</name>
      <anchor>a398a346</anchor>
      <init> 51</init>
    </member>
    <member kind="enumvalue">
      <name>oacPropType</name>
      <anchor>a398a347</anchor>
      <init> 52</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionObjectType</name>
      <anchor>a398a348</anchor>
      <init> 53</init>
    </member>
    <member kind="enumvalue">
      <name>oacValueType</name>
      <anchor>a398a349</anchor>
      <init> 54</init>
    </member>
    <member kind="enumvalue">
      <name>oacAppDefType</name>
      <anchor>a398a350</anchor>
      <init> 55</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintDefType</name>
      <anchor>a398a351</anchor>
      <init> 56</init>
    </member>
    <member kind="enumvalue">
      <name>oacDMDataType</name>
      <anchor>a398a352</anchor>
      <init> 57</init>
    </member>
    <member kind="enumvalue">
      <name>oacDMObjectType</name>
      <anchor>a398a353</anchor>
      <init> 58</init>
    </member>
    <member kind="enumvalue">
      <name>oacDMContainerType</name>
      <anchor>a398a354</anchor>
      <init> 59</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibDefListMemType</name>
      <anchor>a398a355</anchor>
      <init> 60</init>
    </member>
    <member kind="enumvalue">
      <name>oacTechObjectType</name>
      <anchor>a398a356</anchor>
      <init> 61</init>
    </member>
    <member kind="enumvalue">
      <name>oacLayerType</name>
      <anchor>a398a357</anchor>
      <init> 62</init>
    </member>
    <member kind="enumvalue">
      <name>oacSiteDefType</name>
      <anchor>a398a358</anchor>
      <init> 63</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaDefType</name>
      <anchor>a398a359</anchor>
      <init> 64</init>
    </member>
    <member kind="enumvalue">
      <name>oacWaferObjectType</name>
      <anchor>a398a360</anchor>
      <init> 65</init>
    </member>
    <member kind="enumvalue">
      <name>oacAbstractTextType</name>
      <anchor>a398a361</anchor>
      <init> 66</init>
    </member>
    <member kind="enumvalue">
      <name>oacAbstractNodeType</name>
      <anchor>a398a362</anchor>
      <init> 67</init>
    </member>
    <member kind="enumvalue">
      <name>oacAbstractOccTextType</name>
      <anchor>a398a363</anchor>
      <init> 68</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaVariantType</name>
      <anchor>a398a364</anchor>
      <init> 69</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaVariantHeaderType</name>
      <anchor>a398a365</anchor>
      <init> 70</init>
    </member>
    <member kind="enumvalue">
      <name>oacGroupDefType</name>
      <anchor>a398a366</anchor>
      <init> 71</init>
    </member>
    <member kind="enumeration">
      <name>oaDBTypeEnum</name>
      <anchor>a399</anchor>
      <init>8</init>
    </member>
    <member kind="enumvalue">
      <name>oacFutureDBType</name>
      <anchor>a399a367</anchor>
      <init> UINT_MAX - 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacBaseDBType</name>
      <anchor>a399a368</anchor>
      <init> UINT_MAX</init>
    </member>
    <member kind="enumvalue">
      <name>oacDesignDBType</name>
      <anchor>a399a369</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacTechDBType</name>
      <anchor>a399a370</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacLibDBType</name>
      <anchor>a399a371</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacWaferDBType</name>
      <anchor>a399a372</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacSessionDBType</name>
      <anchor>a399a373</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacDMDataDBType</name>
      <anchor>a399a374</anchor>
      <init> 5</init>
    </member>
    <member kind="enumeration">
      <name>oaCategoryEnum</name>
      <anchor>a400</anchor>
      <init>18</init>
    </member>
    <member kind="enumvalue">
      <name>oacFutureCategory</name>
      <anchor>a400a375</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacConstraintCategory</name>
      <anchor>a400a376</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacValueCategory</name>
      <anchor>a400a377</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacAnnotationCategory</name>
      <anchor>a400a378</anchor>
      <init> 3</init>
    </member>
    <member kind="enumvalue">
      <name>oacApplicationDefinedCategory</name>
      <anchor>a400a379</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>oacNameCategory</name>
      <anchor>a400a380</anchor>
      <init> 5</init>
    </member>
    <member kind="enumvalue">
      <name>oacObserverCategory</name>
      <anchor>a400a381</anchor>
      <init> 6</init>
    </member>
    <member kind="enumvalue">
      <name>oacDesignManagementCategory</name>
      <anchor>a400a382</anchor>
      <init> 7</init>
    </member>
    <member kind="enumvalue">
      <name>oacTechCategory</name>
      <anchor>a400a383</anchor>
      <init> 8</init>
    </member>
    <member kind="enumvalue">
      <name>oacWaferCategory</name>
      <anchor>a400a384</anchor>
      <init> 9</init>
    </member>
    <member kind="enumvalue">
      <name>oacDesignHierarchyCategory</name>
      <anchor>a400a385</anchor>
      <init> 10</init>
    </member>
    <member kind="enumvalue">
      <name>oacGeometryCategory</name>
      <anchor>a400a386</anchor>
      <init> 11</init>
    </member>
    <member kind="enumvalue">
      <name>oacPlaceAndRouteCategory</name>
      <anchor>a400a387</anchor>
      <init> 12</init>
    </member>
    <member kind="enumvalue">
      <name>oacConnectivityCategory</name>
      <anchor>a400a388</anchor>
      <init> 13</init>
    </member>
    <member kind="enumvalue">
      <name>oacParasiticsCategory</name>
      <anchor>a400a389</anchor>
      <init> 14</init>
    </member>
    <member kind="enumvalue">
      <name>oacPlugInCategory</name>
      <anchor>a400a390</anchor>
      <init> 15</init>
    </member>
    <member kind="enumvalue">
      <name>oacGroupManagementCategory</name>
      <anchor>a400a391</anchor>
      <init> 16</init>
    </member>
    <member kind="enumvalue">
      <name>oacViaVariantCategory</name>
      <anchor>a400a392</anchor>
      <init> 17</init>
    </member>
    <member kind="enumeration">
      <name>oaDataModelModTypeEnum</name>
      <anchor>a401</anchor>
      <init>4</init>
    </member>
    <member kind="enumvalue">
      <name>oacFutureDataModelModType</name>
      <anchor>a401a393</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacAdditionDataModelModType</name>
      <anchor>a401a394</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacRemovalDataModelModType</name>
      <anchor>a401a395</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>oacChangeDataModelModType</name>
      <anchor>a401a396</anchor>
      <init> 3</init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaString</name>
      <anchor>a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaType.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaType_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaType_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaUnixNS.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaUnixNS_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaUnixNS.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaUnixNS_8h</filename>
    <class kind="class">oaUnixNS</class>
    <member kind="define">
      <type>#define</type>
      <name>oaUnixNS_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaUnixNS.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaUnixNS_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaUnixNS_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaValue.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaValue_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaValue.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaValue_8h</filename>
    <class kind="class">oaBooleanValue</class>
    <class kind="class">oaBoxArray</class>
    <class kind="class">oaBoxArrayValue</class>
    <class kind="class">oaDualInt</class>
    <class kind="class">oaDualInt1DTblValue</class>
    <class kind="class">oaDualIntArray</class>
    <class kind="class">oaDualIntValue</class>
    <class kind="class">oaFlt1DTblValue</class>
    <class kind="class">oaFlt2DTblValue</class>
    <class kind="class">oaFltIntFltTblValue</class>
    <class kind="class">oaFltValue</class>
    <class kind="class">oaGateOrientationType</class>
    <class kind="class">oaInt1DTblValue</class>
    <class kind="class">oaInt2DTblValue</class>
    <class kind="class">oaIntDualIntArrayTblValue</class>
    <class kind="class">oaIntFltTblValue</class>
    <class kind="class">oaIntRangeArray</class>
    <class kind="class">oaIntRangeArray1DTblValue</class>
    <class kind="class">oaIntRangeArray2DTblValue</class>
    <class kind="class">oaIntRangeArrayValue</class>
    <class kind="class">oaIntRangeValue</class>
    <class kind="class">oaIntValue</class>
    <class kind="class">oaShapeAngleType</class>
    <class kind="class">oaStringValue</class>
    <class kind="class">oaTraits&lt; oaBooleanValue &gt;</class>
    <class kind="class">oaTraits&lt; oaBoxArrayValue &gt;</class>
    <class kind="class">oaTraits&lt; oaDualInt1DTblValue &gt;</class>
    <class kind="class">oaTraits&lt; oaDualIntValue &gt;</class>
    <class kind="class">oaTraits&lt; oaFlt1DTblValue &gt;</class>
    <class kind="class">oaTraits&lt; oaFlt2DTblValue &gt;</class>
    <class kind="class">oaTraits&lt; oaFltIntFltTblValue &gt;</class>
    <class kind="class">oaTraits&lt; oaFltValue &gt;</class>
    <class kind="class">oaTraits&lt; oaInt1DTblValue &gt;</class>
    <class kind="class">oaTraits&lt; oaInt2DTblValue &gt;</class>
    <class kind="class">oaTraits&lt; oaIntDualIntArrayTblValue &gt;</class>
    <class kind="class">oaTraits&lt; oaIntFltTblValue &gt;</class>
    <class kind="class">oaTraits&lt; oaIntRangeArray1DTblValue &gt;</class>
    <class kind="class">oaTraits&lt; oaIntRangeArray2DTblValue &gt;</class>
    <class kind="class">oaTraits&lt; oaIntRangeArrayValue &gt;</class>
    <class kind="class">oaTraits&lt; oaIntRangeValue &gt;</class>
    <class kind="class">oaTraits&lt; oaIntValue &gt;</class>
    <class kind="class">oaTraits&lt; oaStringValue &gt;</class>
    <class kind="class">oaTraits&lt; oaUInt8RangeValue &gt;</class>
    <class kind="class">oaTraits&lt; oaUInt8Value &gt;</class>
    <class kind="class">oaTraits&lt; oaValue &gt;</class>
    <class kind="class">oaTraits&lt; oaValueArrayValue &gt;</class>
    <class kind="class">oaUInt8RangeValue</class>
    <class kind="class">oaUInt8Value</class>
    <class kind="class">oaValue</class>
    <class kind="class">oaValueArray</class>
    <class kind="class">oaValueArrayValue</class>
    <member kind="define">
      <type>#define</type>
      <name>oaValue_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumGateOrientatationTypes</name>
      <anchor>a1</anchor>
      <init>3</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavNumShapeAngleTypes</name>
      <anchor>a2</anchor>
      <init>3</init>
    </member>
    <member kind="enumeration">
      <name>oaGateOrientationTypeEnum</name>
      <anchor>a10</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacAnyGateOrientationType</name>
      <anchor>a10a4</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacHorizontalGateOrientationType</name>
      <anchor>a10a5</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacVerticalGateOrientationType</name>
      <anchor>a10a6</anchor>
      <init> 2</init>
    </member>
    <member kind="enumeration">
      <name>oaShapeAngleTypeEnum</name>
      <anchor>a11</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>oacAllShapeAngleType</name>
      <anchor>a11a7</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacDiagonalAndOrthogonalShapeAngleType</name>
      <anchor>a11a8</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>oacOrthogonalOnlyShapeAngleType</name>
      <anchor>a11a9</anchor>
      <init> 2</init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaBox</name>
      <anchor>a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaValue.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaValue_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaValue_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaVector.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaVector_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaVector.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaVector_8h</filename>
    <class kind="class">oaVector</class>
    <member kind="define">
      <type>#define</type>
      <name>oaVector_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaPoint</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaVector.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaVector_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaVector_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaVerilogNS.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaVerilogNS_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaVerilogNS.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaVerilogNS_8h</filename>
    <class kind="class">oaVerilogNS</class>
    <member kind="define">
      <type>#define</type>
      <name>oaVerilogNS_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaKeywordTbl</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaVerilogNS.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaVerilogNS_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaVerilogNS_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaVhdlNS.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaVhdlNS_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaVhdlNS.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaVhdlNS_8h</filename>
    <class kind="class">oaVhdlNS</class>
    <member kind="define">
      <type>#define</type>
      <name>oaVhdlNS_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaKeywordTbl</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaVhdlNS.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaVhdlNS_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaVhdlNS_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaWinNS.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaWinNS_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaWinNS.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaWinNS_8h</filename>
    <class kind="class">oaWinNS</class>
    <member kind="define">
      <type>#define</type>
      <name>oaWinNS_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaKeywordTbl</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaWinNS.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaWinNS_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaWinNS_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>oaXYTree.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>oaXYTree_8dox</filename>
  </compound>
  <compound kind="file">
    <name>oaXYTree.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaXYTree_8h</filename>
    <class kind="class">oaXYTree</class>
    <class kind="class">oaXYTreeNode</class>
    <class kind="class">oaXYTreeProd</class>
    <class kind="class">oaXYTreeRec</class>
    <member kind="define">
      <type>#define</type>
      <name>oaXYTree_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavXYTreeNodeBBoxIsInvalid</name>
      <anchor>a1</anchor>
      <init>0x80000000u</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavXYTreeNodeIsHorizontal</name>
      <anchor>a2</anchor>
      <init>0x40000000u</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavXYTreeNodeSplitHasFailed</name>
      <anchor>a3</anchor>
      <init>0x40000000u</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>oavXYTreeNodeMidChildMask</name>
      <anchor>a4</anchor>
      <init>0x3fffffffu</init>
    </member>
    <member kind="variable">
      <type>BEGIN_OA_NAMESPACE class</type>
      <name>oaXYTree</name>
      <anchor>a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>oaXYTree.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>oaXYTree_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>oaXYTree_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="function">
      <type>oaInt4</type>
      <name>limitedDifference</name>
      <anchor>a5</anchor>
      <arglist>(oaInt4 a, oaUInt4 b)</arglist>
    </member>
    <member kind="function">
      <type>oaInt4</type>
      <name>limitedSum</name>
      <anchor>a6</anchor>
      <arglist>(oaInt4 a, oaUInt4 b)</arglist>
    </member>
    <member kind="variable">
      <type>const oaUInt4</type>
      <name>oacXYTreeNodeSplitTop</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const oaUInt4</type>
      <name>oacXYTreeNodeSplitBottom</name>
      <anchor>a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const oaUInt4</type>
      <name>oacXYTreeNodeSplitLeft</name>
      <anchor>a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const oaUInt4</type>
      <name>oacXYTreeNodeSplitRight</name>
      <anchor>a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sdAttribute.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdAttribute_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdAttribute.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdAttribute_8h</filename>
    <class kind="class">sdAttribute</class>
    <class kind="class">sdAttributeActionType</class>
    <class kind="class">sdAttributeContainerType</class>
    <member kind="define">
      <type>#define</type>
      <name>sdAttribute_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumAttributeActionTypes</name>
      <anchor>a1</anchor>
      <init>4</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumAttributeContainerTypes</name>
      <anchor>a2</anchor>
      <init>3</init>
    </member>
    <member kind="enumeration">
      <name>sdAttributeActionTypeEnum</name>
      <anchor>a11</anchor>
      <init>4</init>
    </member>
    <member kind="enumvalue">
      <name>sdcGetAttributeActionType</name>
      <anchor>a11a4</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcSetAttributeActionType</name>
      <anchor>a11a5</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>sdcUnsetAttributeActionType</name>
      <anchor>a11a6</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInitAttributeActionType</name>
      <anchor>a11a7</anchor>
      <init> 8</init>
    </member>
    <member kind="enumeration">
      <name>sdAttributeContainerTypeEnum</name>
      <anchor>a12</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>sdcSingleAttributeContainerType</name>
      <anchor>a12a8</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcArrayAttributeContainerType</name>
      <anchor>a12a9</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcCollectionAttributeContainerType</name>
      <anchor>a12a10</anchor>
      <init> 2</init>
    </member>
    <member kind="variable">
      <type>BEGIN_SD_NAMESPACE class</type>
      <name>sdObject</name>
      <anchor>a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sdAttribute.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdAttribute_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>sdAttribute_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdBase.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdBase_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdBase.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdBase_8h</filename>
    <class kind="class">sdBase</class>
    <class kind="class">sdObjectType</class>
    <member kind="define">
      <type>#define</type>
      <name>sdBase_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumObjectTypes</name>
      <anchor>a1</anchor>
      <init>4</init>
    </member>
    <member kind="enumeration">
      <name>sdObjectTypeEnum</name>
      <anchor>a7</anchor>
      <init>4</init>
    </member>
    <member kind="enumvalue">
      <name>sdcValueObjectType</name>
      <anchor>a7a3</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcAttributeObjectType</name>
      <anchor>a7a4</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcRelationshipObjectType</name>
      <anchor>a7a5</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>sdcObjectObjectType</name>
      <anchor>a7a6</anchor>
      <init> 3</init>
    </member>
    <member kind="variable">
      <type>BEGIN_SD_NAMESPACE class</type>
      <name>sdNameSpace</name>
      <anchor>a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sdBase.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdBase_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>sdBase_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdBaseTypes.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdBaseTypes_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>sdBaseTypes_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BEGIN_SD_NAMESPACE</name>
      <anchor>a1</anchor>
      <init>namespace SchemaDefinition_1 {</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>END_SD_NAMESPACE</name>
      <anchor>a2</anchor>
      <init>}</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USE_SD_NAMESPACE</name>
      <anchor>a3</anchor>
      <init>using namespace SchemaDefinition_1;</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_DLL_API</name>
      <anchor>a4</anchor>
      <init>OA_BASE_DLL_API</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_DLL_PVT</name>
      <anchor>a5</anchor>
      <init>OA_BASE_DLL_PVT</init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdException.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdException_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdException.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdException_8h</filename>
    <class kind="class">sdError</class>
    <class kind="class">sdException</class>
    <member kind="define">
      <type>#define</type>
      <name>sdException_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdException.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdException_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>sdException_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdMsgs.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdMsgs_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>sdMsgs_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvMsgIdStartValue</name>
      <anchor>a1</anchor>
      <init>7000</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumMsgIds</name>
      <anchor>a2</anchor>
      <init>26</init>
    </member>
    <member kind="enumeration">
      <name>sdMsgIds</name>
      <anchor>a29</anchor>
      <init>26</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidObjectTypeName</name>
      <anchor>a29a3</anchor>
      <init> sdvMsgIdStartValue</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidValueSubTypeName</name>
      <anchor>a29a4</anchor>
      <init> 7001</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidAttributeActionTypeName</name>
      <anchor>a29a5</anchor>
      <init> 7002</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidAttributeContainerTypeName</name>
      <anchor>a29a6</anchor>
      <init> 7003</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidRelationshipOrderingTypeName</name>
      <anchor>a29a7</anchor>
      <init> 7004</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidRelationshipAssociationTypeName</name>
      <anchor>a29a8</anchor>
      <init> 7005</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidRelationshipMultiplicityTypeName</name>
      <anchor>a29a9</anchor>
      <init> 7006</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidRelationshipActionTypeName</name>
      <anchor>a29a10</anchor>
      <init> 7007</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidRelationshipSubTypeName</name>
      <anchor>a29a11</anchor>
      <init> 7008</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInvalidRelationshipContainerTypeName</name>
      <anchor>a29a12</anchor>
      <init> 7009</init>
    </member>
    <member kind="enumvalue">
      <name>sdcObjectAttributeInDifferentNamespaces</name>
      <anchor>a29a13</anchor>
      <init> 7010</init>
    </member>
    <member kind="enumvalue">
      <name>sdcObjectRelationshipInDifferentNamespaces</name>
      <anchor>a29a14</anchor>
      <init> 7011</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateValueIdInNamespace</name>
      <anchor>a29a15</anchor>
      <init> 7012</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateValueNameInNamespace</name>
      <anchor>a29a16</anchor>
      <init> 7013</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateAttributeIdInNamespace</name>
      <anchor>a29a17</anchor>
      <init> 7014</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateAttributeNameInNamespace</name>
      <anchor>a29a18</anchor>
      <init> 7015</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateRelationshipIdInNamespace</name>
      <anchor>a29a19</anchor>
      <init> 7016</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateRelationshipNameInNamespace</name>
      <anchor>a29a20</anchor>
      <init> 7017</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateObjectIdInNamespace</name>
      <anchor>a29a21</anchor>
      <init> 7018</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateObjectNameInNamespace</name>
      <anchor>a29a22</anchor>
      <init> 7019</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateNameSpaceNameInSession</name>
      <anchor>a29a23</anchor>
      <init> 7020</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDuplicateNameSpaceAliasNameInSession</name>
      <anchor>a29a24</anchor>
      <init> 7021</init>
    </member>
    <member kind="enumvalue">
      <name>sdcHierMemValueNotInDenepdentNameSpace</name>
      <anchor>a29a25</anchor>
      <init> 7022</init>
    </member>
    <member kind="enumvalue">
      <name>sdcSuperObjectNotInDenepdentNameSpace</name>
      <anchor>a29a26</anchor>
      <init> 7023</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDependentNameSpaceNotRegistered</name>
      <anchor>a29a27</anchor>
      <init> 7024</init>
    </member>
    <member kind="enumvalue">
      <name>sdcCannotDestroyAReferencedNameSpace</name>
      <anchor>a29a28</anchor>
      <init> 7025</init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdNameSpace.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdNameSpace_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdNameSpace.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdNameSpace_8h</filename>
    <class kind="class">sdNameSpace</class>
    <member kind="define">
      <type>#define</type>
      <name>sdNameSpace_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_SD_NAMESPACE class</type>
      <name>sdAttribute</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sdObject.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdObject_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdObject.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdObject_8h</filename>
    <class kind="class">sdObject</class>
    <class kind="class">sdObjectAttributeIter</class>
    <class kind="class">sdObjectMemberIter</class>
    <class kind="class">sdObjectRelationshipIter</class>
    <member kind="define">
      <type>#define</type>
      <name>sdObject_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_SD_NAMESPACE class</type>
      <name>sdObject</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sdObject.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdObject_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>sdObject_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdRelationship.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdRelationship_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdRelationship.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdRelationship_8h</filename>
    <class kind="class">sdRelationship</class>
    <class kind="class">sdRelationshipActionType</class>
    <class kind="class">sdRelationshipAssociationType</class>
    <class kind="class">sdRelationshipBase</class>
    <class kind="class">sdRelationshipContainerType</class>
    <class kind="class">sdRelationshipMultiplicityType</class>
    <class kind="class">sdRelationshipOrderingType</class>
    <class kind="class">sdRelationshipSet</class>
    <class kind="class">sdRelationshipSubType</class>
    <member kind="define">
      <type>#define</type>
      <name>sdRelationship_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumRelationshipOrderingTypes</name>
      <anchor>a1</anchor>
      <init>3</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumRelationshipAssociationTypes</name>
      <anchor>a2</anchor>
      <init>3</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumRelationshipMultiplicityTypes</name>
      <anchor>a3</anchor>
      <init>4</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumRelationshipActionTypes</name>
      <anchor>a4</anchor>
      <init>4</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumRelationshipSubTypes</name>
      <anchor>a5</anchor>
      <init>2</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumRelationshipContainerTypes</name>
      <anchor>a6</anchor>
      <init>4</init>
    </member>
    <member kind="enumeration">
      <name>sdRelationshipOrderingTypeEnum</name>
      <anchor>a28</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>sdcUnorderedRelationshipOrderingType</name>
      <anchor>a28a8</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcStrictlyOrderedRelationshipOrderingType</name>
      <anchor>a28a9</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcOptionallyOrderedRelationshipOrderingType</name>
      <anchor>a28a10</anchor>
      <init> 2</init>
    </member>
    <member kind="enumeration">
      <name>sdRelationshipAssociationTypeEnum</name>
      <anchor>a29</anchor>
      <init>3</init>
    </member>
    <member kind="enumvalue">
      <name>sdcOwnedRelationshipAssociationType</name>
      <anchor>a29a11</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcOwnerRelationshipAssociationType</name>
      <anchor>a29a12</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcPeerRelationshipAssociationType</name>
      <anchor>a29a13</anchor>
      <init> 2</init>
    </member>
    <member kind="enumeration">
      <name>sdRelationshipMultiplicityTypeEnum</name>
      <anchor>a30</anchor>
      <init>4</init>
    </member>
    <member kind="enumvalue">
      <name>sdcOneToOneRelationshipMultiplicityType</name>
      <anchor>a30a14</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcOneToZeroOrOneRelationshipMultiplicityType</name>
      <anchor>a30a15</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcOneToOneOrManyRelationshipMultiplicityType</name>
      <anchor>a30a16</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>sdcOneToZeroOrManyRelationshipMultiplicityType</name>
      <anchor>a30a17</anchor>
      <init> 3</init>
    </member>
    <member kind="enumeration">
      <name>sdRelationshipActionTypeEnum</name>
      <anchor>a31</anchor>
      <init>4</init>
    </member>
    <member kind="enumvalue">
      <name>sdcGetRelationshipActionType</name>
      <anchor>a31a18</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcCreateRelationshipActionType</name>
      <anchor>a31a19</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>sdcDestroyRelationshipActionType</name>
      <anchor>a31a20</anchor>
      <init> 4</init>
    </member>
    <member kind="enumvalue">
      <name>sdcInitRelationshipActionType</name>
      <anchor>a31a21</anchor>
      <init> 8</init>
    </member>
    <member kind="enumeration">
      <name>sdRelationshipSubTypeEnum</name>
      <anchor>a32</anchor>
      <init>2</init>
    </member>
    <member kind="enumvalue">
      <name>sdcSingleRelationshipSubType</name>
      <anchor>a32a22</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcSetRelationshipSubType</name>
      <anchor>a32a23</anchor>
      <init> 1</init>
    </member>
    <member kind="enumeration">
      <name>sdRelationshipContainerTypeEnum</name>
      <anchor>a33</anchor>
      <init>4</init>
    </member>
    <member kind="enumvalue">
      <name>sdcSingleRelationshipContainerType</name>
      <anchor>a33a24</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcArrayRelationshipContainerType</name>
      <anchor>a33a25</anchor>
      <init> 1</init>
    </member>
    <member kind="enumvalue">
      <name>sdcCollectionRelationshipContainerType</name>
      <anchor>a33a26</anchor>
      <init> 2</init>
    </member>
    <member kind="enumvalue">
      <name>sdc2DTableRelationshipContainerType</name>
      <anchor>a33a27</anchor>
      <init> 3</init>
    </member>
    <member kind="variable">
      <type>BEGIN_SD_NAMESPACE class</type>
      <name>sdObject</name>
      <anchor>a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sdRelationship.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdRelationship_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>sdRelationship_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdSession.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdSession_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdSession.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdSession_8h</filename>
    <class kind="class">sdSession</class>
    <member kind="define">
      <type>#define</type>
      <name>sdSession_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_SD_NAMESPACE class</type>
      <name>sdNameSpace</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sdValue.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdValue_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdValue.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdValue_8h</filename>
    <class kind="class">sdField</class>
    <class kind="class">sdHierValue</class>
    <class kind="class">sdLeafValue</class>
    <class kind="class">sdValue</class>
    <class kind="class">sdValueSubType</class>
    <member kind="define">
      <type>#define</type>
      <name>sdValue_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sdvNumValueSubTypes</name>
      <anchor>a1</anchor>
      <init>2</init>
    </member>
    <member kind="enumeration">
      <name>sdValueSubTypeEnum</name>
      <anchor>a4</anchor>
      <init>2</init>
    </member>
    <member kind="enumvalue">
      <name>sdcLeafValueSubType</name>
      <anchor>a4a2</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>sdcHierValueSubType</name>
      <anchor>a4a3</anchor>
      <init> 1</init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdValue.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdValue_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>sdValue_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>sdVisitor.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>sdVisitor_8dox</filename>
  </compound>
  <compound kind="file">
    <name>sdVisitor.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>sdVisitor_8h</filename>
    <class kind="class">sdVisitor</class>
    <member kind="define">
      <type>#define</type>
      <name>sdVisitor_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_SD_NAMESPACE class</type>
      <name>sdLeafValue</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>srBase.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>srBase_8dox</filename>
  </compound>
  <compound kind="file">
    <name>srBase.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>srBase_8h</filename>
    <class kind="class">sr1to1Relationship</class>
    <class kind="class">sr1toNRelationship</class>
    <class kind="class">srAttributeBase</class>
    <class kind="class">srBase</class>
    <class kind="class">srObjectRef</class>
    <class kind="class">srObjectState</class>
    <class kind="class">srRelationshipBase</class>
    <class kind="class">srSDEnumLess</class>
    <class kind="class">srValueBase</class>
    <member kind="define">
      <type>#define</type>
      <name>srBase_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_SR_NAMESPACE class</type>
      <name>srVisitorMgr</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>srBase.inl</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>srBase_8inl</filename>
    <member kind="define">
      <type>#define</type>
      <name>srBase_I</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
  </compound>
  <compound kind="file">
    <name>srBaseTypes.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>srBaseTypes_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>srBaseTypes_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BEGIN_SR_NAMESPACE</name>
      <anchor>a1</anchor>
      <init>namespace SchemaRepresentation_1 {</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>END_SR_NAMESPACE</name>
      <anchor>a2</anchor>
      <init>}</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USE_SR_NAMESPACE</name>
      <anchor>a3</anchor>
      <init>using namespace SchemaRepresentation_1;</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SR_DLL_API</name>
      <anchor>a4</anchor>
      <init>OA_BASE_DLL_API</init>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SR_DLL_PVT</name>
      <anchor>a5</anchor>
      <init>OA_BASE_DLL_PVT</init>
    </member>
  </compound>
  <compound kind="file">
    <name>srVisitor.dox</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/oa/doc/base/</path>
    <filename>srVisitor_8dox</filename>
  </compound>
  <compound kind="file">
    <name>srVisitor.h</name>
    <path>/lan/oa/builds1/icftcm/linux_rhel40_gcc44x/oa22.41/docInclude/oa/base/</path>
    <filename>srVisitor_8h</filename>
    <class kind="class">srVisitor</class>
    <class kind="class">srVisitorMgr</class>
    <member kind="define">
      <type>#define</type>
      <name>srVisitor_P</name>
      <anchor>a0</anchor>
      <init></init>
    </member>
    <member kind="variable">
      <type>BEGIN_SR_NAMESPACE class</type>
      <name>srObjectRef</name>
      <anchor>a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oa1DLookupTbl</name>
    <filename>classoa1DLookupTbl.html</filename>
    <templarg>T</templarg>
    <templarg>U</templarg>
    <member kind="function">
      <type></type>
      <name>oa1DLookupTbl</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oa1DLookupTbl</name>
      <anchor>a1</anchor>
      <arglist>(const oa1DLookupTbl&lt; T, U &gt; &amp;tbl)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oa1DLookupTbl</name>
      <anchor>a2</anchor>
      <arglist>(oaUInt4 numItemsIn, const oaString &amp;nameIn, U defaultValue, oaInterpolateType iTypeIn=oacSnapDownInterpolateType, oaExtrapolateType eLowerTypeIn=oacSnapUpExtrapolateType, oaExtrapolateType eUpperTypeIn=oacSnapDownExtrapolateType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oa1DLookupTbl</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oa1DLookupTbl&lt; T, U &gt; &amp;</type>
      <name>operator=</name>
      <anchor>a4</anchor>
      <arglist>(const oa1DLookupTbl&lt; T, U &gt; &amp;tbl)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumItems</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getName</name>
      <anchor>a6</anchor>
      <arglist>(oaString &amp;nameOut) const</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaInterpolateType</type>
      <name>getInterpolateType</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaExtrapolateType</type>
      <name>getLowerExtrapolateType</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaExtrapolateType</type>
      <name>getUpperExtrapolateType</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>U</type>
      <name>getDefaultValue</name>
      <anchor>a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getHeader</name>
      <anchor>a12</anchor>
      <arglist>(oaUInt4 index) const</arglist>
    </member>
    <member kind="function">
      <type>U</type>
      <name>getValue</name>
      <anchor>a13</anchor>
      <arglist>(oaUInt4 index) const</arglist>
    </member>
    <member kind="function">
      <type>U</type>
      <name>find</name>
      <anchor>a14</anchor>
      <arglist>(T key) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumItems</name>
      <anchor>a15</anchor>
      <arglist>(oaUInt4 numItemsIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchor>a16</anchor>
      <arglist>(const oaString &amp;nameIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInterpolateType</name>
      <anchor>a17</anchor>
      <arglist>(oaInterpolateType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowerExtrapolateType</name>
      <anchor>a18</anchor>
      <arglist>(oaExtrapolateType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUpperExtrapolateType</name>
      <anchor>a19</anchor>
      <arglist>(oaExtrapolateType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultValue</name>
      <anchor>a20</anchor>
      <arglist>(U value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeader</name>
      <anchor>a21</anchor>
      <arglist>(oaUInt4 index, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a22</anchor>
      <arglist>(oaUInt4 index, U value)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a23</anchor>
      <arglist>(const oa1DLookupTbl&lt; T, U &gt; &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a24</anchor>
      <arglist>(const oa1DLookupTbl&lt; T, U &gt; &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt8</type>
      <name>calcVMSize</name>
      <anchor>a25</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oa2DLookupTbl</name>
    <filename>classoa2DLookupTbl.html</filename>
    <templarg>T</templarg>
    <templarg>U</templarg>
    <templarg>V</templarg>
    <member kind="function">
      <type></type>
      <name>oa2DLookupTbl</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oa2DLookupTbl</name>
      <anchor>a1</anchor>
      <arglist>(const oa2DLookupTbl&lt; T, U, V &gt; &amp;tbl)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oa2DLookupTbl</name>
      <anchor>a2</anchor>
      <arglist>(oaUInt4 numRowsIn, oaUInt4 numColsIn, const oaString &amp;rowNameIn, const oaString &amp;colNameIn, V defaultValue, oaInterpolateType iRowTypeIn=oacSnapDownInterpolateType, oaInterpolateType iColTypeIn=oacSnapDownInterpolateType, oaExtrapolateType eRowLowerTypeIn=oacSnapUpExtrapolateType, oaExtrapolateType eRowUpperTypeIn=oacSnapDownExtrapolateType, oaExtrapolateType eColLowerTypeIn=oacSnapUpExtrapolateType, oaExtrapolateType eColUpperTypeIn=oacSnapDownExtrapolateType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oa2DLookupTbl</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oa2DLookupTbl&lt; T, U, V &gt; &amp;</type>
      <name>operator=</name>
      <anchor>a4</anchor>
      <arglist>(const oa2DLookupTbl&lt; T, U, V &gt; &amp;tbl)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumRows</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumCols</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getRowName</name>
      <anchor>a7</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getColName</name>
      <anchor>a8</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getRowName</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getColName</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaInterpolateType</type>
      <name>getRowInterpolateType</name>
      <anchor>a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaInterpolateType</type>
      <name>getColInterpolateType</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaExtrapolateType</type>
      <name>getRowLowerExtrapolateType</name>
      <anchor>a13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaExtrapolateType</type>
      <name>getRowUpperExtrapolateType</name>
      <anchor>a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaExtrapolateType</type>
      <name>getColLowerExtrapolateType</name>
      <anchor>a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaExtrapolateType</type>
      <name>getColUpperExtrapolateType</name>
      <anchor>a16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>V</type>
      <name>getDefaultValue</name>
      <anchor>a17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getRowHeader</name>
      <anchor>a18</anchor>
      <arglist>(oaUInt4 index) const</arglist>
    </member>
    <member kind="function">
      <type>U</type>
      <name>getColHeader</name>
      <anchor>a19</anchor>
      <arglist>(oaUInt4 index) const</arglist>
    </member>
    <member kind="function">
      <type>V</type>
      <name>getValue</name>
      <anchor>a20</anchor>
      <arglist>(oaUInt4 rowIndex, oaUInt4 colIndex) const</arglist>
    </member>
    <member kind="function">
      <type>V</type>
      <name>find</name>
      <anchor>a21</anchor>
      <arglist>(T rowKey, U colKey) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumRows</name>
      <anchor>a22</anchor>
      <arglist>(oaUInt4 numRowsIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumCols</name>
      <anchor>a23</anchor>
      <arglist>(oaUInt4 numColsIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowName</name>
      <anchor>a24</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColName</name>
      <anchor>a25</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowInterpolateType</name>
      <anchor>a26</anchor>
      <arglist>(oaInterpolateType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColInterpolateType</name>
      <anchor>a27</anchor>
      <arglist>(oaInterpolateType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowLowerExtrapolateType</name>
      <anchor>a28</anchor>
      <arglist>(oaExtrapolateType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowUpperExtrapolateType</name>
      <anchor>a29</anchor>
      <arglist>(oaExtrapolateType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColLowerExtrapolateType</name>
      <anchor>a30</anchor>
      <arglist>(oaExtrapolateType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColUpperExtrapolateType</name>
      <anchor>a31</anchor>
      <arglist>(oaExtrapolateType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultValue</name>
      <anchor>a32</anchor>
      <arglist>(V value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowHeader</name>
      <anchor>a33</anchor>
      <arglist>(oaUInt4 index, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColHeader</name>
      <anchor>a34</anchor>
      <arglist>(oaUInt4 index, U value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a35</anchor>
      <arglist>(oaUInt4 rowIndex, oaUInt4 colIndex, V value)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a36</anchor>
      <arglist>(const oa2DLookupTbl&lt; T, U, V &gt; &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a37</anchor>
      <arglist>(const oa2DLookupTbl&lt; T, U, V &gt; &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt8</type>
      <name>calcVMSize</name>
      <anchor>a38</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaAbstractType</name>
    <filename>classoaAbstractType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaAbstractType</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaAbstractType</name>
      <anchor>a1</anchor>
      <arglist>(oaAbstractTypeEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaAbstractType</name>
      <anchor>a2</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaAbstractType</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaAbstractTypeEnum</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaAlignmentType</name>
    <filename>classoaAlignmentType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaAlignmentType</name>
      <anchor>a0</anchor>
      <arglist>(oaAlignmentTypeEnum typeIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaAlignmentType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaAlignmentType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaAlignmentTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaAppDef</name>
    <filename>classoaAppDef.html</filename>
    <base>oaSessionObject</base>
    <member kind="function">
      <type>void</type>
      <name>getName</name>
      <anchor>oaAppDef::getName2</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getName</name>
      <anchor>a1</anchor>
      <arglist>(oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isPersistent</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchor>a3</anchor>
      <arglist>(oaObject *object)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isUsedIn</name>
      <anchor>a4</anchor>
      <arglist>(const oaObject *database)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchor>a5</anchor>
      <arglist>(oaObject *database)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaAppObject</name>
    <filename>classoaAppObject.html</filename>
    <base>oaObject</base>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaAppObjectDef *</type>
      <name>getAppObjectDef</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaAppObject *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, oaAppObjectDef *def)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaAppObjectDef</name>
    <filename>classoaAppObjectDef.html</filename>
    <base>oaSessionObject</base>
    <member kind="function">
      <type>void</type>
      <name>getName</name>
      <anchor>a0</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isUsedIn</name>
      <anchor>a1</anchor>
      <arglist>(const oaObject *database)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchor>a2</anchor>
      <arglist>(oaObject *database)</arglist>
    </member>
    <member kind="function">
      <type>oaTimeStamp &amp;</type>
      <name>getTimeStamp</name>
      <anchor>a3</anchor>
      <arglist>(const oaObject *database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaAppObjectDef *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;nameIn)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaAppObjectDef *</type>
      <name>find</name>
      <anchor>d1</anchor>
      <arglist>(const oaString &amp;nameIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaAppObjectDefCollection</name>
    <filename>classoaAppObjectDefCollection.html</filename>
    <member kind="function">
      <type></type>
      <name>oaAppObjectDefCollection</name>
      <anchor>a0</anchor>
      <arglist>(const oaObject *database)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaAppObjectDefCollection</name>
      <anchor>a1</anchor>
      <arglist>(const oaAppObjectDefCollection &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getCount</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isEmpty</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>includes</name>
      <anchor>a4</anchor>
      <arglist>(const oaAppObjectDef *object) const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaIter&lt; oaAppObjectDef &gt;</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaAppProp</name>
    <filename>classoaAppProp.html</filename>
    <base>oaProp</base>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getSize</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getValue</name>
      <anchor>a1</anchor>
      <arglist>(oaByte *value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAppType</name>
      <anchor>a2</anchor>
      <arglist>(oaString &amp;appType) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAppType</name>
      <anchor>a3</anchor>
      <arglist>(const oaString &amp;appType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a4</anchor>
      <arglist>(oaUInt4 size, const oaByte *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getValue</name>
      <anchor>oaAppProp::getValue2</anchor>
      <arglist>(oaByteArray &amp;valueArray) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>oaAppProp::setValue2</anchor>
      <arglist>(const oaByteArray &amp;valueArray)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaAppProp *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *object, const oaString &amp;name, const oaString &amp;appType, const oaUInt4 size, const oaByte *value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaAppProp *</type>
      <name>create</name>
      <anchor>oaAppProp::create2</anchor>
      <arglist>(oaObject *object, const oaString &amp;name, const oaString &amp;appType, const oaByteArray &amp;valueArray)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaArray</name>
    <filename>classoaArray.html</filename>
    <templarg>T</templarg>
    <base>oaArrayBase</base>
    <member kind="function">
      <type></type>
      <name>oaArray</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 size=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaArray</name>
      <anchor>a1</anchor>
      <arglist>(const oaArray&lt; T &gt; &amp;arrayIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaArray</name>
      <anchor>a2</anchor>
      <arglist>(const T arrayIn[], oaUInt4 numElementsIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaArray</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>find</name>
      <anchor>a4</anchor>
      <arglist>(const T &amp;element) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchor>a5</anchor>
      <arglist>(const T &amp;element)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchor>oaArray::append</anchor>
      <arglist>(const oaArray&lt; T &gt; &amp;arrayIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchor>a7</anchor>
      <arglist>(const T &amp;element)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort</name>
      <anchor>a8</anchor>
      <arglist>(int(*compare)(const T *, const T *))</arglist>
    </member>
    <member kind="function">
      <type>oaArray&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchor>a9</anchor>
      <arglist>(const oaArray&lt; T &gt; &amp;arrayIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>operator==</name>
      <anchor>a10</anchor>
      <arglist>(const oaArray&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a11</anchor>
      <arglist>(const oaArray&lt; T &gt; &amp;other) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaArrayBase</name>
    <filename>classoaArrayBase.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>oaArrayBase</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 size=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaArrayBase</name>
      <anchor>a1</anchor>
      <arglist>(const oaArrayBase&lt; T &gt; &amp;arrayIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaArrayBase</name>
      <anchor>a2</anchor>
      <arglist>(const T arrayIn[], oaUInt4 numElementsIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaArrayBase</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaArrayBase&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchor>a4</anchor>
      <arglist>(const oaArrayBase&lt; T &gt; &amp;arrayIn)</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>getElements</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumElements</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getSize</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumElements</name>
      <anchor>a8</anchor>
      <arglist>(oaUInt4 n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchor>a9</anchor>
      <arglist>(oaUInt4 newSize, oaBoolean saveElements=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a10</anchor>
      <arglist>(const T *arrayIn, oaUInt4 numElementsIn)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>get</name>
      <anchor>a11</anchor>
      <arglist>(oaUInt4 index) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>get</name>
      <anchor>a12</anchor>
      <arglist>(oaUInt4 index)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchor>a13</anchor>
      <arglist>(oaUInt4 i) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchor>a14</anchor>
      <arglist>(oaUInt4 i)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaBaseCollection</name>
    <filename>classoaBaseCollection.html</filename>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getCount</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isEmpty</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>includes</name>
      <anchor>a6</anchor>
      <arglist>(const oaObject *object) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaBaseIter</name>
    <filename>classoaBaseIter.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaBaseObserver</name>
    <filename>classoaBaseObserver.html</filename>
    <member kind="function">
      <type></type>
      <name>oaBaseObserver</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 priorityIn, oaBoolean enabledIn=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaBaseObserver</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isEnabled</name>
      <anchor>oaBaseObserver::isEnabled</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchor>oaBaseObserver::enable</anchor>
      <arglist>(oaBoolean enabledIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaBasePackedData</name>
    <filename>classoaBasePackedData.html</filename>
    <member kind="function">
      <type>size_t</type>
      <name>calcDiskSize</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>writeRef</name>
      <anchor>b10</anchor>
      <arglist>(oaByte *data, const oaInternalNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>writeRef</name>
      <anchor>b11</anchor>
      <arglist>(oaByte *data, const oaNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>writeRef</name>
      <anchor>b12</anchor>
      <arglist>(oaByte *data, const oaStringRef &amp;ref) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>writeRef</name>
      <anchor>b13</anchor>
      <arglist>(oaByte *data, const oaStringNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>writePackedRef</name>
      <anchor>b14</anchor>
      <arglist>(oaByte *data, const oaInternalNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>writePackedRef</name>
      <anchor>b15</anchor>
      <arglist>(oaByte *data, const oaNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>writePackedRef</name>
      <anchor>b16</anchor>
      <arglist>(oaByte *data, const oaStringRef &amp;ref) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>writePackedRef</name>
      <anchor>b17</anchor>
      <arglist>(oaByte *data, const oaStringNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>readRef</name>
      <anchor>b28</anchor>
      <arglist>(oaBoolean swapVal, const oaByte *data, oaInternalNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>readRef</name>
      <anchor>b29</anchor>
      <arglist>(oaBoolean swapVal, const oaByte *data, oaNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>readRef</name>
      <anchor>b30</anchor>
      <arglist>(oaBoolean swapVal, const oaByte *data, oaStringRef &amp;ref) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>readRef</name>
      <anchor>b31</anchor>
      <arglist>(oaBoolean swapVal, const oaByte *data, oaStringNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>readPackedRef</name>
      <anchor>b32</anchor>
      <arglist>(const oaByte *data, oaInternalNameRef &amp;box) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>readPackedRef</name>
      <anchor>b33</anchor>
      <arglist>(const oaByte *data, oaNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>readPackedRef</name>
      <anchor>b34</anchor>
      <arglist>(const oaByte *data, oaStringRef &amp;ref) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>readPackedRef</name>
      <anchor>b35</anchor>
      <arglist>(const oaByte *data, oaStringNameRef &amp;ref) const</arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaPackedTbl</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaBooleanAppDef</name>
    <filename>classoaBooleanAppDef.html</filename>
    <templarg>T</templarg>
    <base>oaAppDef</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a0</anchor>
      <arglist>(T *object, oaBoolean value)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>get</name>
      <anchor>a1</anchor>
      <arglist>(const T *object)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>getDefault</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBooleanAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, oaBoolean defValue=false, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBooleanAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef, oaBoolean defValue=false, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBooleanAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d2</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBooleanAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d3</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaBooleanProp</name>
    <filename>classoaBooleanProp.html</filename>
    <base>oaProp</base>
    <member kind="function">
      <type>oaBoolean</type>
      <name>getValue</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a1</anchor>
      <arglist>(oaBoolean value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBooleanProp *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *object, const oaString &amp;name, oaBoolean value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaBooleanValue</name>
    <filename>classoaBooleanValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>oaBoolean</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(oaBoolean value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBooleanValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, oaBoolean value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaBox</name>
    <filename>classoaBox.html</filename>
    <member kind="function">
      <type></type>
      <name>oaBox</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaBox</name>
      <anchor>a1</anchor>
      <arglist>(oaCoord leftIn, oaCoord bottomIn, oaCoord rightIn, oaCoord topIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaBox</name>
      <anchor>a2</anchor>
      <arglist>(const oaPoint &amp;lowerLeftIn, const oaPoint &amp;upperRightIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaBox</name>
      <anchor>a3</anchor>
      <arglist>(const oaPoint &amp;center, const oaUInt4 size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaBox</name>
      <anchor>a4</anchor>
      <arglist>(const oaBox &amp;box, const oaTransform &amp;xform)</arglist>
    </member>
    <member kind="function">
      <type>oaPoint &amp;</type>
      <name>lowerLeft</name>
      <anchor>a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaPoint &amp;</type>
      <name>upperRight</name>
      <anchor>a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCoord &amp;</type>
      <name>left</name>
      <anchor>a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCoord &amp;</type>
      <name>bottom</name>
      <anchor>a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCoord &amp;</type>
      <name>right</name>
      <anchor>a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCoord &amp;</type>
      <name>top</name>
      <anchor>a10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaPoint &amp;</type>
      <name>lowerLeft</name>
      <anchor>a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaPoint &amp;</type>
      <name>upperRight</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCoord</type>
      <name>left</name>
      <anchor>a13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCoord</type>
      <name>bottom</name>
      <anchor>a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCoord</type>
      <name>right</name>
      <anchor>a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCoord</type>
      <name>top</name>
      <anchor>a16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a17</anchor>
      <arglist>(oaCoord leftIn=INT_MAX, oaCoord bottomIn=INT_MAX, oaCoord rightIn=INT_MIN, oaCoord topIn=INT_MIN)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a18</anchor>
      <arglist>(const oaPoint &amp;lowerLeftIn, const oaPoint &amp;upperRightIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a19</anchor>
      <arglist>(const oaPoint &amp;center, const oaUInt4 size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a20</anchor>
      <arglist>(const oaBox &amp;box, const oaTransform &amp;xform)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getWidth</name>
      <anchor>a21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getHeight</name>
      <anchor>a22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCenter</name>
      <anchor>a23</anchor>
      <arglist>(oaPoint &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLowerRight</name>
      <anchor>a24</anchor>
      <arglist>(oaPoint &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getUpperLeft</name>
      <anchor>a25</anchor>
      <arglist>(oaPoint &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>hasNoArea</name>
      <anchor>a26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isInverted</name>
      <anchor>a27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>overlaps</name>
      <anchor>a28</anchor>
      <arglist>(const oaBox &amp;box, oaBoolean incEdges=true) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>overlaps</name>
      <anchor>a29</anchor>
      <arglist>(const oaSegment &amp;seg, oaBoolean incEdges=true) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>contains</name>
      <anchor>a30</anchor>
      <arglist>(const oaBox &amp;box, oaBoolean incEdges=true) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>contains</name>
      <anchor>a31</anchor>
      <arglist>(const oaPoint &amp;point, oaBoolean incEdges=true) const</arglist>
    </member>
    <member kind="function">
      <type>oaDouble</type>
      <name>distanceFrom2</name>
      <anchor>a32</anchor>
      <arglist>(const oaPoint &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fix</name>
      <anchor>a33</anchor>
      <arglist>(oaBox &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fix</name>
      <anchor>a34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a35</anchor>
      <arglist>(const oaTransform &amp;xform, oaBox &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a36</anchor>
      <arglist>(const oaTransform &amp;xform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a37</anchor>
      <arglist>(const oaPoint &amp;offset, oaBox &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a38</anchor>
      <arglist>(const oaPoint &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a39</anchor>
      <arglist>(oaDouble scale, oaDouble angle, oaBox &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a40</anchor>
      <arglist>(oaDouble scale, oaDouble angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchor>a41</anchor>
      <arglist>(oaFloat scale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchor>a42</anchor>
      <arglist>(const oaBox &amp;box, oaBox &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchor>a43</anchor>
      <arglist>(const oaBox &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchor>a44</anchor>
      <arglist>(const oaPoint &amp;point, oaBox &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchor>a45</anchor>
      <arglist>(const oaPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>intersection</name>
      <anchor>a46</anchor>
      <arglist>(const oaBox &amp;box, oaBox &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>intersection</name>
      <anchor>a47</anchor>
      <arglist>(const oaBox &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeZero</name>
      <anchor>a48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeInvertedZero</name>
      <anchor>a49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchor>a50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toPoints</name>
      <anchor>a51</anchor>
      <arglist>(oaPoint *points) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a52</anchor>
      <arglist>(const oaBox &amp;bBox) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a53</anchor>
      <arglist>(const oaBox &amp;bBox) const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaChecker&lt; oaBox &gt;</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaBoxArray</name>
    <filename>classoaBoxArray.html</filename>
    <base>oaArray&lt; oaBox &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaBoxArray</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 sizeIn=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaBoxArrayValue</name>
    <filename>classoaBoxArrayValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>(oaBoxArray &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(const oaBoxArray &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBoxArrayValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oaBoxArray &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaBuildInfo</name>
    <filename>classoaBuildInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>oaBuildInfo</name>
      <anchor>a0</anchor>
      <arglist>(const oaString &amp;packageNameIn, const oaString &amp;buildNameIn, const oaString &amp;buildTimeIn, oaUInt4 buildNumberIn, oaUInt4 majorReleaseNum=OA_MAJOR_RELEASE_NUM, oaUInt4 minorReleaseNum=OA_MINOR_RELEASE_NUM)</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getPackageName</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getBuildName</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getBuildTime</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getBuildNumber</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getMajorReleaseNum</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getMinorReleaseNum</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBuildInfo *</type>
      <name>find</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;packageName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>void</type>
      <name>getPackages</name>
      <anchor>d1</anchor>
      <arglist>(oaBuildInfoArray &amp;packagesIn)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBuildInfo **</type>
      <name>getPackages</name>
      <anchor>d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaUInt4</type>
      <name>getNumPackages</name>
      <anchor>d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>const oaString</type>
      <name>getPlatformName</name>
      <anchor>oaBuildInfo::getPlatformName</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>const oaString &amp;</type>
      <name>getAppBuildName</name>
      <anchor>d5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaBuildInfoArray</name>
    <filename>classoaBuildInfoArray.html</filename>
    <base>oaArray&lt; oaBuildInfo * &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaBuildInfoArray</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 sizeIn=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaBundleName</name>
    <filename>classoaBundleName.html</filename>
    <member kind="function">
      <type></type>
      <name>oaBundleName</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaBundleName</name>
      <anchor>a1</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaBundleName</name>
      <anchor>a2</anchor>
      <arglist>(const oaScalarName &amp;in, oaUInt4 repeat=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaBundleName</name>
      <anchor>a3</anchor>
      <arglist>(const oaVectorName &amp;in, oaUInt4 repeat=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaBundleName</name>
      <anchor>a4</anchor>
      <arglist>(const oaVectorBitName &amp;in, oaUInt4 repeat=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaBundleName</name>
      <anchor>a5</anchor>
      <arglist>(const oaSimpleName &amp;in, oaUInt4 repeat=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaBundleName</name>
      <anchor>a6</anchor>
      <arglist>(const oaBundleName &amp;in)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaBundleName</name>
      <anchor>a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchor>a8</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a9</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a10</anchor>
      <arglist>(oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBitName</name>
      <anchor>a11</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, oaUInt4 bit, oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchor>a12</anchor>
      <arglist>(const oaScalarName &amp;name, oaUInt4 repeat=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchor>a13</anchor>
      <arglist>(const oaVectorName &amp;name, oaUInt4 repeat=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchor>a14</anchor>
      <arglist>(const oaVectorBitName &amp;name, oaUInt4 repeat=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchor>a15</anchor>
      <arglist>(const oaSimpleName &amp;name, oaUInt4 repeat=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierPath</name>
      <anchor>a16</anchor>
      <arglist>(const oaScalarName &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierPath</name>
      <anchor>a17</anchor>
      <arglist>(const oaVectorBitName &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierMem</name>
      <anchor>a18</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in, oaUInt4 len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierMem</name>
      <anchor>a19</anchor>
      <arglist>(const oaNameMem &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isEmpty</name>
      <anchor>a20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumMembers</name>
      <anchor>a21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumBits</name>
      <anchor>a22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getSize</name>
      <anchor>a23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchor>a24</anchor>
      <arglist>(oaUInt4 newSize)</arglist>
    </member>
    <member kind="function">
      <type>oaBundleName &amp;</type>
      <name>operator=</name>
      <anchor>a25</anchor>
      <arglist>(const oaBundleName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const oaSimpleName &amp;</type>
      <name>operator[]</name>
      <anchor>a26</anchor>
      <arglist>(oaUInt4 i) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a27</anchor>
      <arglist>(const oaBundleName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a28</anchor>
      <arglist>(const oaBundleName &amp;name) const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaNameTbl</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaCdbaNS</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaByteArray</name>
    <filename>classoaByteArray.html</filename>
    <base>oaArray&lt; oaByte &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaByteArray</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 sizeIn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaByteArray</name>
      <anchor>a1</anchor>
      <arglist>(const oaByteArray &amp;bytesIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaByteArray</name>
      <anchor>a2</anchor>
      <arglist>(const oaByte bytesIn[], oaUInt4 numBytesIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCategory</name>
    <filename>classoaCategory.html</filename>
    <member kind="function">
      <type></type>
      <name>oaCategory</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaCategory</name>
      <anchor>a1</anchor>
      <arglist>(oaCategoryEnum typeIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaCategory</name>
      <anchor>a2</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaCategory</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaCategoryEnum</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCdbaNS</name>
    <filename>classoaCdbaNS.html</filename>
    <base>oaNameSpace</base>
    <member kind="function">
      <type></type>
      <name>oaCdbaNS</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaClientSocket</name>
    <filename>classoaClientSocket.html</filename>
    <base>oaSocket</base>
    <member kind="function">
      <type>oaBoolean</type>
      <name>connect</name>
      <anchor>a0</anchor>
      <arglist>(const char *address, oaUInt4 port)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isPortNumAvailable</name>
      <anchor>a1</anchor>
      <arglist>(const char *address, oaUInt4 port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>void</type>
      <name>setConnectionTimeout</name>
      <anchor>d0</anchor>
      <arglist>(oaUInt4 timeoutVal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaUInt4</type>
      <name>getConnectionTimeout</name>
      <anchor>d1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCollection</name>
    <filename>classoaCollection.html</filename>
    <templarg>obj</templarg>
    <templarg>container</templarg>
    <base>oaBaseCollection</base>
    <member kind="function">
      <type></type>
      <name>oaCollection</name>
      <anchor>a3</anchor>
      <arglist>(const oaCollection&lt; obj, container &gt; &amp;coll)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>includes</name>
      <anchor>a4</anchor>
      <arglist>(const obj *o)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaCompatibilityError</name>
    <filename>classoaCompatibilityError.html</filename>
    <base>oaException</base>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getAppBuildName</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getKitBuildName</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getDataModelBuildName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getDatabaseName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getAppDataModelRev</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getKitDataModelRev</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getDBDataModelRev</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaFeatureArray &amp;</type>
      <name>getFeatures</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaComplex</name>
    <filename>classoaComplex.html</filename>
    <templarg>obj</templarg>
    <member kind="function">
      <type></type>
      <name>oaComplex</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaComplex</name>
      <anchor>a1</anchor>
      <arglist>(obj realIn, obj imagIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaComplex</name>
      <anchor>a2</anchor>
      <arglist>(const oaComplex &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>obj &amp;</type>
      <name>real</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>obj &amp;</type>
      <name>imag</name>
      <anchor>a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>obj</type>
      <name>real</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>obj</type>
      <name>imag</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaComplex &amp;</type>
      <name>operator+=</name>
      <anchor>a7</anchor>
      <arglist>(const oaComplex &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>oaComplex &amp;</type>
      <name>operator-=</name>
      <anchor>a8</anchor>
      <arglist>(const oaComplex &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>oaComplex &amp;</type>
      <name>operator *=</name>
      <anchor>a9</anchor>
      <arglist>(const oaComplex &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>oaComplex &amp;</type>
      <name>operator/=</name>
      <anchor>a10</anchor>
      <arglist>(const oaComplex &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>oaComplex &amp;</type>
      <name>operator=</name>
      <anchor>a11</anchor>
      <arglist>(const oaComplex &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>oaComplex</type>
      <name>operator-</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a13</anchor>
      <arglist>(const oaComplex &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a14</anchor>
      <arglist>(const oaComplex &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a15</anchor>
      <arglist>(const oaComplex &amp;c) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a16</anchor>
      <arglist>(const oaComplex &amp;c) const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaChecker&lt; oaComplex&lt; obj &gt; &gt;</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaComplexArray</name>
    <filename>classoaComplexArray.html</filename>
    <templarg>obj</templarg>
    <base>oaArray&lt; oaComplex&lt; obj &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaComplexArray</name>
      <anchor>a0</anchor>
      <arglist>(const oaUInt4 sizeIn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaComplexArray</name>
      <anchor>a1</anchor>
      <arglist>(const oaComplexArray &amp;array)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaConnectivityType</name>
    <filename>classoaConnectivityType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaConnectivityType</name>
      <anchor>a0</anchor>
      <arglist>(oaConnectivityTypeEnum typeIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaConnectivityType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaConnectivityType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaConnectivityTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaConnectLayerType</name>
    <filename>classoaConnectLayerType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaConnectLayerType</name>
      <anchor>a0</anchor>
      <arglist>(oaConnectLayerTypeEnum type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaConnectLayerType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaConnectLayerTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaConstraint</name>
    <filename>classoaConstraint.html</filename>
    <base>oaObject</base>
    <member kind="function">
      <type>void</type>
      <name>getName</name>
      <anchor>a0</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaConstraintDef *</type>
      <name>getDef</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaValue *</type>
      <name>getValue</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getParams</name>
      <anchor>a3</anchor>
      <arglist>(oaConstraintParamArray &amp;params) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getID</name>
      <anchor>a4</anchor>
      <arglist>(oaString &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getDescription</name>
      <anchor>a5</anchor>
      <arglist>(oaString &amp;description) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>hasParams</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isHard</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a8</anchor>
      <arglist>(oaValue *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParams</name>
      <anchor>a9</anchor>
      <arglist>(const oaConstraintParamArray &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHard</name>
      <anchor>oaConstraint::setHard</anchor>
      <arglist>(oaBoolean isHard)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setID</name>
      <anchor>a11</anchor>
      <arglist>(const oaString &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDescription</name>
      <anchor>a12</anchor>
      <arglist>(const oaString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchor>a13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumvalue">
      <name>dtIndex</name>
      <anchor>s1s0</anchor>
      <init> oacBaseConstraintDataType</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaConstraintDef</name>
    <filename>classoaConstraintDef.html</filename>
    <base>oaSessionObject</base>
    <member kind="function">
      <type>void</type>
      <name>getName</name>
      <anchor>a0</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getValueTypes</name>
      <anchor>a1</anchor>
      <arglist>(oaSubset&lt; oaType &gt; &amp;allowedValues) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getObjectTypes</name>
      <anchor>a2</anchor>
      <arglist>(oaSubset&lt; oaType &gt; &amp;allowedObjects) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getDatabaseTypes</name>
      <anchor>a3</anchor>
      <arglist>(oaSubset&lt; oaDBType &gt; &amp;allowedDbs) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isBuiltIn</name>
      <anchor>oaConstraintDef::isBuiltIn</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchor>a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchor>a6</anchor>
      <arglist>(oaObject *database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintDef *</type>
      <name>find</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="enumvalue">
      <name>dtIndex</name>
      <anchor>s1s0</anchor>
      <init> oacBaseConstraintDefDataType</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaConstraintGroup</name>
    <filename>classoaConstraintGroup.html</filename>
    <base>oaObject</base>
    <member kind="function">
      <type>oaConstraintGroupDef *</type>
      <name>getDef</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaConstraintGroupOperator</type>
      <name>getOperator</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>override</name>
      <anchor>oaConstraintGroup::override</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaObject *</type>
      <name>getOwner</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaConstraintGroupMem, oaConstraintGroup &gt;</type>
      <name>getMembers</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaConstraint, oaConstraintGroup &gt;</type>
      <name>getConstraints</name>
      <anchor>a7</anchor>
      <arglist>(const oaConstraintDef *def=NULL) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintGroup *</type>
      <name>create</name>
      <anchor>oaConstraintGroup::create</anchor>
      <arglist>(oaObject *database, const oaString &amp;name, oaBoolean override=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintGroup *</type>
      <name>create</name>
      <anchor>d1</anchor>
      <arglist>(oaObject *database, const oaString &amp;name, oaBoolean override, oaConstraintGroupOperator op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintGroup *</type>
      <name>create</name>
      <anchor>d2</anchor>
      <arglist>(oaObject *database, oaConstraintGroupDef *def, const oaString &amp;name, oaBoolean override=false, oaConstraintGroupOperator op=oacPrecedenceGroupOperator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintGroup *</type>
      <name>create</name>
      <anchor>d3</anchor>
      <arglist>(oaConstraintGroupDef *def, oaObject *object, oaBoolean override=false, oaConstraintGroupOperator op=oacPrecedenceGroupOperator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintGroup *</type>
      <name>find</name>
      <anchor>d4</anchor>
      <arglist>(const oaObject *database, const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintGroup *</type>
      <name>find</name>
      <anchor>oaConstraintGroup::find2</anchor>
      <arglist>(const oaObject *database, const oaString &amp;name, oaBoolean local)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintGroup *</type>
      <name>find</name>
      <anchor>d6</anchor>
      <arglist>(const oaConstraintGroupDef *def, const oaObject *object)</arglist>
    </member>
    <member kind="enumvalue">
      <name>dtIndex</name>
      <anchor>s1s0</anchor>
      <init> oacBaseConstraintGroupDataType</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaConstraintGroupDef</name>
    <filename>classoaConstraintGroupDef.html</filename>
    <base>oaSessionObject</base>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchor>a1</anchor>
      <arglist>(oaObject *database)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getName</name>
      <anchor>a2</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaConstraintGroupType</type>
      <name>getConstraintGroupType</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isBuiltIn</name>
      <anchor>oaConstraintGroupDef::isBuiltIn</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isUniqueInDB</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllowedOwners</name>
      <anchor>a6</anchor>
      <arglist>(oaManagedTypeArray &amp;allowedOwners) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllowedDatabases</name>
      <anchor>a7</anchor>
      <arglist>(oaSubset&lt; oaDBType &gt; &amp;allowedDatabases) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintGroupDef *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, const oaManagedTypeArray &amp;allowedOwners, const oaSubset&lt; oaDBType &gt; &amp;allowedDatabases, oaBoolean uniqueInDatabase=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintGroupDef *</type>
      <name>find</name>
      <anchor>d1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintGroupDef *</type>
      <name>get</name>
      <anchor>d2</anchor>
      <arglist>(oaConstraintGroupType type)</arglist>
    </member>
    <member kind="enumvalue">
      <name>dtIndex</name>
      <anchor>s1s0</anchor>
      <init> oacBaseConstraintGroupDefDataType</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaConstraintGroupHeader</name>
    <filename>classoaConstraintGroupHeader.html</filename>
    <base>oaObject</base>
    <member kind="function">
      <type>oaConstraintGroup *</type>
      <name>getConstraintGroup</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getName</name>
      <anchor>a1</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaConstraintGroupMem, oaConstraintGroupHeader &gt;</type>
      <name>getConstraintGroupMems</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isBound</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintGroupHeader *</type>
      <name>find</name>
      <anchor>d0</anchor>
      <arglist>(const oaObject *database, const oaString &amp;name)</arglist>
    </member>
    <member kind="enumvalue">
      <name>dtIndex</name>
      <anchor>s1s0</anchor>
      <init> oacBaseConstraintGroupHeaderDataType</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaConstraintGroupMem</name>
    <filename>classoaConstraintGroupMem.html</filename>
    <base>oaObject</base>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchor>oaConstraintGroupMem::destroy</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaConstraintGroup *</type>
      <name>getConstraintGroup</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaObject *</type>
      <name>getObject</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isImplicit</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveAfter</name>
      <anchor>oaConstraintGroupMem::moveAfter</anchor>
      <arglist>(oaConstraintGroupMem *member)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveToFirst</name>
      <anchor>oaConstraintGroupMem::moveToFirst</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintGroupMem *</type>
      <name>create</name>
      <anchor>oaConstraintGroupMem::create</anchor>
      <arglist>(oaConstraintGroup *group, oaConstraint *constraint, oaBoolean prepend=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintGroupMem *</type>
      <name>create</name>
      <anchor>oaConstraintGroupMem::create</anchor>
      <arglist>(oaConstraintGroup *group, oaConstraintGroup *groupMem, oaBoolean prepend=false)</arglist>
    </member>
    <member kind="enumvalue">
      <name>dtIndex</name>
      <anchor>s1s0</anchor>
      <init> oacBaseConstraintGroupMemDataType</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaConstraintGroupOperator</name>
    <filename>classoaConstraintGroupOperator.html</filename>
    <member kind="function">
      <type></type>
      <name>oaConstraintGroupOperator</name>
      <anchor>a0</anchor>
      <arglist>(oaConstraintGroupOperatorEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaConstraintGroupOperator</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaConstraintGroupOperator</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaConstraintGroupOperatorEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaConstraintGroupType</name>
    <filename>classoaConstraintGroupType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaConstraintGroupType</name>
      <anchor>a0</anchor>
      <arglist>(oaConstraintGroupTypeEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaConstraintGroupType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaConstraintGroupType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaConstraintGroupTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaConstraintParam</name>
    <filename>classoaConstraintParam.html</filename>
    <base>oaObject</base>
    <member kind="function">
      <type>oaValue *</type>
      <name>getValue</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaConstraintParamDef *</type>
      <name>getDef</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isOwned</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a3</anchor>
      <arglist>(oaValue *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchor>a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaConstraintParam *</type>
      <name>copy</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaConstraintParam *</type>
      <name>copyTo</name>
      <anchor>a6</anchor>
      <arglist>(oaObject *database) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintParam *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(const oaConstraintParamDef *def, oaValue *value)</arglist>
    </member>
    <member kind="enumvalue">
      <name>dtIndex</name>
      <anchor>s1s0</anchor>
      <init> oacBaseConstraintParamDataType</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaConstraintParamArray</name>
    <filename>classoaConstraintParamArray.html</filename>
    <base>oaArray&lt; oaConstraintParam * &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaConstraintParamArray</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 sizeIn=0)</arglist>
    </member>
    <member kind="function">
      <type>oaConstraintParam *</type>
      <name>findParam</name>
      <anchor>a1</anchor>
      <arglist>(const oaConstraintParamDef *def) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaConstraintParamDef</name>
    <filename>classoaConstraintParamDef.html</filename>
    <base>oaSessionObject</base>
    <member kind="function">
      <type>void</type>
      <name>getName</name>
      <anchor>a0</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaType</type>
      <name>getValueType</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isBuiltIn</name>
      <anchor>oaConstraintParamDef::isBuiltIn</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchor>a4</anchor>
      <arglist>(oaObject *database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintParamDef *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, oaType valueType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintParamDef *</type>
      <name>find</name>
      <anchor>d1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaConstraintParamDef *</type>
      <name>get</name>
      <anchor>d2</anchor>
      <arglist>(oaConstraintParamType type)</arglist>
    </member>
    <member kind="enumvalue">
      <name>dtIndex</name>
      <anchor>s1s0</anchor>
      <init> oacBaseConstraintParamDefDataType</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaConstraintParamType</name>
    <filename>classoaConstraintParamType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaConstraintParamType</name>
      <anchor>a0</anchor>
      <arglist>(oaConstraintParamTypeEnum typeIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaConstraintParamType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaConstraintParamType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaConstraintParamTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDataAppDef</name>
    <filename>classoaDataAppDef.html</filename>
    <templarg>T</templarg>
    <base>oaAppDef</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a0</anchor>
      <arglist>(T *object, const oaByte *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a1</anchor>
      <arglist>(const T *object, oaByte *value)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getSize</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getDefault</name>
      <anchor>a3</anchor>
      <arglist>(oaByte *value) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaDataAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, oaUInt4 dataSize, const oaByte *defValue, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaDataAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef, oaUInt4 dataSize, const oaByte *defValue, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaDataAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d2</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaDataAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d3</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDataModelModType</name>
    <filename>classoaDataModelModType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaDataModelModType</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaDataModelModType</name>
      <anchor>a1</anchor>
      <arglist>(oaDataModelModTypeEnum typeIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaDataModelModType</name>
      <anchor>a2</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaDataModelModType</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaDataModelModTypeEnum</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDBType</name>
    <filename>classoaDBType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaDBType</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaDBType</name>
      <anchor>a1</anchor>
      <arglist>(oaDBTypeEnum typeIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaDBType</name>
      <anchor>a2</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaDBType</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaDBTypeEnum</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDefNS</name>
    <filename>classoaDefNS.html</filename>
    <base>oaLefNS</base>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>b1</anchor>
      <arglist>(const oaVectorName &amp;n1, const oaVectorBitName &amp;n2) const</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual void</type>
      <name>getInternalVector</name>
      <anchor>b4</anchor>
      <arglist>(const oaChar *in, oaVectorName &amp;out, oaBoolean baseOnly=false) const</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual void</type>
      <name>getVectorName</name>
      <anchor>b7</anchor>
      <arglist>(const oaVectorName &amp;in, oaString &amp;out, oaUInt4 &amp;loc) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDir</name>
    <filename>classoaDir.html</filename>
    <base>oaFSComponent</base>
    <member kind="function">
      <type></type>
      <name>oaDir</name>
      <anchor>a0</anchor>
      <arglist>(const oaString &amp;nameIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaDir</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>exists</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isEmpty</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isCWD</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDirIter</name>
    <filename>classoaDirIter.html</filename>
    <member kind="function">
      <type></type>
      <name>oaDirIter</name>
      <anchor>a0</anchor>
      <arglist>(const oaString &amp;dirPathIn, oaDirIterModeEnum modeIn=oacAllDirIterMode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaDirIter</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;dirPathIn, const oaString &amp;wildcardNameIn, oaDirIterModeEnum modeIn=oacAllDirIterMode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaDirIter</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>getNext</name>
      <anchor>a3</anchor>
      <arglist>(oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchor>a4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDistanceMeasureType</name>
    <filename>classoaDistanceMeasureType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaDistanceMeasureType</name>
      <anchor>a0</anchor>
      <arglist>(oaDistanceMeasureTypeEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaDistanceMeasureType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaDistanceMeasureType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaDistanceMeasureTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDomain</name>
    <filename>classoaDomain.html</filename>
    <member kind="function">
      <type></type>
      <name>oaDomain</name>
      <anchor>a0</anchor>
      <arglist>(oaDomainEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaDomain</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaDomain</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaDomainEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDoubleAppDef</name>
    <filename>classoaDoubleAppDef.html</filename>
    <templarg>T</templarg>
    <base>oaAppDef</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a0</anchor>
      <arglist>(T *object, oaDouble value)</arglist>
    </member>
    <member kind="function">
      <type>oaDouble</type>
      <name>get</name>
      <anchor>a1</anchor>
      <arglist>(const T *object)</arglist>
    </member>
    <member kind="function">
      <type>oaDouble</type>
      <name>getDefault</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaDoubleAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, oaDouble defValue=0., oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaDoubleAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef, oaDouble defValue=0., oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaDoubleAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d2</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaDoubleAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d3</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDoubleProp</name>
    <filename>classoaDoubleProp.html</filename>
    <base>oaProp</base>
    <member kind="function">
      <type>oaDouble</type>
      <name>getValue</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a1</anchor>
      <arglist>(oaDouble value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaDoubleProp *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *object, const oaString &amp;name, oaDouble value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDoubleRangeProp</name>
    <filename>classoaDoubleRangeProp.html</filename>
    <base>oaProp</base>
    <member kind="function">
      <type>oaDouble</type>
      <name>getValue</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaDouble</type>
      <name>getLowerBound</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaDouble</type>
      <name>getUpperBound</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a3</anchor>
      <arglist>(oaDouble value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a4</anchor>
      <arglist>(oaDouble lowerBound, oaDouble value, oaDouble upperBound)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaDoubleRangeProp *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *object, const oaString &amp;name, oaDouble lowerBound, oaDouble value, oaDouble upperBound)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDualInt</name>
    <filename>classoaDualInt.html</filename>
    <member kind="function">
      <type></type>
      <name>oaDualInt</name>
      <anchor>a0</anchor>
      <arglist>(oaInt4 firstValue=0, oaInt4 secondValue=0)</arglist>
    </member>
    <member kind="function">
      <type>oaInt4</type>
      <name>getFirst</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaInt4</type>
      <name>getSecond</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFirst</name>
      <anchor>a3</anchor>
      <arglist>(oaInt4 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSecond</name>
      <anchor>a4</anchor>
      <arglist>(oaInt4 value)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a5</anchor>
      <arglist>(const oaDualInt &amp;right)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a6</anchor>
      <arglist>(const oaDualInt &amp;right)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a7</anchor>
      <arglist>(const oaDualInt &amp;right) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a8</anchor>
      <arglist>(const oaDualInt &amp;right) const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaChecker&lt; oaDualInt &gt;</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDualInt1DTblValue</name>
    <filename>classoaDualInt1DTblValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>getFirst</name>
      <anchor>a0</anchor>
      <arglist>(oa1DLookupTbl&lt; oaInt4, oaInt4 &gt; &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSecond</name>
      <anchor>a1</anchor>
      <arglist>(oa1DLookupTbl&lt; oaInt4, oaInt4 &gt; &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFirst</name>
      <anchor>a2</anchor>
      <arglist>(const oa1DLookupTbl&lt; oaInt4, oaInt4 &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSecond</name>
      <anchor>a3</anchor>
      <arglist>(const oa1DLookupTbl&lt; oaInt4, oaInt4 &gt; &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaDualInt1DTblValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oa1DLookupTbl&lt; oaInt4, oaInt4 &gt; &amp;first, const oa1DLookupTbl&lt; oaInt4, oaInt4 &gt; &amp;second)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDualIntArray</name>
    <filename>classoaDualIntArray.html</filename>
    <base>oaArray&lt; oaDualInt &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaDualIntArray</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 sizeIn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaDualIntArray</name>
      <anchor>a1</anchor>
      <arglist>(const oaDualInt *arrayIn, oaUInt4 numElementsIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaDualIntValue</name>
    <filename>classoaDualIntValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>oaInt4</type>
      <name>getFirst</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaInt4</type>
      <name>getSecond</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFirst</name>
      <anchor>a2</anchor>
      <arglist>(oaInt4 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSecond</name>
      <anchor>a3</anchor>
      <arglist>(oaInt4 value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaDualIntValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, oaInt4 first, oaInt4 second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaDualIntValue *</type>
      <name>create</name>
      <anchor>d1</anchor>
      <arglist>(oaObject *database, const oaDualInt &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaEnclosedCutType</name>
    <filename>classoaEnclosedCutType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaEnclosedCutType</name>
      <anchor>a0</anchor>
      <arglist>(oaEnclosedCutTypeEnum type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaEnclosedCutType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaEnclosedCutTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaEnumCollection</name>
    <filename>classoaEnumCollection.html</filename>
    <member kind="function">
      <type></type>
      <name>operator oaEnumIterState *</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getCount</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isEmpty</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaEnumProp</name>
    <filename>classoaEnumProp.html</filename>
    <base>oaProp</base>
    <member kind="function">
      <type>void</type>
      <name>getValue</name>
      <anchor>a0</anchor>
      <arglist>(oaString &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>oaEnumCollection</type>
      <name>getEnums</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaEnumProp *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *object, const oaString &amp;name, const oaString &amp;value, oaUInt4 numEnums, const oaString *enums)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaEnumProp *</type>
      <name>create</name>
      <anchor>d1</anchor>
      <arglist>(oaObject *object, const oaString &amp;name, const oaString &amp;value, const oaStringArray &amp;enums)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaEnumPropIter</name>
    <filename>classoaEnumPropIter.html</filename>
    <member kind="function">
      <type></type>
      <name>oaEnumPropIter</name>
      <anchor>a0</anchor>
      <arglist>(oaEnumIterState *sub)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaEnumPropIter</name>
      <anchor>a1</anchor>
      <arglist>(oaEnumPropIter &amp;iterIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaEnumPropIter</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaEnumPropIter &amp;</type>
      <name>operator=</name>
      <anchor>a3</anchor>
      <arglist>(oaEnumPropIter &amp;iterIn)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>getNext</name>
      <anchor>a4</anchor>
      <arglist>(oaString &amp;enumV)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchor>a5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaError</name>
    <filename>classoaError.html</filename>
    <base>oaException</base>
  </compound>
  <compound kind="class">
    <name>oaException</name>
    <filename>classoaException.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaException</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getMsgId</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getMsg</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaUInt8</type>
      <name>getLastOSError</name>
      <anchor>d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual const oaString &amp;</type>
      <name>getFormatString</name>
      <anchor>b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>format</name>
      <anchor>b1</anchor>
      <arglist>(va_list &amp;args)</arglist>
    </member>
    <member kind="function" protection="public" static="yes">
      <type>oaUInt4</type>
      <name>getOSErrorStr</name>
      <anchor>e0</anchor>
      <arglist>(oaString &amp;errStr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaExtrapolateType</name>
    <filename>classoaExtrapolateType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaExtrapolateType</name>
      <anchor>a0</anchor>
      <arglist>(oaExtrapolateTypeEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaExtrapolateType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;nameIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaExtrapolateType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaExtrapolateTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaFDSet</name>
    <filename>classoaFDSet.html</filename>
    <member kind="function">
      <type></type>
      <name>oaFDSet</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchor>a1</anchor>
      <arglist>(oaUInt4 fd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchor>a2</anchor>
      <arglist>(oaUInt4 fd)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNextReady</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>select</name>
      <anchor>a4</anchor>
      <arglist>(oaUInt4 sec)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaFeature</name>
    <filename>classoaFeature.html</filename>
    <base>oaSessionObject</base>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getID</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getName</name>
      <anchor>a1</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaDBType</type>
      <name>getDBType</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaDomain</type>
      <name>getDomain</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCategory</type>
      <name>getCategory</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaType</type>
      <name>getObjectType</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaDataModelModType</type>
      <name>getDataModelModType</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt2</type>
      <name>getDataModelRev</name>
      <anchor>oaFeature::getDataModelRev</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaFeatureArray</name>
    <filename>classoaFeatureArray.html</filename>
    <base>oaArray&lt; oaFeature * &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaFeatureArray</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 sizeIn=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaFile</name>
    <filename>classoaFile.html</filename>
    <base>oaFSComponent</base>
    <member kind="function">
      <type></type>
      <name>oaFile</name>
      <anchor>a0</anchor>
      <arglist>(const oaString &amp;nameIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaFile</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchor>a2</anchor>
      <arglist>(oaChar modeIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchor>a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>read</name>
      <anchor>a5</anchor>
      <arglist>(void *data, oaUInt4 numBytes)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>write</name>
      <anchor>a6</anchor>
      <arglist>(void *data, oaUInt4 numBytes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>exists</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isOpen</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isNonEmpty</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaChar</type>
      <name>getMode</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt8</type>
      <name>getSize</name>
      <anchor>a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaTime</type>
      <name>getLastWriteTime</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaTime</type>
      <name>getCreateTime</name>
      <anchor>oaFile::getCreateTime</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>void</type>
      <name>copyFile</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;srcPath, const oaString &amp;dstPath)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaFlatGroupDef</name>
    <filename>classoaFlatGroupDef.html</filename>
    <base>oaGroupDef</base>
    <member kind="function" static="yes">
      <type>oaFlatGroupDef *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, const oaManagedTypeArray &amp;validTypes, const oaSubset&lt; oaDBType &gt; &amp;validDatabases)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaFloatAppDef</name>
    <filename>classoaFloatAppDef.html</filename>
    <templarg>T</templarg>
    <base>oaAppDef</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a0</anchor>
      <arglist>(T *object, oaFloat value)</arglist>
    </member>
    <member kind="function">
      <type>oaFloat</type>
      <name>get</name>
      <anchor>a1</anchor>
      <arglist>(const T *object)</arglist>
    </member>
    <member kind="function">
      <type>oaFloat</type>
      <name>getDefault</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaFloatAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, oaFloat defValue=0., oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaFloatAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef, oaFloat defValue=0, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaFloatAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d2</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaFloatAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d3</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaFloatProp</name>
    <filename>classoaFloatProp.html</filename>
    <base>oaProp</base>
    <member kind="function">
      <type>oaFloat</type>
      <name>getValue</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a1</anchor>
      <arglist>(oaFloat value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaFloatProp *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *object, const oaString &amp;name, oaFloat value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaFloatRangeProp</name>
    <filename>classoaFloatRangeProp.html</filename>
    <base>oaProp</base>
    <member kind="function">
      <type>oaFloat</type>
      <name>getValue</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaFloat</type>
      <name>getLowerBound</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaFloat</type>
      <name>getUpperBound</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a3</anchor>
      <arglist>(oaFloat value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a4</anchor>
      <arglist>(oaFloat lowerBound, oaFloat value, oaFloat upperBound)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaFloatRangeProp *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *object, const oaString &amp;name, oaFloat lowerBound, oaFloat value, oaFloat upperBound)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaFlt1DTblValue</name>
    <filename>classoaFlt1DTblValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>(oa1DLookupTbl&lt; oaFloat, oaFloat &gt; &amp;tbl) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(const oa1DLookupTbl&lt; oaFloat, oaFloat &gt; &amp;tbl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaFlt1DTblValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oa1DLookupTbl&lt; oaFloat, oaFloat &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaFlt2DTblValue</name>
    <filename>classoaFlt2DTblValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>(oa2DLookupTbl&lt; oaFloat, oaFloat, oaFloat &gt; &amp;tbl) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(const oa2DLookupTbl&lt; oaFloat, oaFloat, oaFloat &gt; &amp;tbl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaFlt2DTblValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oa2DLookupTbl&lt; oaFloat, oaFloat, oaFloat &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaFltIntFltTblValue</name>
    <filename>classoaFltIntFltTblValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>(oa2DLookupTbl&lt; oaFloat, oaInt4, oaFloat &gt; &amp;tbl) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(const oa2DLookupTbl&lt; oaFloat, oaInt4, oaFloat &gt; &amp;tbl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaFltIntFltTblValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oa2DLookupTbl&lt; oaFloat, oaInt4, oaFloat &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaFltValue</name>
    <filename>classoaFltValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>oaFloat</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(oaFloat value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaFltValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, oaFloat value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaFSComponent</name>
    <filename>classoaFSComponent.html</filename>
    <member kind="function">
      <type></type>
      <name>oaFSComponent</name>
      <anchor>a0</anchor>
      <arglist>(const oaString &amp;nameIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaFSComponent</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rename</name>
      <anchor>a3</anchor>
      <arglist>(const oaString &amp;newName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>exists</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isFile</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isDir</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isReadable</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isWritable</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isInCWD</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isSameDiskFile</name>
      <anchor>a12</anchor>
      <arglist>(const oaFSComponent &amp;file) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isSymbolicLink</name>
      <anchor>a13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFullName</name>
      <anchor>a15</anchor>
      <arglist>(oaString &amp;pathName) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaGateOrientationType</name>
    <filename>classoaGateOrientationType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaGateOrientationType</name>
      <anchor>a0</anchor>
      <arglist>(oaGateOrientationTypeEnum typeIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaGateOrientationType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaGateOrientationType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaGateOrientationTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaGroup</name>
    <filename>classoaGroup.html</filename>
    <base>oaObject</base>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getName</name>
      <anchor>a1</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaDomain</type>
      <name>getGroupDomain</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaGroupType</type>
      <name>getGroupType</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaGroupDeleteWhen</type>
      <name>getDeleteWhen</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isUniqueName</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isOrdered</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isEmpty</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchor>a8</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroupType</name>
      <anchor>a9</anchor>
      <arglist>(oaGroupType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeleteWhen</name>
      <anchor>a10</anchor>
      <arglist>(oaGroupDeleteWhen deleteWhen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUniqueName</name>
      <anchor>a11</anchor>
      <arglist>(oaBoolean value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrdered</name>
      <anchor>a12</anchor>
      <arglist>(oaBoolean value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeader</name>
      <anchor>a13</anchor>
      <arglist>(oaGroupMember *leader=NULL)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>hasDefaultConstraintGroup</name>
      <anchor>a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaConstraintGroup *</type>
      <name>getDefaultConstraintGroup</name>
      <anchor>a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaObject *</type>
      <name>getOwner</name>
      <anchor>a16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaGroupMember *</type>
      <name>getLeader</name>
      <anchor>a17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaGroupDef *</type>
      <name>getDef</name>
      <anchor>a18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaGroupMember, oaGroup &gt;</type>
      <name>getMembers</name>
      <anchor>a19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaGroup *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oaString &amp;name, oaGroupType groupType=oacSetGroupType, oaBoolean isUniqueName=true, oaBoolean isOrdered=false, oaGroupDeleteWhen deleteWhen=oacNeverGroupDeleteWhen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaGroup *</type>
      <name>create</name>
      <anchor>d1</anchor>
      <arglist>(oaObject *database, const oaString &amp;name, oaDomain domain, oaGroupType groupType=oacSetGroupType, oaBoolean isUniqueName=true, oaBoolean isOrdered=false, oaGroupDeleteWhen deleteWhen=oacNeverGroupDeleteWhen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaGroup *</type>
      <name>create</name>
      <anchor>d2</anchor>
      <arglist>(oaObject *database, const oaString &amp;name, oaGroupDef *groupDef, oaGroupType groupType=oacSetGroupType, oaBoolean isUniqueName=true, oaBoolean isOrdered=false, oaGroupDeleteWhen deleteWhen=oacNeverGroupDeleteWhen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaGroup *</type>
      <name>create</name>
      <anchor>d3</anchor>
      <arglist>(oaObject *database, const oaString &amp;name, oaDomain domain, oaGroupDef *groupDef, oaGroupType groupType=oacSetGroupType, oaBoolean isUniqueName=true, oaBoolean isOrdered=false, oaGroupDeleteWhen deleteWhen=oacNeverGroupDeleteWhen)</arglist>
    </member>
    <member kind="enumvalue">
      <name>dtIndex</name>
      <anchor>s2s0</anchor>
      <init> oacBaseGroupDataType</init>
    </member>
    <member kind="enumvalue">
      <name>domain</name>
      <anchor>s3s1</anchor>
      <init> oacNoDomain</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaGroupDef</name>
    <filename>classoaGroupDef.html</filename>
    <base>oaSessionObject</base>
    <member kind="function">
      <type>void</type>
      <name>getName</name>
      <anchor>a0</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getValidTypes</name>
      <anchor>a1</anchor>
      <arglist>(oaManagedTypeArray &amp;validTypes) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getValidDatabases</name>
      <anchor>a2</anchor>
      <arglist>(oaSubset&lt; oaDBType &gt; &amp;validDatabases) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isBuiltIn</name>
      <anchor>oaGroupDef::isBuiltIn</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchor>a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchor>a5</anchor>
      <arglist>(oaObject *database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaGroupDef *</type>
      <name>find</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaGroupDef *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(oaGroupPurposeType groupDefType)</arglist>
    </member>
    <member kind="enumvalue">
      <name>dtIndex</name>
      <anchor>s1s0</anchor>
      <init> oacBaseGroupDefDataType</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaGroupDefArray</name>
    <filename>classoaGroupDefArray.html</filename>
    <base>oaSubset&lt; oaGroupDef * &gt;</base>
  </compound>
  <compound kind="class">
    <name>oaGroupDeleteWhen</name>
    <filename>classoaGroupDeleteWhen.html</filename>
    <member kind="function">
      <type></type>
      <name>oaGroupDeleteWhen</name>
      <anchor>a0</anchor>
      <arglist>(oaGroupDeleteWhenEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaGroupDeleteWhen</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaGroupDeleteWhen</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaGroupDeleteWhenEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaGroupMember</name>
    <filename>classoaGroupMember.html</filename>
    <base>oaObject</base>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isLeader</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaGroup *</type>
      <name>getGroup</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaObject *</type>
      <name>getObject</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveAfter</name>
      <anchor>a4</anchor>
      <arglist>(oaGroupMember *member)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveToFirst</name>
      <anchor>a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaGroupMember *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaGroup *group, oaObject *object, oaBoolean isLeader=false)</arglist>
    </member>
    <member kind="enumvalue">
      <name>dtIndex</name>
      <anchor>s2s0</anchor>
      <init> oacBaseGroupMemDataType</init>
    </member>
    <member kind="enumvalue">
      <name>domain</name>
      <anchor>s3s1</anchor>
      <init> oacNoDomain</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaGroupPurposeType</name>
    <filename>classoaGroupPurposeType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaGroupPurposeType</name>
      <anchor>a0</anchor>
      <arglist>(oaGroupPurposeTypeEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaGroupPurposeType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaGroupPurposeTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaGroupType</name>
    <filename>classoaGroupType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaGroupType</name>
      <anchor>a0</anchor>
      <arglist>(oaGroupTypeEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaGroupType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaGroupType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaGroupTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaHashIter</name>
    <filename>classoaHashIter.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNext</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="public">
      <type></type>
      <name>oaHashIter</name>
      <anchor>b0</anchor>
      <arglist>(oaHashTbl&lt; T &gt; &amp;tblIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaHashMap</name>
    <filename>classoaHashMap.html</filename>
    <templarg>K</templarg>
    <templarg>D</templarg>
    <member kind="function">
      <type></type>
      <name>oaHashMap</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 sizeIn=32)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchor>a1</anchor>
      <arglist>(const K &amp;key, const D &amp;datum)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>find</name>
      <anchor>a2</anchor>
      <arglist>(const K &amp;key, D &amp;datum) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchor>a3</anchor>
      <arglist>(const K &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumEntries</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="public" virtualness="pure">
      <type>virtual void</type>
      <name>hash</name>
      <anchor>b0</anchor>
      <arglist>(K key, oaUInt4 &amp;start, oaUInt4 &amp;stride) const=0</arglist>
    </member>
    <member kind="function" protection="public" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>compare</name>
      <anchor>b1</anchor>
      <arglist>(K key1, K key2) const=0</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>hashIndex</name>
      <anchor>b2</anchor>
      <arglist>(oaUInt4 index, oaUInt4 &amp;start, oaUInt4 &amp;stride) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaBoolean</type>
      <name>compareIndex</name>
      <anchor>b3</anchor>
      <arglist>(oaUInt4 index, const K &amp;key) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>const oaHashMapTbl&lt; K, D &gt; *</type>
      <name>getHashTbl</name>
      <anchor>b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaHashMapTbl&lt; K, D &gt;</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaHashMapIter&lt; K, D &gt;</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaHashMapIter</name>
    <filename>classoaHashMapIter.html</filename>
    <templarg>K</templarg>
    <templarg>D</templarg>
    <member kind="function">
      <type></type>
      <name>oaHashMapIter</name>
      <anchor>a0</anchor>
      <arglist>(oaHashMap&lt; K, D &gt; &amp;mapIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>getNext</name>
      <anchor>a2</anchor>
      <arglist>(K &amp;key, D &amp;datum)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaHashMapTbl</name>
    <filename>classoaHashMapTbl.html</filename>
    <templarg>K</templarg>
    <templarg>D</templarg>
    <base>oaHashTbl&lt; oaUInt4 &gt;</base>
    <member kind="function" protection="public">
      <type></type>
      <name>oaHashMapTbl</name>
      <anchor>b0</anchor>
      <arglist>(oaUInt4 sizeIn=32)</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual void</type>
      <name>hash</name>
      <anchor>b1</anchor>
      <arglist>(oaUInt4 index, oaUInt4 &amp;start, oaUInt4 &amp;stride) const</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>compare</name>
      <anchor>b2</anchor>
      <arglist>(oaUInt4 index, const void *data) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>setOwner</name>
      <anchor>b3</anchor>
      <arglist>(oaHashMap&lt; K, D &gt; *ownerIn)</arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaHashMap&lt; K, D &gt;</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaHashSetTbl</name>
    <filename>classoaHashSetTbl.html</filename>
    <templarg>K</templarg>
    <base>oaHashTbl&lt; oaUInt4 &gt;</base>
    <member kind="function" protection="public">
      <type></type>
      <name>oaHashSetTbl</name>
      <anchor>b0</anchor>
      <arglist>(oaUInt4 sizeIn=32)</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual void</type>
      <name>hash</name>
      <anchor>b1</anchor>
      <arglist>(oaUInt4 index, oaUInt4 &amp;start, oaUInt4 &amp;stride) const</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>compare</name>
      <anchor>b2</anchor>
      <arglist>(oaUInt4 index, const void *data) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>setOwner</name>
      <anchor>b3</anchor>
      <arglist>(oaKeySizedHashSet&lt; K, false &gt; *ownerIn)</arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaKeySizedHashSet&lt; K, false &gt;</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaHashTbl</name>
    <filename>classoaHashTbl.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumEntries</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>add</name>
      <anchor>a1</anchor>
      <arglist>(T obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAtSlot</name>
      <anchor>a2</anchor>
      <arglist>(T obj, oaHashTblSlotId&lt; T &gt; &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchor>a3</anchor>
      <arglist>(T obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFromSlot</name>
      <anchor>a4</anchor>
      <arglist>(oaHashTblSlotId&lt; T &gt; &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaUInt8</type>
      <name>calcVMSize</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>genHash</name>
      <anchor>a6</anchor>
      <arglist>(const char *str, oaUInt4 &amp;start, oaUInt4 &amp;stride) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>genHash</name>
      <anchor>a7</anchor>
      <arglist>(oaUInt4 value, oaUInt4 &amp;start, oaUInt4 &amp;stride) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>genHash</name>
      <anchor>a8</anchor>
      <arglist>(oaUInt8 value, oaUInt4 &amp;start, oaUInt4 &amp;stride) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>genHash</name>
      <anchor>a9</anchor>
      <arglist>(void *ptr, oaUInt4 &amp;start, oaUInt4 &amp;stride) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>genHash</name>
      <anchor>a10</anchor>
      <arglist>(oaUInt4 scope, oaUInt4 index, oaUInt4 &amp;start, oaUInt4 &amp;stride) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginHash</name>
      <anchor>a11</anchor>
      <arglist>(oaUInt4 &amp;start, oaUInt4 &amp;stride) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateHash</name>
      <anchor>a12</anchor>
      <arglist>(const char *str, oaUInt4 &amp;start, oaUInt4 &amp;stride, oaBoolean toLower=false) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateHash</name>
      <anchor>a13</anchor>
      <arglist>(const char c, oaUInt4 &amp;start, oaUInt4 &amp;stride, oaBoolean toLower=false) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateHash</name>
      <anchor>a14</anchor>
      <arglist>(oaInt4 x, oaUInt4 &amp;start, oaUInt4 &amp;stride) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateHash</name>
      <anchor>a15</anchor>
      <arglist>(oaUInt4 value, oaUInt4 &amp;start, oaUInt4 &amp;stride) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endHash</name>
      <anchor>a16</anchor>
      <arglist>(oaUInt4 &amp;start, oaUInt4 &amp;stride) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type></type>
      <name>oaHashTbl</name>
      <anchor>b0</anchor>
      <arglist>(oaUInt4 sizeIn=32)</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual</type>
      <name>~oaHashTbl</name>
      <anchor>b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>find</name>
      <anchor>b2</anchor>
      <arglist>(oaUInt4 loc, oaUInt4 stride, const void *data) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>findSlot</name>
      <anchor>b3</anchor>
      <arglist>(oaUInt4 start, oaUInt4 stride, const void *data, oaHashTblSlotId&lt; T &gt; &amp;slot)</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchor>b4</anchor>
      <arglist>(oaUInt4 newSize)</arglist>
    </member>
    <member kind="function" protection="public" virtualness="pure">
      <type>virtual void</type>
      <name>hash</name>
      <anchor>b5</anchor>
      <arglist>(T obj, oaUInt4 &amp;start, oaUInt4 &amp;stride) const=0</arglist>
    </member>
    <member kind="function" protection="public" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>compare</name>
      <anchor>b6</anchor>
      <arglist>(T obj, const void *data) const=0</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>getLocation</name>
      <anchor>b7</anchor>
      <arglist>(T obj, oaUInt4 &amp;loc, oaUInt4 &amp;deletedKeyLoc) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>getNextLoc</name>
      <anchor>b8</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 stride, oaUInt4 &amp;start) const</arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaHashIter&lt; T &gt;</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaHashTblSlotId</name>
    <filename>classoaHashTblSlotId.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>oaHashTblSlotId</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isValid</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaHashTbl&lt; T &gt;</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaHierGroupDef</name>
    <filename>classoaHierGroupDef.html</filename>
    <base>oaGroupDef</base>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isRecursive</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getValidGroupTypes</name>
      <anchor>a1</anchor>
      <arglist>(oaGroupDefArray &amp;validGroupTypes) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaHierGroupDef *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, const oaManagedTypeArray &amp;validTypes, const oaSubset&lt; oaDBType &gt; &amp;validDatabases)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaHierGroupDef *</type>
      <name>create</name>
      <anchor>d1</anchor>
      <arglist>(const oaString &amp;name, const oaManagedTypeArray &amp;validTypes, const oaSubset&lt; oaDBType &gt; &amp;validDatabases, const oaGroupDefArray &amp;validGroupTypes, oaBoolean recursive=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaHierProp</name>
    <filename>classoaHierProp.html</filename>
    <base>oaProp</base>
    <member kind="function" static="yes">
      <type>oaHierProp *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *object, const oaString &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ILockFactory</name>
    <filename>classILockFactory.html</filename>
    <templarg>LockType</templarg>
    <member kind="function" virtualness="pure">
      <type>virtual LockType *</type>
      <name>create</name>
      <anchor>a0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>destroy</name>
      <anchor>a1</anchor>
      <arglist>(LockType *lock)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oa::oaUInt8</type>
      <name>calcVMSize</name>
      <anchor>a2</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>const oaCommon::Guid &amp;</type>
      <name>getId</name>
      <anchor>d0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaInt1DTblValue</name>
    <filename>classoaInt1DTblValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>(oa1DLookupTbl&lt; oaInt4, oaInt4 &gt; &amp;tbl) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(const oa1DLookupTbl&lt; oaInt4, oaInt4 &gt; &amp;tbl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaInt1DTblValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oa1DLookupTbl&lt; oaInt4, oaInt4 &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaInt2DTblValue</name>
    <filename>classoaInt2DTblValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>(oa2DLookupTbl&lt; oaInt4, oaInt4, oaInt4 &gt; &amp;tbl) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(const oa2DLookupTbl&lt; oaInt4, oaInt4, oaInt4 &gt; &amp;tbl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaInt2DTblValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oa2DLookupTbl&lt; oaInt4, oaInt4, oaInt4 &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaIntAppDef</name>
    <filename>classoaIntAppDef.html</filename>
    <templarg>T</templarg>
    <base>oaAppDef</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a0</anchor>
      <arglist>(T *object, oaInt4 value)</arglist>
    </member>
    <member kind="function">
      <type>oaInt4</type>
      <name>get</name>
      <anchor>a1</anchor>
      <arglist>(const T *object)</arglist>
    </member>
    <member kind="function">
      <type>oaInt4</type>
      <name>getDefault</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, oaInt4 defValue=0, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef, oaInt4 defValue=0, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d2</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d3</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaIntDualIntArrayTblValue</name>
    <filename>classoaIntDualIntArrayTblValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>(oa1DLookupTbl&lt; oaInt4, oaDualIntArray &gt; &amp;tbl) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(const oa1DLookupTbl&lt; oaInt4, oaDualIntArray &gt; &amp;tbl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntDualIntArrayTblValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oa1DLookupTbl&lt; oaInt4, oaDualIntArray &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaInterPointerAppDef</name>
    <filename>classoaInterPointerAppDef.html</filename>
    <templarg>T</templarg>
    <base>oaAppDef</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a0</anchor>
      <arglist>(T *object, const oaObject *otherObject)</arglist>
    </member>
    <member kind="function">
      <type>oaObject *</type>
      <name>get</name>
      <anchor>a1</anchor>
      <arglist>(const T *object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaInterPointerAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaInterPointerAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaInterPointerAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d2</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaInterPointerAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d3</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaInterpolateType</name>
    <filename>classoaInterpolateType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaInterpolateType</name>
      <anchor>a0</anchor>
      <arglist>(oaInterpolateTypeEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaInterpolateType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;nameIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaInterpolateType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaInterpolateTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaIntFltTblValue</name>
    <filename>classoaIntFltTblValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>(oa1DLookupTbl&lt; oaInt4, oaFloat &gt; &amp;tbl) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(const oa1DLookupTbl&lt; oaInt4, oaFloat &gt; &amp;tbl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntFltTblValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oa1DLookupTbl&lt; oaInt4, oaFloat &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaIntProp</name>
    <filename>classoaIntProp.html</filename>
    <base>oaProp</base>
    <member kind="function">
      <type>oaInt4</type>
      <name>getValue</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a1</anchor>
      <arglist>(oaInt4 value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntProp *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *object, const oaString &amp;name, oaInt4 value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaIntRange</name>
    <filename>classoaIntRange.html</filename>
    <base>oaRange&lt; oaInt4 &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaIntRange</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaIntRange</name>
      <anchor>a1</anchor>
      <arglist>(oaRangeType type, oaInt4 value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaIntRange</name>
      <anchor>a2</anchor>
      <arglist>(oaRangeType type, oaInt4 lowerBoundIn, oaInt4 upperBoundIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaIntRangeArray</name>
    <filename>classoaIntRangeArray.html</filename>
    <base>oaArray&lt; oaIntRange &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaIntRangeArray</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 sizeIn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaIntRangeArray</name>
      <anchor>a1</anchor>
      <arglist>(const oaIntRange *arrayIn, oaUInt4 numElementsIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaIntRangeArray1DTblValue</name>
    <filename>classoaIntRangeArray1DTblValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>(oa1DLookupTbl&lt; oaInt4, oaIntRangeArray &gt; &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(const oa1DLookupTbl&lt; oaInt4, oaIntRangeArray &gt; &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntRangeArray1DTblValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oa1DLookupTbl&lt; oaInt4, oaIntRangeArray &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaIntRangeArray2DTblValue</name>
    <filename>classoaIntRangeArray2DTblValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>(oa2DLookupTbl&lt; oaInt4, oaInt4, oaIntRangeArray &gt; &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(const oa2DLookupTbl&lt; oaInt4, oaInt4, oaIntRangeArray &gt; &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntRangeArray2DTblValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oa2DLookupTbl&lt; oaInt4, oaInt4, oaIntRangeArray &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaIntRangeArrayValue</name>
    <filename>classoaIntRangeArrayValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>(oaIntRangeArray &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(const oaIntRangeArray &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntRangeArrayValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oaIntRangeArray &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaIntRangeProp</name>
    <filename>classoaIntRangeProp.html</filename>
    <base>oaProp</base>
    <member kind="function">
      <type>oaInt4</type>
      <name>getValue</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaInt4</type>
      <name>getLowerBound</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaInt4</type>
      <name>getUpperBound</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a3</anchor>
      <arglist>(oaInt4 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a4</anchor>
      <arglist>(oaInt4 lowerBound, oaInt4 value, oaInt4 upperBound)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntRangeProp *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *object, const oaString &amp;name, oaInt4 lowerBound, oaInt4 value, oaInt4 upperBound)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaIntRangeValue</name>
    <filename>classoaIntRangeValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>(oaIntRange &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(const oaIntRange &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntRangeValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oaIntRange &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaIntraPointerAppDef</name>
    <filename>classoaIntraPointerAppDef.html</filename>
    <templarg>T</templarg>
    <base>oaAppDef</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a0</anchor>
      <arglist>(T *object, const T *otherObject)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get</name>
      <anchor>a1</anchor>
      <arglist>(const T *object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntraPointerAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntraPointerAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntraPointerAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d2</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntraPointerAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d3</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaIntValue</name>
    <filename>classoaIntValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>oaInt4</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(oaInt4 value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaIntValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, oaInt4 value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaIter</name>
    <filename>classoaIter.html</filename>
    <templarg>obj</templarg>
    <base>oaBaseIter</base>
    <member kind="function">
      <type></type>
      <name>oaIter</name>
      <anchor>a0</anchor>
      <arglist>(const oaBaseCollection &amp;coll)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaIter</name>
      <anchor>a1</anchor>
      <arglist>(const oaIter&lt; obj &gt; &amp;iterIn)</arglist>
    </member>
    <member kind="function">
      <type>obj *</type>
      <name>getNext</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaKeySizedHashSet&lt; K, false &gt;</name>
    <filename>classoaKeySizedHashSet_3_01K_00_01false_01_4.html</filename>
    <templarg>K</templarg>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchor>a0</anchor>
      <arglist>(const K &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>find</name>
      <anchor>a1</anchor>
      <arglist>(const K &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchor>a2</anchor>
      <arglist>(const K &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumEntries</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="public">
      <type></type>
      <name>oaKeySizedHashSet</name>
      <anchor>b0</anchor>
      <arglist>(oaUInt4 sizeIn=32)</arglist>
    </member>
    <member kind="function" protection="public" virtualness="pure">
      <type>virtual void</type>
      <name>hash</name>
      <anchor>b1</anchor>
      <arglist>(K key, oaUInt4 &amp;start, oaUInt4 &amp;stride) const=0</arglist>
    </member>
    <member kind="function" protection="public" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>compare</name>
      <anchor>b2</anchor>
      <arglist>(K key1, K key2) const=0</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>hashIndex</name>
      <anchor>b3</anchor>
      <arglist>(oaUInt4 index, oaUInt4 &amp;start, oaUInt4 &amp;stride) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaBoolean</type>
      <name>compareIndex</name>
      <anchor>b4</anchor>
      <arglist>(oaUInt4 index, const K &amp;key) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>const oaHashSetTbl&lt; K &gt; *</type>
      <name>getHashTbl</name>
      <anchor>b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaHashSetTbl&lt; K &gt;</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaKeySizedHashSetIter&lt; K, false &gt;</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaKeySizedHashSet&lt; K, true &gt;</name>
    <filename>classoaKeySizedHashSet_3_01K_00_01true_01_4.html</filename>
    <templarg>K</templarg>
    <base>oaHashTbl&lt; K &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaKeySizedHashSet</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 sizeIn=32)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>find</name>
      <anchor>a1</anchor>
      <arglist>(const K &amp;key) const</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>compare</name>
      <anchor>b0</anchor>
      <arglist>(K key, const void *data) const</arglist>
    </member>
    <member kind="function" protection="public" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>compare</name>
      <anchor>b1</anchor>
      <arglist>(K key1, K key2) const=0</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaHashTbl&lt; K &gt; *</type>
      <name>getHashTbl</name>
      <anchor>b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaKeySizedHashSetIter&lt; K, true &gt;</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaKeySizedHashSetIter&lt; K, false &gt;</name>
    <filename>classoaKeySizedHashSetIter_3_01K_00_01false_01_4.html</filename>
    <templarg>K</templarg>
    <member kind="function">
      <type></type>
      <name>oaKeySizedHashSetIter</name>
      <anchor>a0</anchor>
      <arglist>(oaKeySizedHashSet&lt; K, false &gt; &amp;setIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>getNext</name>
      <anchor>a2</anchor>
      <arglist>(K &amp;key)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaKeySizedHashSetIter&lt; K, true &gt;</name>
    <filename>classoaKeySizedHashSetIter_3_01K_00_01true_01_4.html</filename>
    <templarg>K</templarg>
    <member kind="function">
      <type></type>
      <name>oaKeySizedHashSetIter</name>
      <anchor>a0</anchor>
      <arglist>(oaKeySizedHashSet&lt; K, true &gt; &amp;setIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>getNext</name>
      <anchor>a2</anchor>
      <arglist>(K &amp;key)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaLayerArrayConstraintDef</name>
    <filename>classoaLayerArrayConstraintDef.html</filename>
    <base>oaConstraintDef</base>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumLayers</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaLayerArrayConstraintDef *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, const oaSubset&lt; oaType &gt; &amp;allowedValues, const oaSubset&lt; oaType &gt; &amp;allowedObjects, const oaSubset&lt; oaDBType &gt; &amp;allowedDB, oaUInt4 numLayers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaLayerArrayConstraintDef *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(oaLayerArrayConstraintType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaLayerArrayConstraintType</name>
    <filename>classoaLayerArrayConstraintType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaLayerArrayConstraintType</name>
      <anchor>a0</anchor>
      <arglist>(oaLayerArrayConstraintTypeEnum typeIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaLayerArrayConstraintType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaLayerArrayConstraintType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaLayerArrayConstraintTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>void</type>
      <name>validate</name>
      <anchor>d0</anchor>
      <arglist>(oaLayerArrayConstraintTypeEnum typeIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaLayerConstraintDef</name>
    <filename>classoaLayerConstraintDef.html</filename>
    <base>oaConstraintDef</base>
    <member kind="function" static="yes">
      <type>oaLayerConstraintDef *</type>
      <name>create</name>
      <anchor>oaLayerConstraintDef::create</anchor>
      <arglist>(const oaString &amp;name, const oaSubset&lt; oaType &gt; &amp;allowedValues, const oaSubset&lt; oaType &gt; &amp;allowedObjects, const oaSubset&lt; oaDBType &gt; &amp;allowedDB)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaLayerConstraintDef *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(oaLayerConstraintType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaLayerConstraintType</name>
    <filename>classoaLayerConstraintType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaLayerConstraintType</name>
      <anchor>a0</anchor>
      <arglist>(oaLayerConstraintTypeEnum typeIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaLayerConstraintType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaLayerConstraintType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaLayerConstraintTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>void</type>
      <name>validate</name>
      <anchor>d0</anchor>
      <arglist>(oaLayerConstraintTypeEnum typeIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaLayerPairConstraintDef</name>
    <filename>classoaLayerPairConstraintDef.html</filename>
    <base>oaConstraintDef</base>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isSymmetric</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaLayerPairConstraintDef *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, const oaSubset&lt; oaType &gt; &amp;allowedValues, const oaSubset&lt; oaType &gt; &amp;allowedObjects, const oaSubset&lt; oaDBType &gt; &amp;allowedDB, oaBoolean symmetric=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaLayerPairConstraintDef *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(oaLayerPairConstraintType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaLayerPairConstraintType</name>
    <filename>classoaLayerPairConstraintType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaLayerPairConstraintType</name>
      <anchor>a0</anchor>
      <arglist>(oaLayerPairConstraintTypeEnum typeIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaLayerPairConstraintType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaLayerPairConstraintType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaLayerPairConstraintTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>void</type>
      <name>validate</name>
      <anchor>d0</anchor>
      <arglist>(oaLayerPairConstraintTypeEnum typeIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaLefNS</name>
    <filename>classoaLefNS.html</filename>
    <base>oaNameSpace</base>
    <member kind="function">
      <type></type>
      <name>oaLefNS</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOpenBusChar</name>
      <anchor>a8</anchor>
      <arglist>(oaChar c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCloseBusChar</name>
      <anchor>a9</anchor>
      <arglist>(oaChar c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHierDelimiter</name>
      <anchor>a10</anchor>
      <arglist>(oaChar c)</arglist>
    </member>
    <member kind="function">
      <type>oaChar</type>
      <name>getHierDelimiter</name>
      <anchor>a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaChar</type>
      <name>getOpenBusChar</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaChar</type>
      <name>getCloseBusChar</name>
      <anchor>a13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>b1</anchor>
      <arglist>(const oaVectorName &amp;n1, const oaVectorBitName &amp;n2) const</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual void</type>
      <name>getInternalVector</name>
      <anchor>b5</anchor>
      <arglist>(const oaChar *in, oaVectorName &amp;out, oaBoolean baseOnly=false) const</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual void</type>
      <name>getVectorName</name>
      <anchor>b9</anchor>
      <arglist>(const oaVectorName &amp;in, oaString &amp;out, oaUInt4 &amp;loc) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaBoolean</type>
      <name>isNonPrintableChar</name>
      <anchor>b13</anchor>
      <arglist>(oaChar c) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaBoolean</type>
      <name>isNormalChar</name>
      <anchor>b14</anchor>
      <arglist>(oaChar c) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaBoolean</type>
      <name>isBusChar</name>
      <anchor>b15</anchor>
      <arglist>(oaChar c) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaBoolean</type>
      <name>isHexDelimiter</name>
      <anchor>b16</anchor>
      <arglist>(oaChar c) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaBoolean</type>
      <name>isEscChar</name>
      <anchor>b17</anchor>
      <arglist>(oaChar c) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaBoolean</type>
      <name>isEscapableChar</name>
      <anchor>b18</anchor>
      <arglist>(oaChar c) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaBoolean</type>
      <name>isHierChar</name>
      <anchor>b19</anchor>
      <arglist>(oaChar c) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaManagedType</name>
    <filename>classoaManagedType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaManagedType</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaManagedType</name>
      <anchor>a1</anchor>
      <arglist>(oaTypeEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaManagedType</name>
      <anchor>a2</anchor>
      <arglist>(oaAbstractTypeEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaManagedType</name>
      <anchor>a3</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaManagedType</name>
      <anchor>a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isConcrete</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaAbstractType</type>
      <name>getAbstractType</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaType</type>
      <name>getConcreteType</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isValid</name>
      <anchor>a9</anchor>
      <arglist>(oaType testType) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator&gt;</name>
      <anchor>a10</anchor>
      <arglist>(const oaManagedType &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a11</anchor>
      <arglist>(const oaManagedType &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a12</anchor>
      <arglist>(const oaManagedType &amp;rhs) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaManagedTypeArray</name>
    <filename>classoaManagedTypeArray.html</filename>
    <base>oaSubset&lt; oaManagedType &gt;</base>
  </compound>
  <compound kind="class">
    <name>oaMapFile</name>
    <filename>classoaMapFile.html</filename>
    <base>oaFile</base>
    <member kind="function">
      <type></type>
      <name>oaMapFile</name>
      <anchor>a0</anchor>
      <arglist>(const oaString &amp;nameIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaMapFile</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaByte *</type>
      <name>map</name>
      <anchor>a2</anchor>
      <arglist>(oaUInt4 &amp;size, oaUInt8 &amp;offset, void *mapLoc=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unmap</name>
      <anchor>a3</anchor>
      <arglist>(oaByte *mapLoc, oaUInt4 size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchor>a4</anchor>
      <arglist>(oaUInt8 size)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt8</type>
      <name>getMappableSize</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaMapFileWindow *</type>
      <name>getFirstWindow</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeWindows</name>
      <anchor>a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isMapped</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>getSwap</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSwap</name>
      <anchor>a10</anchor>
      <arglist>(oaBoolean swapIn)</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>addWindow</name>
      <anchor>b2</anchor>
      <arglist>(oaMapFileWindow *window)</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>removeWindow</name>
      <anchor>b3</anchor>
      <arglist>(oaMapFileWindow *window)</arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaMapFileWindow</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaMapFileWindow</name>
    <filename>classoaMapFileWindow.html</filename>
    <base>oaMapWindow</base>
    <member kind="function">
      <type></type>
      <name>oaMapFileWindow</name>
      <anchor>a1</anchor>
      <arglist>(oaByte *dataIn, oaUInt4 sizeIn, oaUInt8 offsetIn, oaMapFile &amp;mapFileIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>map</name>
      <anchor>a3</anchor>
      <arglist>(oaUInt4 sizeIn=0, oaUInt8 offsetIn=0, void *mapLoc=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unmap</name>
      <anchor>a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>move</name>
      <anchor>a5</anchor>
      <arglist>(oaUInt4 sizeIn, oaUInt8 offsetIn, oaBoolean resize=false)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>extend</name>
      <anchor>a6</anchor>
      <arglist>(oaUInt4 sizeIn)</arglist>
    </member>
    <member kind="function">
      <type>oaMapFile &amp;</type>
      <name>getMapFile</name>
      <anchor>a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaMapFile &amp;</type>
      <name>getMapFile</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaMapFileWindow *</type>
      <name>getNext</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMapFile</name>
      <anchor>a10</anchor>
      <arglist>(oaMapFile &amp;mapFileIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchor>a11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeSwapCheck</name>
      <anchor>a12</anchor>
      <arglist>(oaUInt4 &amp;loc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readSwapCheck</name>
      <anchor>a13</anchor>
      <arglist>(oaUInt4 &amp;loc)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>getSwap</name>
      <anchor>a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>setNext</name>
      <anchor>b0</anchor>
      <arglist>(oaMapFileWindow *nextIn)</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>setSwap</name>
      <anchor>b1</anchor>
      <arglist>(oaBoolean swap)</arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaMapFile</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaMapWindow</name>
    <filename>classoaMapWindow.html</filename>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isMapped</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isMapped</name>
      <anchor>a3</anchor>
      <arglist>(oaUInt4 sizeIn, oaUInt8 offsetIn, oaUInt4 &amp;loc) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getSize</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt8</type>
      <name>getOffset</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getLoc</name>
      <anchor>a6</anchor>
      <arglist>(oaUInt8 offsetIn) const</arglist>
    </member>
    <member kind="function">
      <type>oaByte &amp;</type>
      <name>operator[]</name>
      <anchor>a7</anchor>
      <arglist>(oaUInt4 index)</arglist>
    </member>
    <member kind="function">
      <type>oaByte *</type>
      <name>getBytes</name>
      <anchor>a8</anchor>
      <arglist>(oaUInt4 loc) const</arglist>
    </member>
    <member kind="function">
      <type>const oaPackedData &amp;</type>
      <name>data</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaMemory</name>
    <filename>classoaMemory.html</filename>
    <member kind="function" static="yes">
      <type>void *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>void *</type>
      <name>resize</name>
      <anchor>d1</anchor>
      <arglist>(void *ptr, size_t size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>void</type>
      <name>free</name>
      <anchor>d2</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaMemoryError</name>
    <filename>classoaMemoryError.html</filename>
    <base>oaException</base>
    <member kind="function">
      <type>oaUInt8</type>
      <name>getAllocSize</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt8</type>
      <name>getSbrk</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt8</type>
      <name>getOAVMSize</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt8</type>
      <name>getAvailableMem</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt8</type>
      <name>getPhysicalMem</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt8</type>
      <name>getLimitMem</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isUnlimited</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaMemoryErrorFactory</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaMutex</name>
    <filename>classoaMutex.html</filename>
    <base virtualness="virtual">oaMutexBase</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>lock</name>
      <anchor>a0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unlock</name>
      <anchor>a1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="public">
      <type></type>
      <name>oaMutex</name>
      <anchor>b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual</type>
      <name>~oaMutex</name>
      <anchor>b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="public">
      <type></type>
      <name>oaMutex</name>
      <anchor>b2</anchor>
      <arglist>(const oaMutex &amp;src)</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaMutex &amp;</type>
      <name>operator=</name>
      <anchor>b3</anchor>
      <arglist>(const oaMutex &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaMutexBase</name>
    <filename>classoaMutexBase.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>isLockEnabled</name>
      <anchor>a0</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setLockEnabled</name>
      <anchor>a1</anchor>
      <arglist>(oaBoolean onOrOff)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaUInt8</type>
      <name>calcVMSize</name>
      <anchor>a2</anchor>
      <arglist>() const=0</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual</type>
      <name>~oaMutexBase</name>
      <anchor>b0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaName</name>
    <filename>classoaName.html</filename>
    <member kind="function">
      <type></type>
      <name>oaName</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaName</name>
      <anchor>a1</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaName</name>
      <anchor>a2</anchor>
      <arglist>(const oaName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaName</name>
      <anchor>a3</anchor>
      <arglist>(const oaSimpleName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaName</name>
      <anchor>a4</anchor>
      <arglist>(const oaBundleName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaName</name>
      <anchor>a5</anchor>
      <arglist>(const oaVectorName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaName</name>
      <anchor>a6</anchor>
      <arglist>(const oaVectorBitName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaName</name>
      <anchor>a7</anchor>
      <arglist>(const oaScalarName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaName</name>
      <anchor>a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchor>a9</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a10</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a11</anchor>
      <arglist>(oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBitName</name>
      <anchor>a12</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, oaUInt4 bit, oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>oaNameType</type>
      <name>getType</name>
      <anchor>a13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumBits</name>
      <anchor>a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaScalarName *</type>
      <name>getScalar</name>
      <anchor>a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaVectorName *</type>
      <name>getVector</name>
      <anchor>a16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaVectorBitName *</type>
      <name>getVectorBit</name>
      <anchor>a17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBundleName *</type>
      <name>getBundle</name>
      <anchor>a18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierPath</name>
      <anchor>a19</anchor>
      <arglist>(const oaScalarName &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierPath</name>
      <anchor>a20</anchor>
      <arglist>(const oaVectorBitName &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierMem</name>
      <anchor>a21</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in, oaUInt4 len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierMem</name>
      <anchor>a22</anchor>
      <arglist>(const oaNameMem &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>oaName &amp;</type>
      <name>operator=</name>
      <anchor>a23</anchor>
      <arglist>(const oaName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>oaName &amp;</type>
      <name>operator=</name>
      <anchor>a24</anchor>
      <arglist>(const oaScalarName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>oaName &amp;</type>
      <name>operator=</name>
      <anchor>a25</anchor>
      <arglist>(const oaVectorName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>oaName &amp;</type>
      <name>operator=</name>
      <anchor>a26</anchor>
      <arglist>(const oaVectorBitName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>oaName &amp;</type>
      <name>operator=</name>
      <anchor>a27</anchor>
      <arglist>(const oaBundleName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>oaName &amp;</type>
      <name>operator=</name>
      <anchor>a28</anchor>
      <arglist>(const oaSimpleName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a29</anchor>
      <arglist>(const oaName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a30</anchor>
      <arglist>(const oaSimpleName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a31</anchor>
      <arglist>(const oaBundleName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a32</anchor>
      <arglist>(const oaVectorName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a33</anchor>
      <arglist>(const oaVectorBitName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a34</anchor>
      <arglist>(const oaScalarName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a35</anchor>
      <arglist>(const oaName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a36</anchor>
      <arglist>(const oaSimpleName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a37</anchor>
      <arglist>(const oaBundleName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a38</anchor>
      <arglist>(const oaVectorName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a39</anchor>
      <arglist>(const oaVectorBitName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a40</anchor>
      <arglist>(const oaScalarName &amp;name) const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaNameTbl</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaNameBase</name>
    <filename>classoaNameBase.html</filename>
    <member kind="function">
      <type></type>
      <name>oaNameBase</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaNameBase</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isHier</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isEmpty</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumMembers</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaNameMem &amp;</type>
      <name>operator[]</name>
      <anchor>a5</anchor>
      <arglist>(oaUInt4 i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierPath</name>
      <anchor>a6</anchor>
      <arglist>(const oaScalarName &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierPath</name>
      <anchor>a7</anchor>
      <arglist>(const oaVectorBitName &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierMem</name>
      <anchor>a8</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in, oaUInt4 len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierMem</name>
      <anchor>a9</anchor>
      <arglist>(const oaNameMem &amp;in)</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>getSize</name>
      <anchor>b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>resize</name>
      <anchor>b1</anchor>
      <arglist>(oaUInt4 newSize)</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>truncate</name>
      <anchor>b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaNameTbl</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaNameMem</name>
    <filename>classoaNameMem.html</filename>
    <member kind="function">
      <type></type>
      <name>oaNameMem</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaNameMem</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;in, oaBoolean caseSensitive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaNameMem</name>
      <anchor>a2</anchor>
      <arglist>(const oaChar *in, oaBoolean caseSensitive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaNameMem</name>
      <anchor>a3</anchor>
      <arglist>(const oaNameMem &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isCaseSensitive</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>hasIndex</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getIndex</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getValue</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBaseName</name>
      <anchor>a8</anchor>
      <arglist>(oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>oaNameMem &amp;</type>
      <name>operator=</name>
      <anchor>a9</anchor>
      <arglist>(const oaNameMem &amp;value)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaNameTbl</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaNameBase</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaScalarName</name>
      <anchor>l2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaVectorBitName</name>
      <anchor>l3</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaVectorName</name>
      <anchor>l4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaNameSpace</name>
    <filename>classoaNameSpace.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaNameSpace</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>a1</anchor>
      <arglist>(const oaScalarName &amp;n1, const oaScalarName &amp;n2) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>a2</anchor>
      <arglist>(const oaVectorName &amp;n1, const oaVectorName &amp;n2) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>a3</anchor>
      <arglist>(const oaVectorBitName &amp;n1, const oaVectorBitName &amp;n2) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>a4</anchor>
      <arglist>(const oaBundleName &amp;n1, const oaBundleName &amp;n2) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>a5</anchor>
      <arglist>(const oaSimpleName &amp;n1, const oaSimpleName &amp;n2) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>a6</anchor>
      <arglist>(const oaName &amp;n1, const oaName &amp;n2) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>oaNameSpace::isEqual</anchor>
      <arglist>(const oaNameMem &amp;n1, const oaNameMem &amp;n2) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual oaNameType</type>
      <name>getType</name>
      <anchor>oaNameSpace::getType</anchor>
      <arglist>(const oaChar *in) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getInternalMember</name>
      <anchor>oaNameSpace::getInternalMember</anchor>
      <arglist>(const oaChar *in, oaString &amp;out, oaBoolean &amp;caseSensitive, oaUInt4 len, oaUInt4 flags=0) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getInternalScalar</name>
      <anchor>oaNameSpace::getInternalScalar</anchor>
      <arglist>(const oaChar *in, oaScalarName &amp;out) const=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getInternalVBit</name>
      <anchor>a11</anchor>
      <arglist>(const oaChar *in, oaVectorBitName &amp;out, oaBoolean baseOnly=false) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getInternalVector</name>
      <anchor>a12</anchor>
      <arglist>(const oaChar *in, oaVectorName &amp;out, oaBoolean baseOnly=false) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getInternalBundle</name>
      <anchor>a13</anchor>
      <arglist>(const oaChar *in, oaBundleName &amp;out) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getMember</name>
      <anchor>oaNameSpace::getMember</anchor>
      <arglist>(const oaChar *in, oaBoolean caseSensitive, oaString &amp;out, oaUInt4 &amp;loc, oaUInt4 flags=0) const=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMemberArray</name>
      <anchor>a15</anchor>
      <arglist>(const oaNameMem *in, oaUInt4 numMembers, oaString &amp;out, oaUInt4 &amp;loc) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getScalarName</name>
      <anchor>oaNameSpace::getScalarName</anchor>
      <arglist>(const oaScalarName &amp;in, oaString &amp;out, oaUInt4 &amp;loc) const=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getVectorName</name>
      <anchor>a17</anchor>
      <arglist>(const oaVectorName &amp;in, oaString &amp;out, oaUInt4 &amp;loc) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getVectorBitName</name>
      <anchor>a18</anchor>
      <arglist>(const oaVectorBitName &amp;in, oaString &amp;out, oaUInt4 &amp;loc) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getVectorBitName</name>
      <anchor>a19</anchor>
      <arglist>(const oaNameMem *in, oaUInt4 numMembers, oaUInt4 start, oaString &amp;out, oaUInt4 &amp;loc) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getBundleName</name>
      <anchor>a20</anchor>
      <arglist>(const oaBundleName &amp;in, oaString &amp;out, oaUInt4 &amp;loc) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSimpleName</name>
      <anchor>a21</anchor>
      <arglist>(const oaSimpleName &amp;in, oaString &amp;out, oaUInt4 &amp;loc) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>get</name>
      <anchor>oaNameSpace::get</anchor>
      <arglist>(const oaByte *data, oaString &amp;out, oaUInt4 &amp;loc) const=0</arglist>
    </member>
    <member kind="function" protection="public" virtualness="pure">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>b0</anchor>
      <arglist>(const oaVectorName &amp;n1, const oaVectorBitName &amp;n2) const=0</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>decodeChar</name>
      <anchor>b1</anchor>
      <arglist>(const oaChar *str, oaChar &amp;out, oaUInt2 &amp;shift) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>encodeChar</name>
      <anchor>b2</anchor>
      <arglist>(oaChar *str, oaChar delimiter, oaChar c) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>writeChar</name>
      <anchor>b3</anchor>
      <arglist>(oaString &amp;str, oaUInt4 &amp;index, oaChar val) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>void</type>
      <name>writeInt</name>
      <anchor>b4</anchor>
      <arglist>(oaString &amp;str, oaUInt4 &amp;index, int val) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>getUInt</name>
      <anchor>b5</anchor>
      <arglist>(const oaChar *&amp;str) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>getUInt</name>
      <anchor>b6</anchor>
      <arglist>(const oaChar *str, oaUInt4 &amp;end) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaUInt4</type>
      <name>readUInt4</name>
      <anchor>oaNameSpace::readUInt4</anchor>
      <arglist>(const oaByte *data, oaUInt4 &amp;loc) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>const char *</type>
      <name>readStr</name>
      <anchor>oaNameSpace::readStr</anchor>
      <arglist>(const oaByte *data, oaUInt4 &amp;loc) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaBoolean</type>
      <name>isInternalNormalChar</name>
      <anchor>b9</anchor>
      <arglist>(oaChar c) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaBoolean</type>
      <name>isInternalBusChar</name>
      <anchor>b10</anchor>
      <arglist>(oaChar c) const</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaBoolean</type>
      <name>isInternalHexDelimiter</name>
      <anchor>b11</anchor>
      <arglist>(oaChar c) const</arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaNameBase</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaScalarName</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaVectorName</name>
      <anchor>l2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaVectorBitName</name>
      <anchor>l3</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaBundleName</name>
      <anchor>l4</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaSimpleName</name>
      <anchor>l5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="public">
      <type>friend class</type>
      <name>oaName</name>
      <anchor>l6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaNameType</name>
    <filename>classoaNameType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaNameType</name>
      <anchor>a0</anchor>
      <arglist>(oaNameTypeEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaNameType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaNameType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaNameTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaNativeNS</name>
    <filename>classoaNativeNS.html</filename>
    <base>oaNameSpace</base>
    <member kind="function">
      <type></type>
      <name>oaNativeNS</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>a1</anchor>
      <arglist>(const oaScalarName &amp;n1, const oaScalarName &amp;n2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>a2</anchor>
      <arglist>(const oaVectorName &amp;n1, const oaVectorName &amp;n2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>a3</anchor>
      <arglist>(const oaVectorBitName &amp;n1, const oaVectorBitName &amp;n2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>a4</anchor>
      <arglist>(const oaBundleName &amp;n1, const oaBundleName &amp;n2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>a5</anchor>
      <arglist>(const oaSimpleName &amp;n1, const oaSimpleName &amp;n2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>isEqual</name>
      <anchor>a6</anchor>
      <arglist>(const oaName &amp;n1, const oaName &amp;n2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaNameType</type>
      <name>getType</name>
      <anchor>a7</anchor>
      <arglist>(const oaChar *in) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaNeighborLayerMetalType</name>
    <filename>classoaNeighborLayerMetalType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaNeighborLayerMetalType</name>
      <anchor>a0</anchor>
      <arglist>(oaNeighborLayerMetalTypeEnum type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaNeighborLayerMetalType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaNeighborLayerMetalTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaObject</name>
    <filename>classoaObject.html</filename>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isValid</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaType</type>
      <name>getType</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaDomain</type>
      <name>getDomain</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isTech</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isDesign</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isDM</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isDMData</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isWafer</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isSession</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isProp</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isGroup</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isGroupMember</name>
      <anchor>a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isAppObject</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isConstraint</name>
      <anchor>a13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isConstraintGroup</name>
      <anchor>a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isConstraintGroupMem</name>
      <anchor>a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isConstraintGroupHeader</name>
      <anchor>a16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isConstraintParam</name>
      <anchor>a17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isValue</name>
      <anchor>a18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isViaVariant</name>
      <anchor>a19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isViaVariantHeader</name>
      <anchor>a20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>hasProp</name>
      <anchor>a21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>inGroup</name>
      <anchor>a22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>hasAppDef</name>
      <anchor>a23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>hasConstraintGroup</name>
      <anchor>oaObject::hasConstraintGroup</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>hasAssociate</name>
      <anchor>a25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaConstraintGroup *</type>
      <name>getConstraintGroup</name>
      <anchor>oaObject::getConstraintGroup</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaObject *</type>
      <name>getDatabase</name>
      <anchor>a27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaProp, oaObject &gt;</type>
      <name>getProps</name>
      <anchor>a28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaAppDef, oaObject &gt;</type>
      <name>getAppDefs</name>
      <anchor>a29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaGroupMember, oaObject &gt;</type>
      <name>getGroupMems</name>
      <anchor>a30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaGroupMember, oaObject &gt;</type>
      <name>getGroupLeaders</name>
      <anchor>a31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaGroup, oaObject &gt;</type>
      <name>getGroupsOwnedBy</name>
      <anchor>a32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="enumvalue">
      <name>dbType</name>
      <anchor>s2s0</anchor>
      <init> oacBaseDBType</init>
    </member>
    <member kind="enumvalue">
      <name>domain</name>
      <anchor>s3s1</anchor>
      <init> oacNoDomain</init>
    </member>
    <member kind="function" protection="public">
      <type></type>
      <name>~oaObject</name>
      <anchor>b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaObjectPage</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaObjectArray</name>
    <filename>classoaObjectArray.html</filename>
    <base>oaArray&lt; oaObject * &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaObjectArray</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 sizeIn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaObjectArray</name>
      <anchor>a1</anchor>
      <arglist>(const oaObjectArray &amp;arrayIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaObserver</name>
    <filename>classoaObserver.html</filename>
    <templarg>T</templarg>
    <base>oaStdObserver&lt; T, oaTraits&lt; T &gt;::modTypeType &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaObserver</name>
      <anchor>oaObserver_constructor</anchor>
      <arglist>(oaUInt4 priorityIn, oaBoolean enabledIn=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaObserver&lt; oaAppDef, oacObserverVersion1 &gt;</name>
    <filename>classoaObserver_3oaAppDef_4.html</filename>
    <base>oaBaseObserver</base>
    <member kind="function">
      <type></type>
      <name>oaObserver</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 priorityIn, oaBoolean enabledIn=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaObserver</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPreModify</name>
      <anchor>a2</anchor>
      <arglist>(oaObject *object, oaAppDef *appDef)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPostModify</name>
      <anchor>a3</anchor>
      <arglist>(oaObject *object, oaAppDef *appDef)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onConflict</name>
      <anchor>a4</anchor>
      <arglist>(const oaString &amp;name, oaType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBoolean</type>
      <name>hasObservers</name>
      <anchor>d0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaObserver&lt; oaConstraintDef, oacObserverVersion1 &gt;</name>
    <filename>classoaObserver_3oaConstraintDef_4.html</filename>
    <base>oaBaseObserver</base>
    <member kind="function">
      <type></type>
      <name>oaObserver</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 priorityIn, oaBoolean enabledIn=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaObserver</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPreDestroy</name>
      <anchor>a2</anchor>
      <arglist>(oaConstraintDef *def)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPostCreate</name>
      <anchor>a3</anchor>
      <arglist>(oaConstraintDef *def)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onConflict</name>
      <anchor>a4</anchor>
      <arglist>(const oaString &amp;name, oaType defType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBoolean</type>
      <name>hasObservers</name>
      <anchor>d0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaObserver&lt; oaConstraintGroupDef, oacObserverVersion1 &gt;</name>
    <filename>classoaObserver_3oaConstraintGroupDef_4.html</filename>
    <base>oaBaseObserver</base>
    <member kind="function">
      <type></type>
      <name>oaObserver</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 priorityIn, oaBoolean enabledIn=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaObserver</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPreDestroy</name>
      <anchor>a2</anchor>
      <arglist>(oaConstraintGroupDef *def)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPostCreate</name>
      <anchor>a3</anchor>
      <arglist>(oaConstraintGroupDef *def)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onConflict</name>
      <anchor>a4</anchor>
      <arglist>(const oaString &amp;name, oaType defType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBoolean</type>
      <name>hasObservers</name>
      <anchor>d0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaObserver&lt; oaConstraintParamDef, oacObserverVersion1 &gt;</name>
    <filename>classoaObserver_3oaConstraintParamDef_4.html</filename>
    <base>oaBaseObserver</base>
    <member kind="function">
      <type></type>
      <name>oaObserver</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 priorityIn, oaBoolean enabledIn=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaObserver</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPreDestroy</name>
      <anchor>a2</anchor>
      <arglist>(oaConstraintParamDef *def)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPostCreate</name>
      <anchor>a3</anchor>
      <arglist>(oaConstraintParamDef *def)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onConflict</name>
      <anchor>a4</anchor>
      <arglist>(const oaString &amp;name, oaType valueType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBoolean</type>
      <name>hasObservers</name>
      <anchor>d0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaObserver&lt; oaGroupDef, oacObserverVersion1 &gt;</name>
    <filename>classoaObserver_3oaGroupDef_4.html</filename>
    <base>oaBaseObserver</base>
    <member kind="function">
      <type></type>
      <name>oaObserver</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 priorityIn, oaBoolean enabledIn=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaObserver</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPreDestroy</name>
      <anchor>a2</anchor>
      <arglist>(oaGroupDef *def)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPostCreate</name>
      <anchor>a3</anchor>
      <arglist>(oaGroupDef *def)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onConflict</name>
      <anchor>a4</anchor>
      <arglist>(const oaString &amp;name, oaType defType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBoolean</type>
      <name>hasObservers</name>
      <anchor>d0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaObserver&lt; T, V &gt;</name>
    <filename>classoaObserver_3T_00_01V_4.html</filename>
    <templarg>T</templarg>
    <base>oaStdObserver&lt; T, oaTraits&lt; T &gt;::modTypeType &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaObserver</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 priorityIn, oaBoolean enabledIn=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaObserver</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onBeginCreate</name>
      <anchor>onBeginCreate</anchor>
      <arglist>(oaObject *owner, oaUInt4 scopeID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onEndCreate</name>
      <anchor>onEndCreate</anchor>
      <arglist>(T *object, oaUInt4 scopeID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onBeginDestroy</name>
      <anchor>onBeginDestroy</anchor>
      <arglist>(T *object, oaUInt4 scopeID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onEndDestroy</name>
      <anchor>onEndDestroy</anchor>
      <arglist>(oaObject *owner, oaUInt4 scopeID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBoolean</type>
      <name>hasObservers</name>
      <anchor>d0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaOrient</name>
    <filename>classoaOrient.html</filename>
    <member kind="function">
      <type></type>
      <name>oaOrient</name>
      <anchor>a0</anchor>
      <arglist>(oaOrientEnum valueIn=oacR0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaOrient</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaOrient</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaOrient</type>
      <name>concat</name>
      <anchor>a3</anchor>
      <arglist>(const oaOrient &amp;orient) const</arglist>
    </member>
    <member kind="function">
      <type>oaOrient</type>
      <name>getRelativeOrient</name>
      <anchor>a4</anchor>
      <arglist>(const oaOrient &amp;orient) const</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaOrientEnum</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaOSError</name>
    <filename>classoaOSError.html</filename>
    <base>oaException</base>
  </compound>
  <compound kind="class">
    <name>oaPackedData</name>
    <filename>classoaPackedData.html</filename>
    <base>oaBasePackedData</base>
    <member kind="function">
      <type>oaByte *&amp;</type>
      <name>data</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4 &amp;</type>
      <name>size</name>
      <anchor>a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean &amp;</type>
      <name>swap</name>
      <anchor>a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaByte *</type>
      <name>data</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>size</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>swap</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeByte</name>
      <anchor>a9</anchor>
      <arglist>(oaUInt4 &amp;loc, oaByte val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeBytes</name>
      <anchor>a10</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, const oaByte *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeInt2</name>
      <anchor>a11</anchor>
      <arglist>(oaUInt4 &amp;loc, oaInt2 val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeInt4</name>
      <anchor>a12</anchor>
      <arglist>(oaUInt4 &amp;loc, oaInt4 val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeInt8</name>
      <anchor>a13</anchor>
      <arglist>(oaUInt4 &amp;loc, oaInt8 val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeUInt2</name>
      <anchor>a14</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt2 val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeUInt4</name>
      <anchor>a15</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeUInt8</name>
      <anchor>a16</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt8 val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeFloat</name>
      <anchor>a17</anchor>
      <arglist>(oaUInt4 &amp;loc, oaFloat val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeDouble</name>
      <anchor>a18</anchor>
      <arglist>(oaUInt4 &amp;loc, oaDouble val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeTime</name>
      <anchor>a19</anchor>
      <arglist>(oaUInt4 &amp;loc, oaTime val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeString</name>
      <anchor>a20</anchor>
      <arglist>(oaUInt4 &amp;loc, const oaString &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePoint</name>
      <anchor>a21</anchor>
      <arglist>(oaUInt4 &amp;loc, const oaPoint &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeBox</name>
      <anchor>a22</anchor>
      <arglist>(oaUInt4 &amp;loc, const oaBox &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeUnalignedUInt4</name>
      <anchor>a23</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeRef</name>
      <anchor>a24</anchor>
      <arglist>(oaUInt4 &amp;loc, const oaInternalNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeRef</name>
      <anchor>a25</anchor>
      <arglist>(oaUInt4 &amp;loc, const oaNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeRef</name>
      <anchor>a26</anchor>
      <arglist>(oaUInt4 &amp;loc, const oaStringRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeRef</name>
      <anchor>a27</anchor>
      <arglist>(oaUInt4 &amp;loc, const oaStringNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeByteArray</name>
      <anchor>a28</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, const oaByte *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeInt2Array</name>
      <anchor>a29</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, const oaInt2 *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeInt4Array</name>
      <anchor>a30</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, const oaInt4 *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeInt8Array</name>
      <anchor>a31</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, const oaInt8 *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeUInt2Array</name>
      <anchor>a32</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, const oaUInt2 *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeUInt4Array</name>
      <anchor>a33</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, const oaUInt4 *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeUInt8Array</name>
      <anchor>a34</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, const oaUInt8 *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeFloatArray</name>
      <anchor>a35</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, const oaFloat *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeDoubleArray</name>
      <anchor>a36</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, const oaDouble *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePointArray</name>
      <anchor>a37</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, const oaPoint *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeBoxArray</name>
      <anchor>a38</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, const oaBox *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readByte</name>
      <anchor>a39</anchor>
      <arglist>(oaUInt4 &amp;loc, oaByte &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readBytes</name>
      <anchor>a40</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, oaByte *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readInt2</name>
      <anchor>a41</anchor>
      <arglist>(oaUInt4 &amp;loc, oaInt2 &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readInt4</name>
      <anchor>a42</anchor>
      <arglist>(oaUInt4 &amp;loc, oaInt4 &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readInt8</name>
      <anchor>a43</anchor>
      <arglist>(oaUInt4 &amp;loc, oaInt8 &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readUInt2</name>
      <anchor>a44</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt2 &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readUInt4</name>
      <anchor>a45</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readUInt8</name>
      <anchor>a46</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt8 &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readFloat</name>
      <anchor>a47</anchor>
      <arglist>(oaUInt4 &amp;loc, oaFloat &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readDouble</name>
      <anchor>a48</anchor>
      <arglist>(oaUInt4 &amp;loc, oaDouble &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readTime</name>
      <anchor>a49</anchor>
      <arglist>(oaUInt4 &amp;loc, oaTime &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readString</name>
      <anchor>a50</anchor>
      <arglist>(oaUInt4 &amp;loc, oaString &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPoint</name>
      <anchor>a51</anchor>
      <arglist>(oaUInt4 &amp;loc, oaPoint &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readBox</name>
      <anchor>a52</anchor>
      <arglist>(oaUInt4 &amp;loc, oaBox &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readUnalignedUInt4</name>
      <anchor>a53</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readRef</name>
      <anchor>a54</anchor>
      <arglist>(oaUInt4 &amp;loc, oaInternalNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readRef</name>
      <anchor>a55</anchor>
      <arglist>(oaUInt4 &amp;loc, oaNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readRef</name>
      <anchor>a56</anchor>
      <arglist>(oaUInt4 &amp;loc, oaStringRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readRef</name>
      <anchor>a57</anchor>
      <arglist>(oaUInt4 &amp;loc, oaStringNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readByteArray</name>
      <anchor>a58</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, oaByte *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readInt2Array</name>
      <anchor>a59</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, oaInt2 *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readInt4Array</name>
      <anchor>a60</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, oaInt4 *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readInt8Array</name>
      <anchor>a61</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, oaInt8 *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readUInt2Array</name>
      <anchor>a62</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, oaUInt2 *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readUInt4Array</name>
      <anchor>a63</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, oaUInt4 *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readUInt8Array</name>
      <anchor>a64</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, oaUInt8 *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readFloatArray</name>
      <anchor>a65</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, oaFloat *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readDoubleArray</name>
      <anchor>a66</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, oaDouble *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPointArray</name>
      <anchor>a67</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, oaPoint *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readBoxArray</name>
      <anchor>a68</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 numObjects, oaBox *val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePackedInt4</name>
      <anchor>a69</anchor>
      <arglist>(oaUInt4 &amp;loc, oaInt4 val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePackedInt8</name>
      <anchor>a70</anchor>
      <arglist>(oaUInt4 &amp;loc, oaInt8 val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePackedUInt4</name>
      <anchor>a71</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePackedUInt8</name>
      <anchor>a72</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt8 val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePackedFloat</name>
      <anchor>a73</anchor>
      <arglist>(oaUInt4 &amp;loc, oaFloat val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePackedDouble</name>
      <anchor>a74</anchor>
      <arglist>(oaUInt4 &amp;loc, oaDouble val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePackedTime</name>
      <anchor>a75</anchor>
      <arglist>(oaUInt4 &amp;loc, oaTime val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePackedPoint</name>
      <anchor>a76</anchor>
      <arglist>(oaUInt4 &amp;loc, const oaPoint &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePackedBox</name>
      <anchor>a77</anchor>
      <arglist>(oaUInt4 &amp;loc, const oaBox &amp;box) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePackedPointArray</name>
      <anchor>a78</anchor>
      <arglist>(oaUInt4 &amp;loc, const oaPointArray &amp;points, oaBoolean isOrtho, oaBoolean isVFst) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePackedRef</name>
      <anchor>a79</anchor>
      <arglist>(oaUInt4 &amp;loc, const oaInternalNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePackedRef</name>
      <anchor>a80</anchor>
      <arglist>(oaUInt4 &amp;loc, const oaNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePackedRef</name>
      <anchor>a81</anchor>
      <arglist>(oaUInt4 &amp;loc, const oaStringRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePackedRef</name>
      <anchor>a82</anchor>
      <arglist>(oaUInt4 &amp;loc, const oaStringNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPackedInt4</name>
      <anchor>a83</anchor>
      <arglist>(oaUInt4 &amp;loc, oaInt4 &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPackedInt8</name>
      <anchor>a84</anchor>
      <arglist>(oaUInt4 &amp;loc, oaInt8 &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPackedUInt4</name>
      <anchor>a85</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt4 &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPackedUInt8</name>
      <anchor>a86</anchor>
      <arglist>(oaUInt4 &amp;loc, oaUInt8 &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPackedFloat</name>
      <anchor>a87</anchor>
      <arglist>(oaUInt4 &amp;loc, oaFloat &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPackedDouble</name>
      <anchor>a88</anchor>
      <arglist>(oaUInt4 &amp;loc, oaDouble &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPackedTime</name>
      <anchor>a89</anchor>
      <arglist>(oaUInt4 &amp;loc, oaTime &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPackedPoint</name>
      <anchor>a90</anchor>
      <arglist>(oaUInt4 &amp;loc, oaPoint &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPackedBox</name>
      <anchor>a91</anchor>
      <arglist>(oaUInt4 &amp;loc, oaBox &amp;box) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPackedPointArray</name>
      <anchor>a92</anchor>
      <arglist>(oaUInt4 &amp;loc, oaPointArray &amp;points, oaUInt4 numPoints, oaBoolean isOrthogonal, oaBoolean isVertFirst) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPackedRef</name>
      <anchor>a93</anchor>
      <arglist>(oaUInt4 &amp;loc, oaInternalNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPackedRef</name>
      <anchor>a94</anchor>
      <arglist>(oaUInt4 &amp;loc, oaNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPackedRef</name>
      <anchor>a95</anchor>
      <arglist>(oaUInt4 &amp;loc, oaStringRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPackedRef</name>
      <anchor>a96</anchor>
      <arglist>(oaUInt4 &amp;loc, oaStringNameRef &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getPackedInt4Size</name>
      <anchor>a97</anchor>
      <arglist>(oaUInt4 loc) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getPackedInt8Size</name>
      <anchor>a98</anchor>
      <arglist>(oaUInt4 loc) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getPackedFloatSize</name>
      <anchor>a99</anchor>
      <arglist>(oaUInt4 loc) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getPackedDoubleSize</name>
      <anchor>a100</anchor>
      <arglist>(oaUInt4 loc) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getPackedTimeSize</name>
      <anchor>a101</anchor>
      <arglist>(oaUInt4 loc) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getPackedPointSize</name>
      <anchor>a102</anchor>
      <arglist>(oaUInt4 loc) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getPackedBoxSize</name>
      <anchor>a103</anchor>
      <arglist>(oaUInt4 loc) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getPackedPointArraySize</name>
      <anchor>a104</anchor>
      <arglist>(oaUInt4 loc, oaUInt4 numPoints, oaBoolean isOrtho) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaParam</name>
    <filename>classoaParam.html</filename>
    <member kind="function">
      <type></type>
      <name>oaParam</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaParam</name>
      <anchor>a1</anchor>
      <arglist>(const oaParam &amp;param)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaParam</name>
      <anchor>a2</anchor>
      <arglist>(const oaString &amp;nameIn, oaInt4 value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaParam</name>
      <anchor>a3</anchor>
      <arglist>(const oaString &amp;nameIn, oaFloat value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaParam</name>
      <anchor>a4</anchor>
      <arglist>(const oaString &amp;nameIn, const oaString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaParam</name>
      <anchor>a5</anchor>
      <arglist>(const oaString &amp;nameIn, oaDouble value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaParam</name>
      <anchor>a6</anchor>
      <arglist>(const oaString &amp;nameIn, const oaString &amp;appTypeIn, oaUInt4 numBytesIn, const oaByte *byteDataIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaParam</name>
      <anchor>a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getName</name>
      <anchor>a8</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaParamType</type>
      <name>getType</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaInt4</type>
      <name>getIntVal</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaFloat</type>
      <name>getFloatVal</name>
      <anchor>a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaChar *</type>
      <name>getStringVal</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaDouble</type>
      <name>getDoubleVal</name>
      <anchor>a13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>getBooleanVal</name>
      <anchor>a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaTime</type>
      <name>getTimeVal</name>
      <anchor>a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getStringVal</name>
      <anchor>a16</anchor>
      <arglist>(oaString &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAppVal</name>
      <anchor>a17</anchor>
      <arglist>(oaByte *byteData) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumBytes</name>
      <anchor>a18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAppType</name>
      <anchor>a19</anchor>
      <arglist>(oaString &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAppType</name>
      <anchor>a20</anchor>
      <arglist>(const oaChar *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAppVal</name>
      <anchor>a21</anchor>
      <arglist>(oaUInt4 numBytes, const oaByte *byteData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchor>a22</anchor>
      <arglist>(const oaChar *nameIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIntVal</name>
      <anchor>a23</anchor>
      <arglist>(oaInt4 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFloatVal</name>
      <anchor>a24</anchor>
      <arglist>(oaFloat value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStringVal</name>
      <anchor>a25</anchor>
      <arglist>(const oaChar *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDoubleVal</name>
      <anchor>a26</anchor>
      <arglist>(oaDouble value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBooleanVal</name>
      <anchor>a27</anchor>
      <arglist>(oaBoolean value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeVal</name>
      <anchor>a28</anchor>
      <arglist>(oaTime value)</arglist>
    </member>
    <member kind="function">
      <type>oaParam &amp;</type>
      <name>operator=</name>
      <anchor>a29</anchor>
      <arglist>(const oaParam &amp;param)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a30</anchor>
      <arglist>(const oaParam &amp;p) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a31</anchor>
      <arglist>(const oaParam &amp;p) const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaParamArray</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaParamTbl</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaIntParamTbl</name>
      <anchor>l2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaStringParamTbl</name>
      <anchor>l3</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaFloatParamTbl</name>
      <anchor>l4</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaDoubleParamTbl</name>
      <anchor>l5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaBooleanParamTbl</name>
      <anchor>l6</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaTimeParamTbl</name>
      <anchor>l7</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaAppParamTbl</name>
      <anchor>l8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaParamArray</name>
    <filename>classoaParamArray.html</filename>
    <base>oaArray&lt; oaParam &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaParamArray</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 sizeIn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaParamArray</name>
      <anchor>a1</anchor>
      <arglist>(const oaParamArray &amp;paramsIn)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>find</name>
      <anchor>a2</anchor>
      <arglist>(const oaParam &amp;param) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>find</name>
      <anchor>a3</anchor>
      <arglist>(const oaString &amp;name, oaParam &amp;param) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual oaBoolean</type>
      <name>operator==</name>
      <anchor>a4</anchor>
      <arglist>(const oaArray&lt; oaParam &gt; &amp;p) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaParamType</name>
    <filename>classoaParamType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaParamType</name>
      <anchor>a0</anchor>
      <arglist>(oaParamTypeEnum typeIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaParamType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaParamType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaParamTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaPoint</name>
    <filename>classoaPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>oaPoint</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaPoint</name>
      <anchor>a1</anchor>
      <arglist>(oaCoord xValIn, oaCoord yValIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaPoint</name>
      <anchor>a2</anchor>
      <arglist>(const oaPoint &amp;point, const oaTransform &amp;xform)</arglist>
    </member>
    <member kind="function">
      <type>oaCoord &amp;</type>
      <name>x</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCoord &amp;</type>
      <name>y</name>
      <anchor>a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCoord</type>
      <name>x</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCoord</type>
      <name>y</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a7</anchor>
      <arglist>(oaCoord x, oaCoord y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a8</anchor>
      <arglist>(const oaTransform &amp;xform, oaPoint &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a9</anchor>
      <arglist>(const oaTransform &amp;xform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a10</anchor>
      <arglist>(oaDouble scale, oaDouble angle, oaPoint &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a11</anchor>
      <arglist>(oaDouble scale, oaDouble angle)</arglist>
    </member>
    <member kind="function">
      <type>oaDouble</type>
      <name>distanceFrom2</name>
      <anchor>a12</anchor>
      <arglist>(const oaPoint &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>oaPoint &amp;</type>
      <name>operator+=</name>
      <anchor>a13</anchor>
      <arglist>(const oaPoint &amp;pt)</arglist>
    </member>
    <member kind="function">
      <type>oaPoint &amp;</type>
      <name>operator-=</name>
      <anchor>a14</anchor>
      <arglist>(const oaPoint &amp;pt)</arglist>
    </member>
    <member kind="function">
      <type>oaPoint</type>
      <name>operator-</name>
      <anchor>a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaPoint</type>
      <name>operator-</name>
      <anchor>a16</anchor>
      <arglist>(const oaPoint &amp;pt) const</arglist>
    </member>
    <member kind="function">
      <type>oaPoint</type>
      <name>operator+</name>
      <anchor>a17</anchor>
      <arglist>(const oaPoint &amp;pt) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a18</anchor>
      <arglist>(const oaPoint &amp;pt) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a19</anchor>
      <arglist>(const oaPoint &amp;pt) const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaChecker&lt; oaPoint &gt;</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaPointArray</name>
    <filename>classoaPointArray.html</filename>
    <base>oaArray&lt; oaPoint &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaPointArray</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 sizeIn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaPointArray</name>
      <anchor>a1</anchor>
      <arglist>(const oaPointArray &amp;pointsIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaPointArray</name>
      <anchor>a2</anchor>
      <arglist>(const oaPointArray &amp;pointsIn, const oaTransform &amp;xform)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaPointArray</name>
      <anchor>a3</anchor>
      <arglist>(const oaPointArray &amp;pointsIn, const oaPoint &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaPointArray</name>
      <anchor>a4</anchor>
      <arglist>(const oaPoint pointsIn[], oaUInt4 numPointsIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaPointArray</name>
      <anchor>a5</anchor>
      <arglist>(const oaBox &amp;rectIn)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isSelfIntersecting</name>
      <anchor>a6</anchor>
      <arglist>(oaBoolean isClosed=true) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isOrthogonal</name>
      <anchor>a7</anchor>
      <arglist>(oaBoolean isClosed=true) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isRectangle</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>onEdge</name>
      <anchor>a9</anchor>
      <arglist>(const oaPoint &amp;point, oaBoolean isClosed=true) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>contains</name>
      <anchor>a10</anchor>
      <arglist>(const oaPoint &amp;point, oaBoolean includeEdges=true) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>contains</name>
      <anchor>a11</anchor>
      <arglist>(const oaBox &amp;box) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>overlaps</name>
      <anchor>a12</anchor>
      <arglist>(const oaBox &amp;box, oaBoolean closed=true) const</arglist>
    </member>
    <member kind="function">
      <type>oaDouble</type>
      <name>distanceFrom2</name>
      <anchor>a13</anchor>
      <arglist>(const oaPoint &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>oaDouble</type>
      <name>getArea</name>
      <anchor>a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>hasExtraPoints</name>
      <anchor>a15</anchor>
      <arglist>(oaBoolean isClosed=true) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compress</name>
      <anchor>a16</anchor>
      <arglist>(oaPointArray &amp;pointsOut, oaBoolean isClosed=true) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compress</name>
      <anchor>a17</anchor>
      <arglist>(oaBoolean isClosed=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a18</anchor>
      <arglist>(const oaTransform &amp;xform, oaPointArray &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a19</anchor>
      <arglist>(const oaTransform &amp;xform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a20</anchor>
      <arglist>(const oaPoint &amp;offset, oaPointArray &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a21</anchor>
      <arglist>(const oaPoint &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a22</anchor>
      <arglist>(oaDouble scale, oaDouble angle, oaPointArray &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchor>a23</anchor>
      <arglist>(oaDouble scale, oaDouble angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBBox</name>
      <anchor>a24</anchor>
      <arglist>(oaBox &amp;bBox) const</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>oaUndoData</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaProp</name>
    <filename>classoaProp.html</filename>
    <base>oaObject</base>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaObject *</type>
      <name>getOwner</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getName</name>
      <anchor>a2</anchor>
      <arglist>(oaString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getValue</name>
      <anchor>a3</anchor>
      <arglist>(oaString &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchor>a4</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>oaProp *</type>
      <name>moveTo</name>
      <anchor>a5</anchor>
      <arglist>(oaObject *object)</arglist>
    </member>
    <member kind="function">
      <type>oaProp *</type>
      <name>copyTo</name>
      <anchor>a6</anchor>
      <arglist>(oaObject *object) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaProp *</type>
      <name>find</name>
      <anchor>d0</anchor>
      <arglist>(const oaObject *object, const oaString &amp;name, oaBoolean crossDomain=false)</arglist>
    </member>
    <member kind="enumvalue">
      <name>dtIndex</name>
      <anchor>s2s0</anchor>
      <init> oacBasePropDataType</init>
    </member>
    <member kind="enumvalue">
      <name>domain</name>
      <anchor>s3s1</anchor>
      <init> oacNoDomain</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaRange</name>
    <filename>classoaRange.html</filename>
    <templarg>T</templarg>
    <base>oaRangeBase</base>
    <member kind="function">
      <type></type>
      <name>oaRange</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaRange</name>
      <anchor>a1</anchor>
      <arglist>(oaRangeType type, T value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaRange</name>
      <anchor>a2</anchor>
      <arglist>(oaRangeType type, T lowerBoundIn, T upperBoundIn)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getLowerBound</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getUpperBound</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowerBound</name>
      <anchor>a5</anchor>
      <arglist>(T lowerBoundIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUpperBound</name>
      <anchor>a6</anchor>
      <arglist>(T upperBoundIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBounds</name>
      <anchor>a7</anchor>
      <arglist>(T lowerBoundIn, T upperBoundIn)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isInRange</name>
      <anchor>a8</anchor>
      <arglist>(const T &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a9</anchor>
      <arglist>(const oaRange&lt; T &gt; &amp;range) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a10</anchor>
      <arglist>(const oaRange&lt; T &gt; &amp;range) const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaChecker&lt; oaIntRange &gt;</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaChecker&lt; oaUInt8Range &gt;</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaRangeBase</name>
    <filename>classoaRangeBase.html</filename>
    <member kind="function">
      <type></type>
      <name>oaRangeBase</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaRangeBase</name>
      <anchor>a1</anchor>
      <arglist>(oaRangeTypeEnum rangeTypeIn)</arglist>
    </member>
    <member kind="function">
      <type>oaRangeType</type>
      <name>getRangeType</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>hasLowerBound</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>hasUpperBound</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaChecker&lt; oaIntRange &gt;</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaChecker&lt; oaUInt8Range &gt;</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaRangeType</name>
    <filename>classoaRangeType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaRangeType</name>
      <anchor>a0</anchor>
      <arglist>(oaRangeTypeEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaRangeType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaRangeType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaRangeTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaRevisionTraits&lt; oaChangeMgr &gt;</name>
    <filename>classoaRevisionTraits_3_01oaChangeMgr_01_4.html</filename>
    <member kind="typedef">
      <type>oaVersionedObserver&lt; oaChangeMgr, scopedObserverRevision &gt;</type>
      <name>observer</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>observerRevision</name>
      <anchor>s7s1</anchor>
      <init> oacObserverVersion1</init>
    </member>
    <member kind="enumvalue">
      <name>scopedObserverRevision</name>
      <anchor>s8s2</anchor>
      <init> oacObserverVersion2</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion1APIMinorRev</name>
      <anchor>s9s3</anchor>
      <init> 22</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2APIMinorRev</name>
      <anchor>s10s4</anchor>
      <init> 200</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2BranchAPIRev</name>
      <anchor>s11s5</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2SelfAPIRev</name>
      <anchor>s12s6</anchor>
      <init> 0</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaRevisionTraits&lt; oaConstraintDef &gt;</name>
    <filename>classoaRevisionTraits_3_01oaConstraintDef_01_4.html</filename>
    <member kind="typedef">
      <type>oaVersionedObserver&lt; oaConstraintDef, observerRevision &gt;</type>
      <name>observer</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>observerRevision</name>
      <anchor>s7s1</anchor>
      <init> oacObserverVersion1</init>
    </member>
    <member kind="enumvalue">
      <name>scopedObserverRevision</name>
      <anchor>s8s2</anchor>
      <init> oacObserverVersion2</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion1APIMinorRev</name>
      <anchor>s9s3</anchor>
      <init> 22</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2APIMinorRev</name>
      <anchor>s10s4</anchor>
      <init> 200</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2BranchAPIRev</name>
      <anchor>s11s5</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2SelfAPIRev</name>
      <anchor>s12s6</anchor>
      <init> 0</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaRevisionTraits&lt; oaConstraintGroupDef &gt;</name>
    <filename>classoaRevisionTraits_3_01oaConstraintGroupDef_01_4.html</filename>
    <member kind="typedef">
      <type>oaVersionedObserver&lt; oaConstraintGroupDef, observerRevision &gt;</type>
      <name>observer</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>observerRevision</name>
      <anchor>s7s1</anchor>
      <init> oacObserverVersion1</init>
    </member>
    <member kind="enumvalue">
      <name>scopedObserverRevision</name>
      <anchor>s8s2</anchor>
      <init> oacObserverVersion2</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion1APIMinorRev</name>
      <anchor>s9s3</anchor>
      <init> 22</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2APIMinorRev</name>
      <anchor>s10s4</anchor>
      <init> 200</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2BranchAPIRev</name>
      <anchor>s11s5</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2SelfAPIRev</name>
      <anchor>s12s6</anchor>
      <init> 0</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaRevisionTraits&lt; oaConstraintParamDef &gt;</name>
    <filename>classoaRevisionTraits_3_01oaConstraintParamDef_01_4.html</filename>
    <member kind="typedef">
      <type>oaVersionedObserver&lt; oaConstraintParamDef, observerRevision &gt;</type>
      <name>observer</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>observerRevision</name>
      <anchor>s7s1</anchor>
      <init> oacObserverVersion1</init>
    </member>
    <member kind="enumvalue">
      <name>scopedObserverRevision</name>
      <anchor>s8s2</anchor>
      <init> oacObserverVersion2</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion1APIMinorRev</name>
      <anchor>s9s3</anchor>
      <init> 22</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2APIMinorRev</name>
      <anchor>s10s4</anchor>
      <init> 200</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2BranchAPIRev</name>
      <anchor>s11s5</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2SelfAPIRev</name>
      <anchor>s12s6</anchor>
      <init> 0</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaRevisionTraits&lt; oaDerivedLayerDef &gt;</name>
    <filename>classoaRevisionTraits_3_01oaDerivedLayerDef_01_4.html</filename>
    <member kind="typedef">
      <type>oaVersionedObserver&lt; oaDerivedLayerDef, observerRevision &gt;</type>
      <name>observer</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>observerRevision</name>
      <anchor>s7s1</anchor>
      <init> oacObserverVersion1</init>
    </member>
    <member kind="enumvalue">
      <name>scopedObserverRevision</name>
      <anchor>s8s2</anchor>
      <init> oacObserverVersion2</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion1APIMinorRev</name>
      <anchor>s9s3</anchor>
      <init> 22</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2APIMinorRev</name>
      <anchor>s10s4</anchor>
      <init> 200</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2BranchAPIRev</name>
      <anchor>s11s5</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2SelfAPIRev</name>
      <anchor>s12s6</anchor>
      <init> 0</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaRevisionTraits&lt; oaDerivedLayerParamDef &gt;</name>
    <filename>classoaRevisionTraits_3_01oaDerivedLayerParamDef_01_4.html</filename>
    <member kind="typedef">
      <type>oaVersionedObserver&lt; oaDerivedLayerParamDef, observerRevision &gt;</type>
      <name>observer</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>observerRevision</name>
      <anchor>s7s1</anchor>
      <init> oacObserverVersion1</init>
    </member>
    <member kind="enumvalue">
      <name>scopedObserverRevision</name>
      <anchor>s8s2</anchor>
      <init> oacObserverVersion2</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion1APIMinorRev</name>
      <anchor>s9s3</anchor>
      <init> 22</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2APIMinorRev</name>
      <anchor>s10s4</anchor>
      <init> 200</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2BranchAPIRev</name>
      <anchor>s11s5</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2SelfAPIRev</name>
      <anchor>s12s6</anchor>
      <init> 0</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaRevisionTraits&lt; oaGroupDef &gt;</name>
    <filename>classoaRevisionTraits_3_01oaGroupDef_01_4.html</filename>
    <member kind="typedef">
      <type>oaVersionedObserver&lt; oaGroupDef, observerRevision &gt;</type>
      <name>observer</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>observerRevision</name>
      <anchor>s7s1</anchor>
      <init> oacObserverVersion1</init>
    </member>
    <member kind="enumvalue">
      <name>scopedObserverRevision</name>
      <anchor>s8s2</anchor>
      <init> oacObserverVersion2</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion1APIMinorRev</name>
      <anchor>s9s3</anchor>
      <init> 22</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2APIMinorRev</name>
      <anchor>s10s4</anchor>
      <init> 200</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2BranchAPIRev</name>
      <anchor>s11s5</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2SelfAPIRev</name>
      <anchor>s12s6</anchor>
      <init> 0</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaRevisionTraits&lt; oaParasiticNetwork &gt;</name>
    <filename>classoaRevisionTraits_3_01oaParasiticNetwork_01_4.html</filename>
    <member kind="typedef">
      <type>oaVersionedObserver&lt; oaParasiticNetwork, observerRevision &gt;</type>
      <name>observer</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>observerRevision</name>
      <anchor>s7s1</anchor>
      <init> oacObserverVersion1</init>
    </member>
    <member kind="enumvalue">
      <name>scopedObserverRevision</name>
      <anchor>s8s2</anchor>
      <init> oacObserverVersion2</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion1APIMinorRev</name>
      <anchor>s9s3</anchor>
      <init> 22</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2APIMinorRev</name>
      <anchor>s10s4</anchor>
      <init> 200</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2BranchAPIRev</name>
      <anchor>s11s5</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2SelfAPIRev</name>
      <anchor>s12s6</anchor>
      <init> 0</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaRevisionTraits&lt; oaViewType &gt;</name>
    <filename>classoaRevisionTraits_3_01oaViewType_01_4.html</filename>
    <member kind="typedef">
      <type>oaVersionedObserver&lt; oaViewType, observerRevision &gt;</type>
      <name>observer</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>observerRevision</name>
      <anchor>s7s1</anchor>
      <init> oacObserverVersion1</init>
    </member>
    <member kind="enumvalue">
      <name>scopedObserverRevision</name>
      <anchor>s8s2</anchor>
      <init> oacObserverVersion2</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion1APIMinorRev</name>
      <anchor>s9s3</anchor>
      <init> 22</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2APIMinorRev</name>
      <anchor>s10s4</anchor>
      <init> 200</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2BranchAPIRev</name>
      <anchor>s11s5</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>minObserverVersion2SelfAPIRev</name>
      <anchor>s12s6</anchor>
      <init> 0</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaRWLock</name>
    <filename>classoaRWLock.html</filename>
    <base virtualness="virtual">oaMutexBase</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>lock</name>
      <anchor>a0</anchor>
      <arglist>(oaRWLockTypeEnum type)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unlock</name>
      <anchor>a1</anchor>
      <arglist>(oaRWLockTypeEnum type)=0</arglist>
    </member>
    <member kind="enumeration">
      <name>oaRWLockTypeEnum</name>
      <anchor>s2</anchor>
      <init>2</init>
    </member>
    <member kind="enumvalue">
      <name>oacWriteLockTypeEnum</name>
      <anchor>s2s0</anchor>
      <init> 0</init>
    </member>
    <member kind="enumvalue">
      <name>oacReadLockTypeEnum</name>
      <anchor>s2s1</anchor>
      <init> 1</init>
    </member>
    <member kind="function" protection="public">
      <type></type>
      <name>oaRWLock</name>
      <anchor>b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual</type>
      <name>~oaRWLock</name>
      <anchor>b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="public">
      <type></type>
      <name>oaRWLock</name>
      <anchor>b2</anchor>
      <arglist>(const oaRWLock &amp;src)</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaRWLock &amp;</type>
      <name>operator=</name>
      <anchor>b3</anchor>
      <arglist>(const oaRWLock &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaScalarName</name>
    <filename>classoaScalarName.html</filename>
    <base>oaNameBase</base>
    <member kind="function">
      <type></type>
      <name>oaScalarName</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaScalarName</name>
      <anchor>a1</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaScalarName</name>
      <anchor>a2</anchor>
      <arglist>(const oaScalarName &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchor>a3</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a4</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a5</anchor>
      <arglist>(oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumBits</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaScalarName &amp;</type>
      <name>operator=</name>
      <anchor>a7</anchor>
      <arglist>(const oaScalarName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchor>a9</anchor>
      <arglist>(const oaNameMem &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a10</anchor>
      <arglist>(const oaScalarName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a11</anchor>
      <arglist>(const oaScalarName &amp;name) const</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>oaNameTbl</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>oaVectorBitName</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>oaVectorName</name>
      <anchor>l2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdAttribute</name>
    <filename>classsdAttribute.html</filename>
    <base>sdBase</base>
    <member kind="function">
      <type></type>
      <name>sdAttribute</name>
      <anchor>a0</anchor>
      <arglist>(unsigned int id, const std::string &amp;name, const std::string &amp;description, const Actions &amp;actions, sdAttributeContainerType containerType, bool isObjectIdentifier, sdNameSpace *nameSpace, const sdObject *object, const sdValue *value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdAttribute</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getId</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDescription</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sdObject *</type>
      <name>getObject</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sdValue *</type>
      <name>getValue</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ActionConstIter</type>
      <name>begin</name>
      <anchor>sdAttribute::begin</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ActionConstIter</type>
      <name>end</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdAttributeContainerType</type>
      <name>getContainerType</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a10</anchor>
      <arglist>(sdVisitor *visitor)</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; sdAttributeActionType &gt;</type>
      <name>Actions</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Actions::const_iterator</type>
      <name>ActionConstIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdAttributeActionType</name>
    <filename>classsdAttributeActionType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdAttributeActionType</name>
      <anchor>a0</anchor>
      <arglist>(sdAttributeActionTypeEnum action)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdAttributeActionType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdAttributeActionType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdAttributeActionTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdAttributeContainerType</name>
    <filename>classsdAttributeContainerType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdAttributeContainerType</name>
      <anchor>a0</anchor>
      <arglist>(sdAttributeContainerTypeEnum container)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdAttributeContainerType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdAttributeContainerType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdAttributeContainerTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdBase</name>
    <filename>classsdBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdBase</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>sdObjectType</type>
      <name>getObjectType</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sdNameSpace *</type>
      <name>getNameSpace</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a3</anchor>
      <arglist>(sdVisitor *visitor)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdError</name>
    <filename>classsdError.html</filename>
    <base>sdException</base>
  </compound>
  <compound kind="class">
    <name>sdException</name>
    <filename>classsdException.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual const oa::oaString &amp;</type>
      <name>getFormatString</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdField</name>
    <filename>classsdField.html</filename>
    <member kind="function">
      <type></type>
      <name>sdField</name>
      <anchor>a0</anchor>
      <arglist>(const std::string &amp;name, unsigned int index, sdNameSpace *nameSpace, const sdValue *value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdField</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getIndex</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sdNameSpace *</type>
      <name>getNameSpace</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sdValue *</type>
      <name>getValue</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdHierValue</name>
    <filename>classsdHierValue.html</filename>
    <base>sdValue</base>
    <member kind="function">
      <type></type>
      <name>sdHierValue</name>
      <anchor>a0</anchor>
      <arglist>(unsigned int id, const std::string &amp;name, const std::string &amp;description, sdNameSpace *nameSpace, const FieldVector &amp;fields)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdHierValue</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FieldConstIter</type>
      <name>begin</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FieldConstIter</type>
      <name>end</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a4</anchor>
      <arglist>(sdVisitor *visitor)</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; sdField * &gt;</type>
      <name>FieldVector</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FieldVector::const_iterator</type>
      <name>FieldConstIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdLeafValue</name>
    <filename>classsdLeafValue.html</filename>
    <base>sdValue</base>
    <member kind="function">
      <type></type>
      <name>sdLeafValue</name>
      <anchor>a0</anchor>
      <arglist>(unsigned int id, const std::string &amp;name, const std::string &amp;description, sdNameSpace *nameSpace)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdLeafValue</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a2</anchor>
      <arglist>(sdVisitor *visitor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdNameSpace</name>
    <filename>classsdNameSpace.html</filename>
    <member kind="function">
      <type></type>
      <name>sdNameSpace</name>
      <anchor>a0</anchor>
      <arglist>(const std::string &amp;name, const unsigned int version)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdNameSpace</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name, const unsigned int &amp;version, const StringVector &amp;dependencies, const StringVector &amp;aliases)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdNameSpace</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const sdValue *</type>
      <name>findValue</name>
      <anchor>a3</anchor>
      <arglist>(unsigned int enumValue) const</arglist>
    </member>
    <member kind="function">
      <type>const sdValue *</type>
      <name>findValue</name>
      <anchor>a4</anchor>
      <arglist>(const std::string &amp;enumName) const</arglist>
    </member>
    <member kind="function">
      <type>const sdAttribute *</type>
      <name>findAttribute</name>
      <anchor>a5</anchor>
      <arglist>(unsigned int enumValue) const</arglist>
    </member>
    <member kind="function">
      <type>const sdAttribute *</type>
      <name>findAttribute</name>
      <anchor>a6</anchor>
      <arglist>(const std::string &amp;enumName) const</arglist>
    </member>
    <member kind="function">
      <type>const sdObject *</type>
      <name>findObject</name>
      <anchor>a7</anchor>
      <arglist>(unsigned int enumValue) const</arglist>
    </member>
    <member kind="function">
      <type>const sdObject *</type>
      <name>findObject</name>
      <anchor>a8</anchor>
      <arglist>(const std::string &amp;enumName) const</arglist>
    </member>
    <member kind="function">
      <type>const sdRelationshipBase *</type>
      <name>findRelationship</name>
      <anchor>a9</anchor>
      <arglist>(unsigned int enumValue) const</arglist>
    </member>
    <member kind="function">
      <type>const sdRelationshipBase *</type>
      <name>findRelationship</name>
      <anchor>a10</anchor>
      <arglist>(const std::string &amp;enumName) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getVersion</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dependsOn</name>
      <anchor>a13</anchor>
      <arglist>(const sdNameSpace *nameSpace) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchor>a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ValueConstIter</type>
      <name>beginValue</name>
      <anchor>a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ValueConstIter</type>
      <name>endValue</name>
      <anchor>a16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AttributeConstIter</type>
      <name>beginAttribute</name>
      <anchor>a17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AttributeConstIter</type>
      <name>endAttribute</name>
      <anchor>a18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RelationshipConstIter</type>
      <name>beginRelationship</name>
      <anchor>a19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RelationshipConstIter</type>
      <name>endRelationship</name>
      <anchor>a20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>beginObject</name>
      <anchor>a21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>endObject</name>
      <anchor>a22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StringConstIter</type>
      <name>beginDependentNameSpace</name>
      <anchor>a23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StringConstIter</type>
      <name>endDependentNameSpace</name>
      <anchor>a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StringConstIter</type>
      <name>beginNameAlias</name>
      <anchor>a25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StringConstIter</type>
      <name>endNameAlias</name>
      <anchor>a26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a27</anchor>
      <arglist>(sdVisitor *visitor)</arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; unsigned int, const sdValue * &gt;</type>
      <name>ValueMap</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; unsigned int, const sdAttribute * &gt;</type>
      <name>AttributeMap</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; unsigned int, const sdRelationshipBase * &gt;</type>
      <name>RelationshipMap</name>
      <anchor>s2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; unsigned int, const sdObject * &gt;</type>
      <name>ObjectMap</name>
      <anchor>s3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>StringVector</name>
      <anchor>s4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueMap::const_iterator</type>
      <name>ValueConstIter</name>
      <anchor>s5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AttributeMap::const_iterator</type>
      <name>AttributeConstIter</name>
      <anchor>s6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RelationshipMap::const_iterator</type>
      <name>RelationshipConstIter</name>
      <anchor>s7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectMap::const_iterator</type>
      <name>ObjectConstIter</name>
      <anchor>s8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StringVector::const_iterator</type>
      <name>StringConstIter</name>
      <anchor>s9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdValue</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdAttribute</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdObject</name>
      <anchor>l2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdRelationshipBase</name>
      <anchor>l3</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdField</name>
      <anchor>l4</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdSession</name>
      <anchor>l5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdObject</name>
    <filename>classsdObject.html</filename>
    <base>sdBase</base>
    <member kind="function">
      <type></type>
      <name>sdObject</name>
      <anchor>a0</anchor>
      <arglist>(unsigned int id, const std::string &amp;name, const std::string &amp;description, bool concrete, sdNameSpace *nameSpace, const ObjectVector &amp;superObjects)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdObject</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getId</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDescription</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConcrete</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sdAttribute *</type>
      <name>getIdentifier</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>beginSuperObject</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>endSuperObject</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>beginSubObject</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>endSubObject</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdObjectAttributeIter</type>
      <name>beginAttribute</name>
      <anchor>a11</anchor>
      <arglist>(bool local) const</arglist>
    </member>
    <member kind="function">
      <type>sdObjectAttributeIter</type>
      <name>endAttribute</name>
      <anchor>a12</anchor>
      <arglist>(bool local) const</arglist>
    </member>
    <member kind="function">
      <type>sdObjectRelationshipIter</type>
      <name>beginRelationship</name>
      <anchor>a13</anchor>
      <arglist>(bool local) const</arglist>
    </member>
    <member kind="function">
      <type>sdObjectRelationshipIter</type>
      <name>endRelationship</name>
      <anchor>a14</anchor>
      <arglist>(bool local) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a15</anchor>
      <arglist>(sdVisitor *visitor)</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; const sdObject * &gt;</type>
      <name>ObjectVector</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectVector::const_iterator</type>
      <name>ObjectConstIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdAttribute</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdRelationship</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdRelationshipSet</name>
      <anchor>l2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdObjectAttributeIter</name>
      <anchor>l3</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdObjectRelationshipIter</name>
      <anchor>l4</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdNameSpace</name>
      <anchor>l5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdObjectAttributeIter</name>
    <filename>classsdObjectAttributeIter.html</filename>
    <base>sdObjectMemberIter&lt; sdAttribute &gt;</base>
    <member kind="function">
      <type></type>
      <name>sdObjectAttributeIter</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdObjectAttributeIter</name>
      <anchor>a1</anchor>
      <arglist>(const sdObject *object, bool local)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdObjectAttributeIter</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdObjectMemberIter</name>
    <filename>classsdObjectMemberIter.html</filename>
    <templarg>SDClass</templarg>
    <member kind="function">
      <type>const SDClass *</type>
      <name>operator *</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchor>a1</anchor>
      <arglist>(const sdObjectMemberIter&lt; SDClass &gt; &amp;iter) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchor>a2</anchor>
      <arglist>(const sdObjectMemberIter&lt; SDClass &gt; &amp;iter) const</arglist>
    </member>
    <member kind="function">
      <type>sdObjectMemberIter&lt; SDClass &gt; &amp;</type>
      <name>operator++</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="public">
      <type>std::vector&lt; const SDClass * &gt;</type>
      <name>MemberVector</name>
      <anchor>t0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="public">
      <type>MemberVector::const_iterator</type>
      <name>MemberConstIter</name>
      <anchor>t1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdObjectRelationshipIter</name>
    <filename>classsdObjectRelationshipIter.html</filename>
    <base>sdObjectMemberIter&lt; sdRelationshipBase &gt;</base>
    <member kind="function">
      <type></type>
      <name>sdObjectRelationshipIter</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdObjectRelationshipIter</name>
      <anchor>a1</anchor>
      <arglist>(const sdObject *object, bool local)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdObjectRelationshipIter</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdObjectType</name>
    <filename>classsdObjectType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdObjectType</name>
      <anchor>a0</anchor>
      <arglist>(sdObjectTypeEnum valueType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdObjectType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdObjectType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdObjectTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationship</name>
    <filename>classsdRelationship.html</filename>
    <base>sdRelationshipBase</base>
    <member kind="function">
      <type></type>
      <name>sdRelationship</name>
      <anchor>a0</anchor>
      <arglist>(unsigned int id, const std::string &amp;name, const std::string &amp;relDescription, sdRelationshipOrderingType orderType, const Actions &amp;actions, sdRelationshipAssociationType associationType, sdRelationshipMultiplicityType multiplicityType, sdRelationshipContainerType containerType, sdNameSpace *nameSpace, const sdObject *from, const sdObject *to)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdRelationship</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const sdObject *</type>
      <name>getFrom</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sdObject *</type>
      <name>getTo</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a4</anchor>
      <arglist>(sdVisitor *visitor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipActionType</name>
    <filename>classsdRelationshipActionType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdRelationshipActionType</name>
      <anchor>a0</anchor>
      <arglist>(sdRelationshipActionTypeEnum valueType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdRelationshipActionType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdRelationshipActionType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdRelationshipActionTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipAssociationType</name>
    <filename>classsdRelationshipAssociationType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdRelationshipAssociationType</name>
      <anchor>a0</anchor>
      <arglist>(sdRelationshipAssociationTypeEnum valueType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdRelationshipAssociationType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdRelationshipAssociationType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdRelationshipAssociationTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipBase</name>
    <filename>classsdRelationshipBase.html</filename>
    <base>sdBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdRelationshipBase</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getId</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDescription</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdRelationshipSubType</type>
      <name>getSubType</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdRelationshipOrderingType</type>
      <name>getOrderType</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdRelationshipAssociationType</type>
      <name>getAssociationType</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdRelationshipMultiplicityType</type>
      <name>getMultiplicityType</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdRelationshipContainerType</type>
      <name>getContainerType</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ActionConstIter</type>
      <name>begin</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ActionConstIter</type>
      <name>end</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; sdRelationshipActionType &gt;</type>
      <name>Actions</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Actions::const_iterator</type>
      <name>ActionConstIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipContainerType</name>
    <filename>classsdRelationshipContainerType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdRelationshipContainerType</name>
      <anchor>a0</anchor>
      <arglist>(sdRelationshipContainerTypeEnum container)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdRelationshipContainerType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdRelationshipContainerType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdRelationshipContainerTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipMultiplicityType</name>
    <filename>classsdRelationshipMultiplicityType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdRelationshipMultiplicityType</name>
      <anchor>a0</anchor>
      <arglist>(sdRelationshipMultiplicityTypeEnum valueType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdRelationshipMultiplicityType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdRelationshipMultiplicityType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdRelationshipMultiplicityTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipOrderingType</name>
    <filename>classsdRelationshipOrderingType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdRelationshipOrderingType</name>
      <anchor>a0</anchor>
      <arglist>(sdRelationshipOrderingTypeEnum valueType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdRelationshipOrderingType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdRelationshipOrderingType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdRelationshipOrderingTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipSet</name>
    <filename>classsdRelationshipSet.html</filename>
    <base>sdRelationshipBase</base>
    <member kind="function">
      <type></type>
      <name>sdRelationshipSet</name>
      <anchor>a0</anchor>
      <arglist>(unsigned int id, const std::string &amp;name, const std::string &amp;relDescription, sdRelationshipOrderingType orderType, const Actions &amp;actions, sdRelationshipAssociationType associationType, sdRelationshipMultiplicityType multiplicityType, sdRelationshipContainerType containerType, sdNameSpace *nameSpace, const sdObject *from, const ObjectVector &amp;toObjects)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdRelationshipSet</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const sdObject *</type>
      <name>getFrom</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>beginToObject</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectConstIter</type>
      <name>endToObject</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>a5</anchor>
      <arglist>(sdVisitor *visitor)</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; const sdObject * &gt;</type>
      <name>ObjectVector</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectVector::const_iterator</type>
      <name>ObjectConstIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdRelationshipSubType</name>
    <filename>classsdRelationshipSubType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdRelationshipSubType</name>
      <anchor>a0</anchor>
      <arglist>(sdRelationshipSubTypeEnum valueType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdRelationshipSubType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdRelationshipSubType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdRelationshipSubTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdSession</name>
    <filename>classsdSession.html</filename>
    <member kind="function">
      <type>sdNameSpace *</type>
      <name>getNameSpace</name>
      <anchor>a0</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroyContents</name>
      <anchor>a1</anchor>
      <arglist>(sdNameSpace *nameSpace)</arglist>
    </member>
    <member kind="function">
      <type>NameSpaceConstIter</type>
      <name>begin</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NameSpaceConstIter</type>
      <name>end</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>sdSession *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; const sdNameSpace * &gt;</type>
      <name>NameSpaceVector</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>NameSpaceVector::const_iterator</type>
      <name>NameSpaceConstIter</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>sdNameSpace</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdValue</name>
    <filename>classsdValue.html</filename>
    <base>sdBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sdValue</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getId</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDescription</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sdValueSubType</type>
      <name>getSubType</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdValueSubType</name>
    <filename>classsdValueSubType.html</filename>
    <member kind="function">
      <type></type>
      <name>sdValueSubType</name>
      <anchor>a0</anchor>
      <arglist>(sdValueSubTypeEnum value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sdValueSubType</name>
      <anchor>a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~sdValueSubType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator sdValueSubTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sdVisitor</name>
    <filename>classsdVisitor.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a0</anchor>
      <arglist>(const sdLeafValue *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a1</anchor>
      <arglist>(const sdHierValue *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a2</anchor>
      <arglist>(const sdAttribute *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a3</anchor>
      <arglist>(const sdRelationship *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a4</anchor>
      <arglist>(const sdRelationshipSet *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a5</anchor>
      <arglist>(const sdObject *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a6</anchor>
      <arglist>(const sdNameSpace *object)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSegment</name>
    <filename>classoaSegment.html</filename>
    <member kind="function">
      <type></type>
      <name>oaSegment</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaSegment</name>
      <anchor>a1</anchor>
      <arglist>(const oaPoint &amp;headIn, const oaPoint &amp;tailIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaSegment</name>
      <anchor>a2</anchor>
      <arglist>(const oaVector &amp;vec, const oaPoint &amp;ref)</arglist>
    </member>
    <member kind="function">
      <type>oaPoint &amp;</type>
      <name>head</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaPoint &amp;</type>
      <name>tail</name>
      <anchor>a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCoord &amp;</type>
      <name>x1</name>
      <anchor>a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCoord &amp;</type>
      <name>x2</name>
      <anchor>a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCoord &amp;</type>
      <name>y1</name>
      <anchor>a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCoord &amp;</type>
      <name>y2</name>
      <anchor>a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaPoint &amp;</type>
      <name>head</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const oaPoint &amp;</type>
      <name>tail</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCoord</type>
      <name>x1</name>
      <anchor>a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCoord</type>
      <name>x2</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCoord</type>
      <name>y1</name>
      <anchor>a13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCoord</type>
      <name>y2</name>
      <anchor>a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a15</anchor>
      <arglist>(const oaPoint &amp;head, const oaPoint &amp;tail)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a16</anchor>
      <arglist>(const oaVector &amp;vec, const oaPoint &amp;ref)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isHorizontal</name>
      <anchor>a17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isVertical</name>
      <anchor>a18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isOrthogonal</name>
      <anchor>a19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaOffset</type>
      <name>getDeltaX</name>
      <anchor>a20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaOffset</type>
      <name>getDeltaY</name>
      <anchor>a21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaDouble</type>
      <name>distanceFrom2</name>
      <anchor>a22</anchor>
      <arglist>(const oaPoint &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>oaDouble</type>
      <name>distanceFrom2</name>
      <anchor>a23</anchor>
      <arglist>(const oaPoint &amp;point, oaPoint &amp;loc) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>contains</name>
      <anchor>a24</anchor>
      <arglist>(const oaPoint &amp;point, oaBoolean includeEnds=true) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>collinearContains</name>
      <anchor>a25</anchor>
      <arglist>(const oaPoint &amp;point, oaBoolean includeEnds=true) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>intersects</name>
      <anchor>a26</anchor>
      <arglist>(const oaSegment &amp;seg, oaBoolean includeEnds=true) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>intersects</name>
      <anchor>a27</anchor>
      <arglist>(const oaSegment &amp;seg, oaBoolean includeEnds, oaBoolean includeOverlap) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>intersects</name>
      <anchor>a28</anchor>
      <arglist>(const oaSegment &amp;seg, oaPoint &amp;iPt, oaBoolean mustIntersect=true) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a29</anchor>
      <arglist>(const oaSegment &amp;segment) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a30</anchor>
      <arglist>(const oaSegment &amp;segment) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSemaphore</name>
    <filename>classoaSemaphore.html</filename>
    <member kind="function">
      <type></type>
      <name>oaSemaphore</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 key)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaSemaphore</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>acquire</name>
      <anchor>a2</anchor>
      <arglist>(oaBoolean noWait=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isAcquired</name>
      <anchor>a4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaServerSocket</name>
    <filename>classoaServerSocket.html</filename>
    <base>oaSocket</base>
    <member kind="function">
      <type></type>
      <name>oaServerSocket</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 port)</arglist>
    </member>
    <member kind="function">
      <type>oaSocketD</type>
      <name>accept</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listen</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSession</name>
    <filename>classoaSession.html</filename>
    <base>oaSessionObject</base>
    <member kind="function">
      <type>oaUInt8</type>
      <name>calcVMSize</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>minimizeVM</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaAppDef, oaSession &gt;</type>
      <name>getAppDefs</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaAppObjectDef, oaSession &gt;</type>
      <name>getAppObjectDefs</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaConstraintParamDef, oaSession &gt;</type>
      <name>getConstraintParamDefs</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaConstraintDef, oaSession &gt;</type>
      <name>getConstraintDefs</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaDerivedLayerParamDef, oaSession &gt;</type>
      <name>getDerivedLayerParamDefs</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaDerivedLayerDef, oaSession &gt;</type>
      <name>getDerivedLayerDefs</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaGroupDef, oaSession &gt;</type>
      <name>getGroupDefs</name>
      <anchor>a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaCollection&lt; oaConstraintGroupDef, oaSession &gt;</type>
      <name>getConstraintGroupDefs</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setThreadUseModel</name>
      <anchor>a10</anchor>
      <arglist>(oaThreadUseModel useModelIn)</arglist>
    </member>
    <member kind="function">
      <type>oaThreadUseModel</type>
      <name>getThreadUseModel</name>
      <anchor>a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaSession *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSessionObject</name>
    <filename>classoaSessionObject.html</filename>
    <base>oaObject</base>
    <member kind="function">
      <type>oaSession *</type>
      <name>getSession</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaShapeAngleType</name>
    <filename>classoaShapeAngleType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaShapeAngleType</name>
      <anchor>a0</anchor>
      <arglist>(oaShapeAngleTypeEnum typeIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaShapeAngleType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaShapeAngleType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaShapeAngleTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSimpleConstraint</name>
    <filename>classoaSimpleConstraint.html</filename>
    <base>oaConstraint</base>
    <member kind="function" static="yes">
      <type>oaSimpleConstraint *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(const oaSimpleConstraintDef *def, oaValue *value, oaBoolean isHard=true, const oaConstraintParamArray *params=NULL)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaSimpleConstraint *</type>
      <name>create</name>
      <anchor>d1</anchor>
      <arglist>(const oaSimpleConstraintDef *def, const oaString &amp;name, oaValue *value, oaBoolean isHard=true, const oaConstraintParamArray *params=NULL)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaSimpleConstraint *</type>
      <name>find</name>
      <anchor>d2</anchor>
      <arglist>(const oaConstraintGroup *group, const oaSimpleConstraintDef *def, oaBoolean hardOnly=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaCollection&lt; oaSimpleConstraint, oaConstraintGroup &gt;</type>
      <name>getConstraints</name>
      <anchor>d3</anchor>
      <arglist>(const oaConstraintGroup *group, const oaSimpleConstraintDef *def)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSimpleConstraintDef</name>
    <filename>classoaSimpleConstraintDef.html</filename>
    <base>oaConstraintDef</base>
    <member kind="function" static="yes">
      <type>oaSimpleConstraintDef *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, const oaSubset&lt; oaType &gt; &amp;allowedValues, const oaSubset&lt; oaType &gt; &amp;allowedObjects, const oaSubset&lt; oaDBType &gt; &amp;allowedDB)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaSimpleConstraintDef *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(oaSimpleConstraintType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSimpleConstraintType</name>
    <filename>classoaSimpleConstraintType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaSimpleConstraintType</name>
      <anchor>a0</anchor>
      <arglist>(oaSimpleConstraintTypeEnum typeIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaSimpleConstraintType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaSimpleConstraintType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaSimpleConstraintTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>void</type>
      <name>validate</name>
      <anchor>d0</anchor>
      <arglist>(oaSimpleConstraintTypeEnum typeIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSimpleName</name>
    <filename>classoaSimpleName.html</filename>
    <member kind="function">
      <type></type>
      <name>oaSimpleName</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaSimpleName</name>
      <anchor>a1</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaSimpleName</name>
      <anchor>a2</anchor>
      <arglist>(const oaSimpleName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaSimpleName</name>
      <anchor>a3</anchor>
      <arglist>(const oaScalarName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaSimpleName</name>
      <anchor>a4</anchor>
      <arglist>(const oaVectorBitName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaSimpleName</name>
      <anchor>a5</anchor>
      <arglist>(const oaVectorName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaSimpleName</name>
      <anchor>a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchor>a7</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a8</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a9</anchor>
      <arglist>(oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBitName</name>
      <anchor>a10</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, oaUInt4 bit, oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>oaNameType</type>
      <name>getType</name>
      <anchor>a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getRepeat</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumMembers</name>
      <anchor>a13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumBits</name>
      <anchor>a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaScalarName *</type>
      <name>getScalar</name>
      <anchor>a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaVectorName *</type>
      <name>getVector</name>
      <anchor>a16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaVectorBitName *</type>
      <name>getVectorBit</name>
      <anchor>a17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierPath</name>
      <anchor>a18</anchor>
      <arglist>(const oaScalarName &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierPath</name>
      <anchor>a19</anchor>
      <arglist>(const oaVectorBitName &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierMem</name>
      <anchor>a20</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in, oaUInt4 len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHierMem</name>
      <anchor>a21</anchor>
      <arglist>(const oaNameMem &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>oaSimpleName &amp;</type>
      <name>operator=</name>
      <anchor>a22</anchor>
      <arglist>(const oaSimpleName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>oaSimpleName &amp;</type>
      <name>operator=</name>
      <anchor>a23</anchor>
      <arglist>(const oaScalarName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>oaSimpleName &amp;</type>
      <name>operator=</name>
      <anchor>a24</anchor>
      <arglist>(const oaVectorName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>oaSimpleName &amp;</type>
      <name>operator=</name>
      <anchor>a25</anchor>
      <arglist>(const oaVectorBitName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const oaNameMem &amp;</type>
      <name>operator[]</name>
      <anchor>a26</anchor>
      <arglist>(oaUInt4 i) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a27</anchor>
      <arglist>(const oaSimpleName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a28</anchor>
      <arglist>(const oaScalarName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a29</anchor>
      <arglist>(const oaVectorName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a30</anchor>
      <arglist>(const oaVectorBitName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a31</anchor>
      <arglist>(const oaSimpleName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a32</anchor>
      <arglist>(const oaScalarName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a33</anchor>
      <arglist>(const oaVectorName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a34</anchor>
      <arglist>(const oaVectorBitName &amp;name) const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaBaseNameHashTbl</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaNameTbl</name>
      <anchor>l1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaBundleName</name>
      <anchor>l2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSocket</name>
    <filename>classoaSocket.html</filename>
    <member kind="function">
      <type></type>
      <name>oaSocket</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaSocket</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isOpen</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaSocketD</type>
      <name>getSocketD</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getPort</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAddress</name>
      <anchor>a5</anchor>
      <arglist>(oaUInt4 sockAddr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAddress</name>
      <anchor>a6</anchor>
      <arglist>(const char *address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPort</name>
      <anchor>a7</anchor>
      <arglist>(oaUInt4 port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>void</type>
      <name>sendMsg</name>
      <anchor>d0</anchor>
      <arglist>(oaSocketD sd, oaUInt4 len, const char *msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaUInt4</type>
      <name>recvMsg</name>
      <anchor>d1</anchor>
      <arglist>(oaSocketD sd, oaUInt4 len, char *msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>void</type>
      <name>close</name>
      <anchor>d2</anchor>
      <arglist>(oaSocketD sd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>void</type>
      <name>getHostName</name>
      <anchor>d3</anchor>
      <arglist>(oaString &amp;hostName)</arglist>
    </member>
    <member kind="function" protection="public" static="yes">
      <type>void</type>
      <name>initialize</name>
      <anchor>e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="public" static="yes">
      <type>void</type>
      <name>finalize</name>
      <anchor>e1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSocketError</name>
    <filename>classoaSocketError.html</filename>
    <base>oaException</base>
  </compound>
  <compound kind="class">
    <name>oaSpacingDirectionType</name>
    <filename>classoaSpacingDirectionType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaSpacingDirectionType</name>
      <anchor>a0</anchor>
      <arglist>(oaSpacingDirectionTypeEnum typeIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaSpacingDirectionType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaSpacingDirectionType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaSpacingDirectionTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSpacingMeasureType</name>
    <filename>classoaSpacingMeasureType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaSpacingMeasureType</name>
      <anchor>a0</anchor>
      <arglist>(oaSpacingMeasureTypeEnum type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaSpacingMeasureType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaSpacingMeasureTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSpacingType</name>
    <filename>classoaSpacingType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaSpacingType</name>
      <anchor>a0</anchor>
      <arglist>(oaSpacingTypeEnum type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaSpacingType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaSpacingTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSpefNS</name>
    <filename>classoaSpefNS.html</filename>
    <base>oaNameSpace</base>
    <member kind="function">
      <type></type>
      <name>oaSpefNS</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOpenBusChar</name>
      <anchor>a8</anchor>
      <arglist>(oaChar c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHierDelimiter</name>
      <anchor>a9</anchor>
      <arglist>(oaChar c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPinDelimiter</name>
      <anchor>a10</anchor>
      <arglist>(oaChar c)</arglist>
    </member>
    <member kind="function">
      <type>oaChar</type>
      <name>getHierDelimiter</name>
      <anchor>a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaChar</type>
      <name>getPinDelimiter</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaChar</type>
      <name>getOpenBusChar</name>
      <anchor>a13</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSpfNS</name>
    <filename>classoaSpfNS.html</filename>
    <base>oaNameSpace</base>
    <member kind="function">
      <type></type>
      <name>oaSpfNS</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOpenBusChar</name>
      <anchor>a8</anchor>
      <arglist>(oaChar c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCloseBusChar</name>
      <anchor>a9</anchor>
      <arglist>(oaChar c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHierDelimiter</name>
      <anchor>a10</anchor>
      <arglist>(oaChar c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPinDelimiter</name>
      <anchor>a11</anchor>
      <arglist>(oaChar c)</arglist>
    </member>
    <member kind="function">
      <type>oaChar</type>
      <name>getHierDelimiter</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaChar</type>
      <name>getOpenBusChar</name>
      <anchor>a13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaChar</type>
      <name>getCloseBusChar</name>
      <anchor>a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaChar</type>
      <name>getPinDelimiter</name>
      <anchor>a15</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSpiceNS</name>
    <filename>classoaSpiceNS.html</filename>
    <base>oaNameSpace</base>
    <member kind="function">
      <type></type>
      <name>oaSpiceNS</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSpinMutex</name>
    <filename>classoaSpinMutex.html</filename>
    <base virtualness="virtual">oaMutexBase</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>lock</name>
      <anchor>a0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unlock</name>
      <anchor>a1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="public">
      <type></type>
      <name>oaSpinMutex</name>
      <anchor>b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="public" virtualness="virtual">
      <type>virtual</type>
      <name>~oaSpinMutex</name>
      <anchor>b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="public">
      <type></type>
      <name>oaSpinMutex</name>
      <anchor>b2</anchor>
      <arglist>(const oaSpinMutex &amp;src)</arglist>
    </member>
    <member kind="function" protection="public">
      <type>oaSpinMutex &amp;</type>
      <name>operator=</name>
      <anchor>b3</anchor>
      <arglist>(const oaSpinMutex &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sr1to1Relationship</name>
    <filename>classsr1to1Relationship.html</filename>
    <base>srRelationshipBase</base>
    <member kind="function">
      <type></type>
      <name>sr1to1Relationship</name>
      <anchor>sr1to1Relationship::sr1to1Relationship</anchor>
      <arglist>(const sd::sdRelationshipBase *def, const srObjectRef::SPtr from, const srObjectRef::SPtr to)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sr1to1Relationship</name>
      <anchor>sr1to1Relationship::~sr1to1Relationship</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>sr1to1Relationship::accept</anchor>
      <arglist>(srVisitorMgr &amp;visitor)</arglist>
    </member>
    <member kind="function">
      <type>srObjectRef::CSPtr</type>
      <name>getTo</name>
      <anchor>sr1to1Relationship::getTo</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTo</name>
      <anchor>sr1to1Relationship::setTo</anchor>
      <arglist>(const srObjectRef::SPtr object)</arglist>
    </member>
    <member kind="typedef">
      <type>sr1to1Relationship *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sr1toNRelationship</name>
    <filename>classsr1toNRelationship.html</filename>
    <base>srRelationshipBase</base>
    <member kind="function">
      <type></type>
      <name>sr1toNRelationship</name>
      <anchor>sr1toNRelationship::sr1toNRelationship</anchor>
      <arglist>(const sd::sdRelationshipBase *def, const srObjectRef::SPtr from, const ObjectRefVec &amp;to)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sr1toNRelationship</name>
      <anchor>sr1toNRelationship::~sr1toNRelationship</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>sr1toNRelationship::accept</anchor>
      <arglist>(srVisitorMgr &amp;visitor)</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>beginToObject</name>
      <anchor>sr1toNRelationship::beginToObject</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>endToObject</name>
      <anchor>sr1toNRelationship::endToObject</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTo</name>
      <anchor>sr1toNRelationship::setTo</anchor>
      <arglist>(const ObjectRefVec &amp;objects)</arglist>
    </member>
    <member kind="typedef">
      <type>sr1toNRelationship *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; srObjectRef::SPtr &gt;</type>
      <name>ObjectRefVec</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectRefVec::const_iterator</type>
      <name>ConstIterator</name>
      <anchor>s2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srAttributeBase</name>
    <filename>classsrAttributeBase.html</filename>
    <base>srBase</base>
    <member kind="function">
      <type></type>
      <name>srAttributeBase</name>
      <anchor>srAttributeBase::srAttributeBase</anchor>
      <arglist>(const sd::sdAttribute *def, const srObjectRef::SPtr object)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~srAttributeBase</name>
      <anchor>srAttributeBase::~srAttributeBase</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>srObjectRef::CSPtr</type>
      <name>getObject</name>
      <anchor>srAttributeBase::getObject</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sd::sdAttribute *</type>
      <name>getDef</name>
      <anchor>srAttributeBase::getDef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>srAttributeBase *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srBase</name>
    <filename>classsrBase.html</filename>
    <member kind="function">
      <type></type>
      <name>srBase</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~srBase</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>srBase::accept</anchor>
      <arglist>(srVisitorMgr &amp;visitor)=0</arglist>
    </member>
    <member kind="typedef">
      <type>srBase *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srObjectRef</name>
    <filename>classsrObjectRef.html</filename>
    <base>srBase</base>
    <member kind="function">
      <type></type>
      <name>srObjectRef</name>
      <anchor>srObjectRef::srObjectRef</anchor>
      <arglist>(const sd::sdObject *def, void *object)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~srObjectRef</name>
      <anchor>srObjectRef::~srObjectRef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>srObjectRef::accept</anchor>
      <arglist>(srVisitorMgr &amp;visitor)</arglist>
    </member>
    <member kind="function">
      <type>const sd::sdObject *</type>
      <name>getDef</name>
      <anchor>srObjectRef::getDef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>getObject</name>
      <anchor>srObjectRef::getObject</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObject</name>
      <anchor>srObjectRef::setObject</anchor>
      <arglist>(void *object)</arglist>
    </member>
    <member kind="typedef">
      <type>srObjectRef *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const srObjectRef *</type>
      <name>CSPtr</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srObjectState</name>
    <filename>classsrObjectState.html</filename>
    <base>srBase</base>
    <member kind="function">
      <type></type>
      <name>srObjectState</name>
      <anchor>srObjectState::srObjectState</anchor>
      <arglist>(const sd::sdObject *def, const AttributeMap &amp;attributes, const RelationshipMap &amp;relationships)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~srObjectState</name>
      <anchor>srObjectState::~srObjectState</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchor>srObjectState::accept</anchor>
      <arglist>(srVisitorMgr &amp;visitor)</arglist>
    </member>
    <member kind="function">
      <type>const sd::sdObject *</type>
      <name>getDef</name>
      <anchor>srObjectState::getDef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AttributeConstIter</type>
      <name>beginAttribute</name>
      <anchor>srObjectState::beginAttribute</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AttributeConstIter</type>
      <name>endAttribute</name>
      <anchor>srObjectState::endAttribute</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RelationshipConstIter</type>
      <name>beginRelationship</name>
      <anchor>srObjectState::beginRelationship</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RelationshipConstIter</type>
      <name>endRelationship</name>
      <anchor>srObjectState::endRelationship</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAttribute</name>
      <anchor>srObjectState::addAttribute</anchor>
      <arglist>(srAttributeBase::SPtr attribute, bool overwrite=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRelationship</name>
      <anchor>srObjectState::addRelationship</anchor>
      <arglist>(srRelationshipBase::SPtr relationship, bool overwrite=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAttributes</name>
      <anchor>srObjectState::setAttributes</anchor>
      <arglist>(const AttributeMap &amp;attributes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelationships</name>
      <anchor>srObjectState::setRelationships</anchor>
      <arglist>(const RelationshipMap &amp;relationships)</arglist>
    </member>
    <member kind="typedef">
      <type>srObjectState *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; const sd::sdAttribute *, srAttributeBase::SPtr, srSDEnumLess&lt; sd::sdAttribute &gt; &gt;</type>
      <name>AttributeMap</name>
      <anchor>s1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; const sd::sdRelationshipBase *, srRelationshipBase::SPtr, srSDEnumLess&lt; sd::sdRelationshipBase &gt; &gt;</type>
      <name>RelationshipMap</name>
      <anchor>s2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; const sd::sdAttribute *, srAttributeBase::SPtr &gt;</type>
      <name>AttributePair</name>
      <anchor>s3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; const sd::sdRelationshipBase *, srRelationshipBase::SPtr &gt;</type>
      <name>RelationshipPair</name>
      <anchor>s4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AttributeMap::const_iterator</type>
      <name>AttributeConstIter</name>
      <anchor>s5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RelationshipMap::const_iterator</type>
      <name>RelationshipConstIter</name>
      <anchor>s6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srRelationshipBase</name>
    <filename>classsrRelationshipBase.html</filename>
    <base>srBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~srRelationshipBase</name>
      <anchor>srRelationshipBase::~srRelationshipBase</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const sd::sdRelationshipBase *</type>
      <name>getDef</name>
      <anchor>srRelationshipBase::getDef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>sr::srObjectRef::CSPtr</type>
      <name>getFrom</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>srRelationshipBase *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="public">
      <type></type>
      <name>srRelationshipBase</name>
      <anchor>b0</anchor>
      <arglist>(const sd::sdRelationshipBase *def=0, const srObjectRef::CSPtr from=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srSDEnumLess</name>
    <filename>classsrSDEnumLess.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchor>srSDEnumLess::operator</anchor>
      <arglist>(const T *lhs, const T *rhs) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srValueBase</name>
    <filename>classsrValueBase.html</filename>
    <base>srBase</base>
    <member kind="function">
      <type></type>
      <name>srValueBase</name>
      <anchor>srValueBase::srValueBase</anchor>
      <arglist>(const sd::sdValue *def)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~srValueBase</name>
      <anchor>srValueBase::~srValueBase</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const sd::sdValue *</type>
      <name>getDef</name>
      <anchor>srValueBase::getDef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef">
      <type>srValueBase *</type>
      <name>SPtr</name>
      <anchor>s0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srVisitor</name>
    <filename>classsrVisitor.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~srVisitor</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a1</anchor>
      <arglist>(srObjectRef *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a2</anchor>
      <arglist>(srObjectState *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a3</anchor>
      <arglist>(sr1to1Relationship *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a4</anchor>
      <arglist>(sr1toNRelationship *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a5</anchor>
      <arglist>(srRelationshipBase *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a6</anchor>
      <arglist>(srAttributeBase *object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visit</name>
      <anchor>a7</anchor>
      <arglist>(srValueBase *object)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>srVisitorMgr</name>
    <filename>classsrVisitorMgr.html</filename>
    <member kind="function">
      <type></type>
      <name>srVisitorMgr</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~srVisitorMgr</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addVisitor</name>
      <anchor>a3</anchor>
      <arglist>(const sd::sdNameSpace *nameSpace, srVisitor *visitor)</arglist>
    </member>
    <member kind="function">
      <type>srVisitor *</type>
      <name>getVisitor</name>
      <anchor>a4</anchor>
      <arglist>(const sd::sdNameSpace *nameSpace) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaStdObserver</name>
    <filename>classoaStdObserver.html</filename>
    <templarg>T</templarg>
    <templarg>D</templarg>
    <base>oaBaseObserver</base>
    <member kind="function">
      <type></type>
      <name>oaStdObserver</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 priorityIn, oaBoolean enabledIn=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~oaStdObserver</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPostCreate</name>
      <anchor>a2</anchor>
      <arglist>(T *object)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPreDestroy</name>
      <anchor>a3</anchor>
      <arglist>(T *object)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPreModify</name>
      <anchor>a4</anchor>
      <arglist>(T *object, D modType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onPostModify</name>
      <anchor>a5</anchor>
      <arglist>(T *object, D modType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaBoolean</type>
      <name>hasObservers</name>
      <anchor>d0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaString</name>
    <filename>classoaString.html</filename>
    <member kind="function">
      <type></type>
      <name>oaString</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaString</name>
      <anchor>a1</anchor>
      <arglist>(oaUInt4 length)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaString</name>
      <anchor>a2</anchor>
      <arglist>(const oaChar *initialValue)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaString</name>
      <anchor>a3</anchor>
      <arglist>(const oaChar *initialValue, oaUInt4 length)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaString</name>
      <anchor>a4</anchor>
      <arglist>(const oaString &amp;s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaString</name>
      <anchor>a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaString &amp;</type>
      <name>operator=</name>
      <anchor>a6</anchor>
      <arglist>(oaChar c)</arglist>
    </member>
    <member kind="function">
      <type>oaString &amp;</type>
      <name>operator=</name>
      <anchor>a7</anchor>
      <arglist>(const oaChar *str)</arglist>
    </member>
    <member kind="function">
      <type>oaString &amp;</type>
      <name>operator=</name>
      <anchor>a8</anchor>
      <arglist>(const oaString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>oaString &amp;</type>
      <name>operator+=</name>
      <anchor>a9</anchor>
      <arglist>(oaChar c)</arglist>
    </member>
    <member kind="function">
      <type>oaString &amp;</type>
      <name>operator+=</name>
      <anchor>a10</anchor>
      <arglist>(const oaChar *str)</arglist>
    </member>
    <member kind="function">
      <type>oaString &amp;</type>
      <name>operator+=</name>
      <anchor>a11</anchor>
      <arglist>(const oaString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator&lt;</name>
      <anchor>a12</anchor>
      <arglist>(const oaString &amp;str) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator&gt;</name>
      <anchor>a13</anchor>
      <arglist>(const oaString &amp;str) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a14</anchor>
      <arglist>(const oaString &amp;str) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator&lt;=</name>
      <anchor>a15</anchor>
      <arglist>(const oaString &amp;str) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator&gt;=</name>
      <anchor>a16</anchor>
      <arglist>(const oaString &amp;str) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a17</anchor>
      <arglist>(const oaString &amp;str) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const oaChar *</name>
      <anchor>a18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getLength</name>
      <anchor>a19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isEmpty</name>
      <anchor>a20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaDouble</type>
      <name>toDouble</name>
      <anchor>a21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>toInt</name>
      <anchor>a22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toUpper</name>
      <anchor>a23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toLower</name>
      <anchor>a24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchor>a25</anchor>
      <arglist>(oaUInt4 size)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getSize</name>
      <anchor>a26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char &amp;</type>
      <name>operator[]</name>
      <anchor>a27</anchor>
      <arglist>(oaUInt4 i)</arglist>
    </member>
    <member kind="function">
      <type>const oaChar &amp;</type>
      <name>operator[]</name>
      <anchor>a28</anchor>
      <arglist>(oaUInt4 i) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>index</name>
      <anchor>a29</anchor>
      <arglist>(oaChar c, oaUInt4 offset=0) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>substr</name>
      <anchor>a30</anchor>
      <arglist>(const oaString &amp;sub, oaUInt4 offset=0) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isEqual</name>
      <anchor>a31</anchor>
      <arglist>(const oaString &amp;str, oaBoolean ignoreCase) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>format</name>
      <anchor>a32</anchor>
      <arglist>(oaUInt4 size, const oaChar *formatStr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>format</name>
      <anchor>a33</anchor>
      <arglist>(const oaChar *formatStr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>format</name>
      <anchor>a34</anchor>
      <arglist>(const oaChar *formatStr, va_list args)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend OA_BASE_DLL_API oaString</type>
      <name>operator+</name>
      <anchor>l0</anchor>
      <arglist>(const oaString &amp;s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend OA_BASE_DLL_API oaBoolean</type>
      <name>operator&lt;</name>
      <anchor>l1</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend OA_BASE_DLL_API oaBoolean</type>
      <name>operator&lt;</name>
      <anchor>l2</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend OA_BASE_DLL_API oaBoolean</type>
      <name>operator&gt;</name>
      <anchor>l3</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend OA_BASE_DLL_API oaBoolean</type>
      <name>operator&gt;</name>
      <anchor>l4</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend OA_BASE_DLL_API oaBoolean</type>
      <name>operator==</name>
      <anchor>l5</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend OA_BASE_DLL_API oaBoolean</type>
      <name>operator==</name>
      <anchor>l6</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend OA_BASE_DLL_API oaBoolean</type>
      <name>operator&lt;=</name>
      <anchor>l7</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend OA_BASE_DLL_API oaBoolean</type>
      <name>operator&lt;=</name>
      <anchor>l8</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend OA_BASE_DLL_API oaBoolean</type>
      <name>operator&gt;=</name>
      <anchor>l9</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend OA_BASE_DLL_API oaBoolean</type>
      <name>operator&gt;=</name>
      <anchor>l10</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend OA_BASE_DLL_API oaBoolean</type>
      <name>operator!=</name>
      <anchor>l11</anchor>
      <arglist>(const oaString &amp;s1, const oaChar *s2)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend OA_BASE_DLL_API oaBoolean</type>
      <name>operator!=</name>
      <anchor>l12</anchor>
      <arglist>(const oaChar *s1, const oaString &amp;s2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaStringAppDef</name>
    <filename>classoaStringAppDef.html</filename>
    <templarg>T</templarg>
    <base>oaAppDef</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a0</anchor>
      <arglist>(T *object, const oaString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a1</anchor>
      <arglist>(const T *object, oaString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getDefault</name>
      <anchor>a2</anchor>
      <arglist>(oaString &amp;value) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaStringAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, const oaString &amp;defValue=&quot;&quot;, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaStringAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef, const oaString &amp;defValue=&quot;&quot;, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaStringAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d2</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaStringAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d3</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaStringArray</name>
    <filename>classoaStringArray.html</filename>
    <base>oaArray&lt; oaString &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaStringArray</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 sizeIn=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaStringArray</name>
      <anchor>a1</anchor>
      <arglist>(const oaStringArray &amp;stringsIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaStringArray</name>
      <anchor>a2</anchor>
      <arglist>(const oaString stringsIn[], oaUInt4 numBytesIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaStringProp</name>
    <filename>classoaStringProp.html</filename>
    <base>oaProp</base>
    <member kind="function">
      <type>void</type>
      <name>getValue</name>
      <anchor>a0</anchor>
      <arglist>(oaString &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaStringProp *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *object, const oaString &amp;name, const oaString &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaStringValue</name>
    <filename>classoaStringValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>(oaString &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaStringValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oaString &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSubset</name>
    <filename>classoaSubset.html</filename>
    <templarg>T</templarg>
    <base>oaArray</base>
    <member kind="function">
      <type></type>
      <name>oaSubset</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchor>a1</anchor>
      <arglist>(T type)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>includes</name>
      <anchor>a2</anchor>
      <arglist>(T type) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaSystemTime</name>
    <filename>classoaSystemTime.html</filename>
    <member kind="function">
      <type></type>
      <name>oaSystemTime</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCurrentTime</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getYear</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getMonth</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getDay</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getHour</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getMinute</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getSecond</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaThreadUseModel</name>
    <filename>classoaThreadUseModel.html</filename>
    <member kind="function">
      <type></type>
      <name>oaThreadUseModel</name>
      <anchor>a0</anchor>
      <arglist>(oaThreadUseModelEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaThreadUseModel</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaThreadUseModel</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaThreadUseModelEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaTimeAppDef</name>
    <filename>classoaTimeAppDef.html</filename>
    <templarg>T</templarg>
    <base>oaAppDef</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a0</anchor>
      <arglist>(T *object, oaTime value)</arglist>
    </member>
    <member kind="function">
      <type>oaTime</type>
      <name>get</name>
      <anchor>a1</anchor>
      <arglist>(const T *object)</arglist>
    </member>
    <member kind="function">
      <type>oaTime</type>
      <name>getDefault</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaTimeAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, oaTime defValue=oaTime(0), oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaTimeAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef, oaTime defValue=oaTime(0), oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaTimeAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d2</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaTimeAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d3</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaTimeProp</name>
    <filename>classoaTimeProp.html</filename>
    <base>oaProp</base>
    <member kind="function">
      <type>oaTime</type>
      <name>getValue</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a1</anchor>
      <arglist>(oaTime value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaTimeProp *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *object, const oaString &amp;name, oaTime value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaTimer</name>
    <filename>classoaTimer.html</filename>
    <member kind="function">
      <type></type>
      <name>oaTimer</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchor>a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaFloat</type>
      <name>getElapsed</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaFloat</type>
      <name>getElapsed</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaTimeRangeProp</name>
    <filename>classoaTimeRangeProp.html</filename>
    <base>oaProp</base>
    <member kind="function">
      <type>oaTime</type>
      <name>getValue</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaTime</type>
      <name>getLowerBound</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaTime</type>
      <name>getUpperBound</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchor>a3</anchor>
      <arglist>(oaTime value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a4</anchor>
      <arglist>(oaTime lowerBound, oaTime value, oaTime upperBound)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaTimeRangeProp *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *object, const oaString &amp;name, oaTime lowerBound, oaTime value, oaTime upperBound)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaTimeStamp</name>
    <filename>classoaTimeStamp.html</filename>
    <member kind="function">
      <type></type>
      <name>oaTimeStamp</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaTimeStamp</name>
      <anchor>a1</anchor>
      <arglist>(oaUInt4 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a2</anchor>
      <arglist>(oaUInt4 st)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a3</anchor>
      <arglist>(const oaTimeStamp &amp;st)</arglist>
    </member>
    <member kind="function">
      <type>oaTimeStamp &amp;</type>
      <name>operator++</name>
      <anchor>a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaTimeStamp &amp;</type>
      <name>operator++</name>
      <anchor>a5</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>oaTimeStamp &amp;</type>
      <name>operator+=</name>
      <anchor>a6</anchor>
      <arglist>(oaUInt4 value)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a7</anchor>
      <arglist>(const oaTimeStamp &amp;timeStamp) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a8</anchor>
      <arglist>(const oaTimeStamp &amp;timeStamp) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaUInt4</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend oaBoolean</type>
      <name>operator==</name>
      <anchor>l0</anchor>
      <arglist>(const oaTimeStamp &amp;s1, const oaUInt4 s2)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend oaBoolean</type>
      <name>operator==</name>
      <anchor>l1</anchor>
      <arglist>(const oaUInt4 s1, const oaTimeStamp &amp;s2)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend oaBoolean</type>
      <name>operator!=</name>
      <anchor>l2</anchor>
      <arglist>(const oaTimeStamp &amp;s1, const oaUInt4 s2)</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend oaBoolean</type>
      <name>operator!=</name>
      <anchor>l3</anchor>
      <arglist>(const oaUInt4 s1, const oaTimeStamp &amp;s2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaTransform</name>
    <filename>classoaTransform.html</filename>
    <member kind="function">
      <type></type>
      <name>oaTransform</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaTransform</name>
      <anchor>a1</anchor>
      <arglist>(const oaPoint &amp;offsetIn, oaOrient orientIn=oacR0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaTransform</name>
      <anchor>a2</anchor>
      <arglist>(oaOffset xOffsetIn, oaOffset yOffsetIn, oaOrient orientIn=oacR0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaTransform</name>
      <anchor>a3</anchor>
      <arglist>(oaOrient orientIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaTransform</name>
      <anchor>a4</anchor>
      <arglist>(const oaTransform &amp;xform1, const oaTransform &amp;xform2)</arglist>
    </member>
    <member kind="function">
      <type>oaPoint &amp;</type>
      <name>offset</name>
      <anchor>a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaOffset &amp;</type>
      <name>xOffset</name>
      <anchor>a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaOffset &amp;</type>
      <name>yOffset</name>
      <anchor>a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaOrient &amp;</type>
      <name>orient</name>
      <anchor>a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaPoint &amp;</type>
      <name>offset</name>
      <anchor>a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaOffset</type>
      <name>xOffset</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaOffset</type>
      <name>yOffset</name>
      <anchor>a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaOrient</type>
      <name>orient</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a13</anchor>
      <arglist>(const oaPoint &amp;offsetIn, oaOrient orientIn=oacR0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a14</anchor>
      <arglist>(oaOffset xOffsetIn, oaOffset yOffsetIn, oaOrient orientIn=oacR0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a15</anchor>
      <arglist>(oaOrient orientIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a16</anchor>
      <arglist>(const oaTransform &amp;xform1, const oaTransform &amp;xform2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchor>a17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invert</name>
      <anchor>a18</anchor>
      <arglist>(oaTransform &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invert</name>
      <anchor>a19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>concat</name>
      <anchor>a20</anchor>
      <arglist>(const oaTransform &amp;xform, oaTransform &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>concat</name>
      <anchor>a21</anchor>
      <arglist>(const oaTransform &amp;xform)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isIdentity</name>
      <anchor>a22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a23</anchor>
      <arglist>(const oaTransform &amp;xform) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a24</anchor>
      <arglist>(const oaTransform &amp;xform) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaType</name>
    <filename>classoaType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaType</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaType</name>
      <anchor>a1</anchor>
      <arglist>(oaTypeEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaType</name>
      <anchor>a2</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaType</name>
      <anchor>a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaTypeEnum</name>
      <anchor>a5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaUInt8Range</name>
    <filename>classoaUInt8Range.html</filename>
    <base>oaRange&lt; oaUInt8 &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaUInt8Range</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaUInt8Range</name>
      <anchor>a1</anchor>
      <arglist>(oaRangeType type, oaUInt8 value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaUInt8Range</name>
      <anchor>a2</anchor>
      <arglist>(oaRangeType type, oaUInt8 lowerBoundIn, oaUInt8 upperBoundIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaUInt8RangeValue</name>
    <filename>classoaUInt8RangeValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt8Range &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(const oaUInt8Range &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaUInt8RangeValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oaUInt8Range &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaUInt8Value</name>
    <filename>classoaUInt8Value.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>oaUInt8</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(oaUInt8 value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaUInt8Value *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, oaUInt8 value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaUnixNS</name>
    <filename>classoaUnixNS.html</filename>
    <base>oaNameSpace</base>
    <member kind="function">
      <type></type>
      <name>oaUnixNS</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaValue</name>
    <filename>classoaValue.html</filename>
    <base>oaObject</base>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isOwned</name>
      <anchor>a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaObject *</type>
      <name>getOwner</name>
      <anchor>a2</anchor>
      <arglist>(oaBoolean local=false) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>isEqual</name>
      <anchor>a3</anchor>
      <arglist>(oaValue *value) const</arglist>
    </member>
    <member kind="function">
      <type>oaValue *</type>
      <name>copy</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaValue *</type>
      <name>copyTo</name>
      <anchor>a5</anchor>
      <arglist>(oaObject *database) const</arglist>
    </member>
    <member kind="enumvalue">
      <name>dtIndex</name>
      <anchor>s1s0</anchor>
      <init> oacBaseValueDataType</init>
    </member>
  </compound>
  <compound kind="class">
    <name>oaValueArray</name>
    <filename>classoaValueArray.html</filename>
    <base>oaArray&lt; oaValue * &gt;</base>
    <member kind="function">
      <type></type>
      <name>oaValueArray</name>
      <anchor>a0</anchor>
      <arglist>(oaUInt4 sizeIn=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaValueArrayValue</name>
    <filename>classoaValueArrayValue.html</filename>
    <base>oaValue</base>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a0</anchor>
      <arglist>(oaValueArray &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a1</anchor>
      <arglist>(const oaValueArray &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaValueArrayValue *</type>
      <name>create</name>
      <anchor>d0</anchor>
      <arglist>(oaObject *database, const oaValueArray &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaVarDataAppDef</name>
    <filename>classoaVarDataAppDef.html</filename>
    <templarg>T</templarg>
    <base>oaAppDef</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a0</anchor>
      <arglist>(T *object, oaUInt4 dataSize, const oaByte *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a1</anchor>
      <arglist>(const T *object, oaByte *value)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getSize</name>
      <anchor>a2</anchor>
      <arglist>(const T *object)</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getDefaultSize</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getDefault</name>
      <anchor>a4</anchor>
      <arglist>(oaByte *value) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaVarDataAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaVarDataAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(const oaString &amp;name, oaUInt4 defSize, const oaByte *defValue, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaVarDataAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d2</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaVarDataAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d3</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef, oaUInt4 defSize, const oaByte *defValue, oaBoolean persist=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaVarDataAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d4</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaVarDataAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d5</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaVector</name>
    <filename>classoaVector.html</filename>
    <member kind="function">
      <type></type>
      <name>oaVector</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaVector</name>
      <anchor>a1</anchor>
      <arglist>(oaOffset xValIn, oaOffset yValIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaVector</name>
      <anchor>a2</anchor>
      <arglist>(const oaPoint &amp;head)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaVector</name>
      <anchor>a3</anchor>
      <arglist>(const oaPoint &amp;tail, const oaPoint &amp;head)</arglist>
    </member>
    <member kind="function">
      <type>oaOffset &amp;</type>
      <name>x</name>
      <anchor>a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaOffset &amp;</type>
      <name>y</name>
      <anchor>a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaOffset</type>
      <name>x</name>
      <anchor>a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaOffset</type>
      <name>y</name>
      <anchor>a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a8</anchor>
      <arglist>(const oaPoint &amp;tail, const oaPoint &amp;head)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLength</name>
      <anchor>a9</anchor>
      <arglist>(const oaInt4 length)</arglist>
    </member>
    <member kind="function">
      <type>oaInt4</type>
      <name>getLength</name>
      <anchor>a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>leftOf</name>
      <anchor>a11</anchor>
      <arglist>(const oaVector &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>rightOf</name>
      <anchor>a12</anchor>
      <arglist>(const oaVector &amp;ref) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate90</name>
      <anchor>a13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate180</name>
      <anchor>a14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate270</name>
      <anchor>a15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToPoint</name>
      <anchor>a16</anchor>
      <arglist>(const oaPoint &amp;start, oaPoint &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subFromPoint</name>
      <anchor>a17</anchor>
      <arglist>(const oaPoint &amp;start, oaPoint &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>intersects</name>
      <anchor>a18</anchor>
      <arglist>(const oaPoint &amp;ref, const oaVector &amp;other, const oaPoint &amp;otherRef, oaPoint &amp;iPt) const</arglist>
    </member>
    <member kind="function">
      <type>oaDouble</type>
      <name>operator *</name>
      <anchor>a19</anchor>
      <arglist>(const oaVector &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a20</anchor>
      <arglist>(const oaVector &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a21</anchor>
      <arglist>(const oaVector &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchor>a22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaDouble</type>
      <name>getCosAngle</name>
      <anchor>a23</anchor>
      <arglist>(const oaVector &amp;v) const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaChecker&lt; oaVector &gt;</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaVectorBitName</name>
    <filename>classoaVectorBitName.html</filename>
    <base>oaNameBase</base>
    <member kind="function">
      <type></type>
      <name>oaVectorBitName</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaVectorBitName</name>
      <anchor>a1</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaVectorBitName</name>
      <anchor>a2</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in, oaUInt4 index)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaVectorBitName</name>
      <anchor>a3</anchor>
      <arglist>(const oaScalarName &amp;in, oaUInt4 index)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaVectorBitName</name>
      <anchor>a4</anchor>
      <arglist>(const oaVectorBitName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchor>a5</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in, oaBoolean baseOnly=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a6</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a7</anchor>
      <arglist>(oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBaseName</name>
      <anchor>a8</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBaseName</name>
      <anchor>a9</anchor>
      <arglist>(oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBaseName</name>
      <anchor>a10</anchor>
      <arglist>(oaScalarName &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getIndex</name>
      <anchor>a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumBits</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIndex</name>
      <anchor>a13</anchor>
      <arglist>(oaUInt4 val)</arglist>
    </member>
    <member kind="function">
      <type>oaVectorBitName &amp;</type>
      <name>operator=</name>
      <anchor>a14</anchor>
      <arglist>(const oaVectorBitName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a16</anchor>
      <arglist>(const oaVectorBitName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a17</anchor>
      <arglist>(const oaVectorBitName &amp;name) const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaNameTbl</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaVectorName</name>
    <filename>classoaVectorName.html</filename>
    <base>oaNameBase</base>
    <member kind="function">
      <type></type>
      <name>oaVectorName</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaVectorName</name>
      <anchor>a1</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in, oaUInt4 start, oaUInt4 stop, oaUInt4 step=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaVectorName</name>
      <anchor>a2</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaVectorName</name>
      <anchor>a3</anchor>
      <arglist>(const oaScalarName &amp;in, oaUInt4 start, oaUInt4 stop, oaUInt4 step=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaVectorName</name>
      <anchor>a4</anchor>
      <arglist>(const oaVectorName &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchor>a5</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, const oaChar *in, oaBoolean baseOnly=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a6</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get</name>
      <anchor>a7</anchor>
      <arglist>(oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBaseName</name>
      <anchor>a8</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBaseName</name>
      <anchor>a9</anchor>
      <arglist>(oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBaseName</name>
      <anchor>a10</anchor>
      <arglist>(oaScalarName &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBitName</name>
      <anchor>a11</anchor>
      <arglist>(const oaNameSpace &amp;nSpace, oaUInt4 bit, oaString &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getNumBits</name>
      <anchor>a12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getStart</name>
      <anchor>a13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getStop</name>
      <anchor>a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>oaUInt4</type>
      <name>getStep</name>
      <anchor>a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStart</name>
      <anchor>a16</anchor>
      <arglist>(oaUInt4 val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStop</name>
      <anchor>a17</anchor>
      <arglist>(oaUInt4 val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStep</name>
      <anchor>a18</anchor>
      <arglist>(oaUInt4 val)</arglist>
    </member>
    <member kind="function">
      <type>oaVectorName &amp;</type>
      <name>operator=</name>
      <anchor>a19</anchor>
      <arglist>(const oaVectorName &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator==</name>
      <anchor>a21</anchor>
      <arglist>(const oaVectorName &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>oaBoolean</type>
      <name>operator!=</name>
      <anchor>a22</anchor>
      <arglist>(const oaVectorName &amp;name) const</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>oaNameTbl</name>
      <anchor>l0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaVerilogNS</name>
    <filename>classoaVerilogNS.html</filename>
    <base>oaNameSpace</base>
    <member kind="function">
      <type></type>
      <name>oaVerilogNS</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaVerilogNS</name>
      <anchor>a1</anchor>
      <arglist>(const oaVerilogNS &amp;ns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaVerilogNS</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaVhdlNS</name>
    <filename>classoaVhdlNS.html</filename>
    <base>oaNameSpace</base>
    <member kind="function">
      <type></type>
      <name>oaVhdlNS</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaVhdlNS</name>
      <anchor>a1</anchor>
      <arglist>(const oaVhdlNS &amp;ns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaVhdlNS</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaVhdlNS &amp;</type>
      <name>operator=</name>
      <anchor>a3</anchor>
      <arglist>(const oaVhdlNS &amp;ns)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaViaExtensionType</name>
    <filename>classoaViaExtensionType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaViaExtensionType</name>
      <anchor>a0</anchor>
      <arglist>(oaViaExtensionTypeEnum type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaViaExtensionType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaViaExtensionTypeEnum</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaVoidPointerAppDef</name>
    <filename>classoaVoidPointerAppDef.html</filename>
    <templarg>T</templarg>
    <base>oaAppDef</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchor>a0</anchor>
      <arglist>(T *object, const void *value)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>get</name>
      <anchor>a1</anchor>
      <arglist>(const T *object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaVoidPointerAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d0</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaVoidPointerAppDef&lt; T &gt; *</type>
      <name>get</name>
      <anchor>d1</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaVoidPointerAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d2</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>oaVoidPointerAppDef&lt; T &gt; *</type>
      <name>find</name>
      <anchor>d3</anchor>
      <arglist>(const oaString &amp;name, const oaAppObjectDef *objDef)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaWidthLengthTableType</name>
    <filename>classoaWidthLengthTableType.html</filename>
    <member kind="function">
      <type></type>
      <name>oaWidthLengthTableType</name>
      <anchor>a0</anchor>
      <arglist>(oaWidthLengthTableTypeEnum valueIn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaWidthLengthTableType</name>
      <anchor>a1</anchor>
      <arglist>(const oaString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaWidthLengthTableType</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const oaString &amp;</type>
      <name>getName</name>
      <anchor>a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator oaWidthLengthTableTypeEnum</name>
      <anchor>a4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>oaWinNS</name>
    <filename>classoaWinNS.html</filename>
    <base>oaNameSpace</base>
    <member kind="function">
      <type></type>
      <name>oaWinNS</name>
      <anchor>a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>oaWinNS</name>
      <anchor>a1</anchor>
      <arglist>(const oaWinNS &amp;ns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~oaWinNS</name>
      <anchor>a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>oaWinNS &amp;</type>
      <name>operator=</name>
      <anchor>a3</anchor>
      <arglist>(const oaWinNS &amp;ns)</arglist>
    </member>
  </compound>
</tagfile>
